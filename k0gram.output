Terminals unused in grammar

    RESERVED
    EXCL_WS
    DOUBLE_ARROW
    COLONCOLON
    DOUBLE_SEMICOLON
    HASH
    AT_NO_WS
    AT_POST_WS
    AT_PRE_WS
    AT_BOTH_WS
    QUEST_WS
    QUEST_DOT
    AS_SAFE
    SINGLE_QUOTE
    RETURN_AT
    CONTINUE_AT
    BREAK_AT
    THIS_AT
    SUPER_AT
    FILES
    FIELD
    PROPERTY
    GET
    SET
    RECEIVER
    PARAM
    SETPARAM
    DELEGATE
    PACKAGE
    IMPORT
    INTERFACE
    OBJECT
    TYPEALIAS
    CONSTRUCTOR
    BY
    COMPANION
    INIT
    THIS
    SUPER
    TYPEOF
    WHERE
    TRY
    CATCH
    FINALLY
    THROW
    AS
    IS
    OUT
    DYNAMIC
    PUBLIC
    PRIVATE
    PROTECTED
    INTERNAL
    ENUM
    SEALED
    ANNOTATION
    DATA
    INNER
    TAILREC
    OPERATOR
    INLINE
    INFIX
    EXTERNAL
    SUSPEND
    OVERRIDE
    ABSTRACT
    NULL_LITERAL
    FINAL
    OPEN
    LATEINIT
    VARARG
    NOINLINE
    CROSSINLINE
    REIFIED
    EXPECT
    ACTUAL
    REAL_LITERAL
    DOUBLE_LITERAL
    HEX_LITERAL
    BIN_LITERAL
    UNSIGNED_LITERAL
    LONG_LITERAL
    INT
    FLOAT
    BOOLEAN
    CHAR
    STRING
    BYTE
    T_EOF
    AND
    OR
    LOWER_THAN_ELSE


State 44 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 101 conflicts: 13 shift/reduce
State 113 conflicts: 13 shift/reduce
State 121 conflicts: 2 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 133 conflicts: 4 shift/reduce
State 134 conflicts: 4 shift/reduce
State 136 conflicts: 2 shift/reduce
State 137 conflicts: 1 shift/reduce
State 138 conflicts: 2 shift/reduce
State 139 conflicts: 3 shift/reduce
State 148 conflicts: 13 shift/reduce
State 150 conflicts: 13 shift/reduce
State 155 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 166 conflicts: 2 shift/reduce
State 167 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 175 conflicts: 2 shift/reduce
State 205 conflicts: 7 shift/reduce
State 211 conflicts: 13 shift/reduce
State 262 conflicts: 1 shift/reduce
State 263 conflicts: 4 shift/reduce
State 264 conflicts: 4 shift/reduce
State 266 conflicts: 1 shift/reduce
State 267 conflicts: 1 shift/reduce
State 268 conflicts: 2 shift/reduce
State 275 conflicts: 1 shift/reduce
State 294 conflicts: 13 shift/reduce
State 300 conflicts: 13 shift/reduce
State 312 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 329 conflicts: 13 shift/reduce
State 335 conflicts: 1 shift/reduce
State 337 conflicts: 13 shift/reduce
State 359 conflicts: 13 shift/reduce
State 363 conflicts: 13 shift/reduce
State 365 conflicts: 1 shift/reduce
State 367 conflicts: 13 shift/reduce
State 373 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: topLevelObjects

    2 topLevelObjects: topLevelObject
    3                | topLevelObjects topLevelObject

    4 topLevelObject: declaration semis

    5 opt_functionBody: functionBody
    6                 | ε

    7 opt_colon_type: COLON type
    8               | ε

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

   11 functionValueParameters: LPAREN opt_functionValueParameter RPAREN

   12 functionValueParameter: parameter opt_eq_exp

   13 parameter: simpleIdentifier COLON type

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter
   15                              | ε

   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA
   17                           | functionValueParameter multi_comma_functionParameter
   18                           | ε

   19 type: nullableType

   20 functionBody: block
   21             | ASSIGNMENT expression SEMICOLON

   22 block: LCURL statements RCURL

   23 semis: SEMICOLON
   24      | ε

   25 semis_statement: semis_statement semis statement
   26                | ε

   27 optional_statement_sequence: statement semis_statement
   28                            | ε

   29 statements: optional_statement_sequence

   30 statement: declaration semis
   31          | assignment semis
   32          | expression semis
   33          | loopStatement semis

   34 declaration: classDeclaration
   35            | functionDeclaration
   36            | propertyDeclaration

   37 val_var: VAR
   38        | VAL

   39 opt_modifier: CONST

   40 $@1: ε

   41 opt_modifier: $@1

   42 parenthesizedType: LPAREN type RPAREN

   43 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType

   44 $@2: ε

   45 multi_dot_simpleUserType: $@2

   46 userType: simpleUserType multi_dot_simpleUserType

   47 simpleUserType: simpleIdentifier typeArguments
   48               | simpleIdentifier

   49 multi_quest: multi_quest QUEST_NO_WS

   50 $@3: ε

   51 multi_quest: $@3

   52 nullableType: typeRef_parenthesizedType multi_quest
   53             | TYPELITERAL multi_quest

   54 typeRef_parenthesizedType: parenthesizedType
   55                          | userType

   56 opt_eq_exp: ASSIGNMENT expression

   57 $@4: ε

   58 opt_eq_exp: $@4

   59 multivariable_variableDeclaration: variableDeclaration
   60                                  | multiVariableDeclaration

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

   64 opt_typeParameters: typeParameters
   65                   | ε

   66 opt_comma: COMMA
   67          | ε

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE

   69 typeParameter: simpleIdentifier

   70 multi_typeParameter: multi_typeParameter COMMA typeParameter
   71                    | ε

   72 simpleIdentifier: IDENTIFIER

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody
   74                 | CLASS simpleIdentifier opt_typeParameters classBody

   75 variableDeclaration: type COLON type
   76                    | type

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration
   79                                | ε

   80 classBody: LCURL classMembers RCURL

   81 assignmentAndOperator: ADD_ASSIGNMENT
   82                      | SUB_ASSIGNMENT
   83                      | MULT_ASSIGNMENT
   84                      | DIV_ASSIGNMENT
   85                      | MOD_ASSIGNMENT

   86 assignableExpression: prefixUnaryExpression
   87                     | parenthesizedAssignableExpression

   88 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator

   89 $@5: ε

   90 multi_unaryPrefix: $@5

   91 prefixUnaryOperator: ADD
   92                    | SUB
   93                    | INCR
   94                    | DECR
   95                    | EXCL_NO_WS EXCL_NO_WS

   96 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN

   98 assignment: directly_assign expression

   99 directly_assign: directlyAssignableExpression ASSIGNMENT
  100                | assignableExpression assignmentAndOperator

  101 assignableSuffix: indexingSuffix
  102                 | typeArguments

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE

  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection

  105 $@6: ε

  106 multi_comma_typeProjection: $@6

  107 typeProjection: type
  108               | MULT

  109 directlyAssignableExpression: postfixUnaryExpression assignableSuffix
  110                             | simpleIdentifier
  111                             | parenthesizedDirectlyAssignableExpression

  112 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN

  113 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix

  114 $@7: ε

  115 multi_postfixUnarySuffix: $@7

  116 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix

  117 postfixUnarySuffix: postfixUnaryOperator
  118                   | indexingSuffix
  119                   | callSuffix
  120                   | navigationSuffix

  121 identifier_expression_class: simpleIdentifier
  122                            | parenthesizedExpression
  123                            | CLASS

  124 navigationSuffix: memberAccessOperator identifier_expression_class

  125 memberAccessOperator: DOT
  126                     | QUEST_NO_WS DOT

  127 postfixUnaryOperator: INCR
  128                     | DECR
  129                     | EXCL_NO_WS EXCL_NO_WS

  130 multi_comma_expression: multi_comma_expression COMMA expression

  131 $@8: ε

  132 multi_comma_expression: $@8

  133 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE

  134 callSuffix: valueArguments

  135 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument

  136 $@9: ε

  137 multi_comma_valueArgument: $@9

  138 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma

  139 $@10: ε

  140 opt_valueArgument: $@10

  141 valueArguments: LPAREN opt_valueArgument RPAREN

  142 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT

  143 $@11: ε

  144 opt_simpleIdentifier_EQ: $@11

  145 opt_Multi: MULT

  146 $@12: ε

  147 opt_Multi: $@12

  148 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression

  149 parenthesizedExpression: LPAREN expression RPAREN

  150 ifExpression: IF LPAREN expression RPAREN controls

  151 controls: controlStructureBody ELSE controlStructureBody
  152         | controlStructureBody

  153 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis
  154             | dotExpression LPAREN functionArguments RPAREN semis

  155 dotExpression: IDENTIFIER DOT IDENTIFIER
  156              | dotExpression DOT IDENTIFIER

  157 functionArguments: expression
  158                  | functionArguments COMMA expression
  159                  | ε

  160 variable_multivariable: variableDeclaration
  161                       | multiVariableDeclaration

  162 control_structure_body_or_comma: controlStructureBody
  163                                | COMMA

  164 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma
  165              | FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody
  166              | DO controlStructureBody WHILE LPAREN expression RPAREN

  167 controlStructureBody: block
  168                     | statement

  169 jumpExpression: RETURN expression
  170               | RETURN
  171               | CONTINUE
  172               | BREAK

  173 multi_whenEntry: multi_whenEntry whenEntry
  174                | ε

  175 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL
  176               | WHEN LCURL multi_whenEntry RCURL

  177 whenSubject: LPAREN expression RPAREN
  178            | LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN

  179 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition

  180 $@13: ε

  181 multi_comma_whenCondition: $@13

  182 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody
  183          | whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody
  184          | ELSE ARROW controlStructureBody SEMICOLON
  185          | ELSE ARROW controlStructureBody

  186 whenCondition: expression
  187              | rangeTest

  188 rangeTest: IN expression

  189 classMembers: ε
  190             | classMembers classMember

  191 classMember: functionDeclaration
  192            | variableDeclaration

  193 expression: disjunction

  194 disjunction: conjunction
  195            | disjunction DISJ conjunction

  196 conjunction: equality
  197            | conjunction CONJ equality

  198 equality: comparison
  199         | equality equality_operator comparison

  200 comparison: genericCallLikeComparison
  201           | comparison comparison_operator genericCallLikeComparison

  202 genericCallLikeComparison: elvisExpression
  203                          | elvisExpression IN elvisExpression

  204 elvisExpression: rangeExpression
  205                | elvisExpression QUEST_COLON rangeExpression

  206 rangeExpression: additiveExpression
  207                | rangeExpression RANGE additiveExpression

  208 additiveExpression: multiplicativeExpression
  209                   | additiveExpression ADD multiplicativeExpression
  210                   | additiveExpression SUB multiplicativeExpression

  211 multiplicativeExpression: postfixUnaryExpression
  212                         | multiplicativeExpression MULT postfixUnaryExpression
  213                         | multiplicativeExpression DIV postfixUnaryExpression
  214                         | multiplicativeExpression MOD postfixUnaryExpression

  215 primaryExpression: parenthesizedExpression
  216                  | simpleIdentifier
  217                  | functionCall
  218                  | INTEGER_LITERAL
  219                  | STRING_LITERAL
  220                  | BOOLEAN_LITERAL
  221                  | FLOAT_LITERAL
  222                  | CHARACTER_LITERAL
  223                  | jumpExpression
  224                  | collectionLiteral
  225                  | ifExpression
  226                  | whenExpression

  227 collectionLiteral: LSQUARE RSQUARE
  228                  | LSQUARE expression COMMA RSQUARE
  229                  | LSQUARE expression RSQUARE
  230                  | LSQUARE expression multi_comma_expression RSQUARE
  231                  | LSQUARE expression multi_comma_expression COMMA RSQUARE

  232 comparison_operator: LANGLE
  233                    | RANGLE
  234                    | LE
  235                    | GE

  236 equality_operator: EQEQ
  237                  | EQEQEQ
  238                  | EXCL_EQ
  239                  | EXCL_EQEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    RESERVED <treeptr> (258)
    DOT <treeptr> (259) 9 43 61 125 126 155 156
    COMMA <treeptr> (260) 14 16 66 70 78 104 130 135 158 163 179 183 228 231
    LPAREN <treeptr> (261) 11 42 77 97 112 141 149 150 153 154 164 165 166 177 178
    RPAREN <treeptr> (262) 11 42 77 97 112 141 149 150 153 154 164 165 166 177 178
    LSQUARE <treeptr> (263) 133 227 228 229 230 231
    RSQUARE <treeptr> (264) 133 227 228 229 230 231
    LCURL <treeptr> (265) 22 80 175 176
    RCURL <treeptr> (266) 22 80 175 176
    INCR <treeptr> (267) 93 127
    DECR <treeptr> (268) 94 128
    CONJ <treeptr> (269) 197
    DISJ <treeptr> (270) 195
    EXCL_WS <treeptr> (271)
    EXCL_NO_WS <treeptr> (272) 95 129
    COLON <treeptr> (273) 7 13 75
    SEMICOLON <treeptr> (274) 21 23 61 62 184
    ASSIGNMENT <treeptr> (275) 21 56 99 142 178
    ADD_ASSIGNMENT <treeptr> (276) 81
    SUB_ASSIGNMENT <treeptr> (277) 82
    MULT_ASSIGNMENT <treeptr> (278) 83
    DIV_ASSIGNMENT <treeptr> (279) 84
    MOD_ASSIGNMENT <treeptr> (280) 85
    ARROW <treeptr> (281) 182 183 184 185
    DOUBLE_ARROW <treeptr> (282)
    RANGE <treeptr> (283) 207
    COLONCOLON <treeptr> (284)
    DOUBLE_SEMICOLON <treeptr> (285)
    HASH <treeptr> (286)
    AT_NO_WS <treeptr> (287)
    AT_POST_WS <treeptr> (288)
    AT_PRE_WS <treeptr> (289)
    AT_BOTH_WS <treeptr> (290)
    QUEST_WS <treeptr> (291)
    QUEST_NO_WS <treeptr> (292) 49 126
    LANGLE <treeptr> (293) 68 103 232
    RANGLE <treeptr> (294) 68 103 233
    LE <treeptr> (295) 234
    GE <treeptr> (296) 235
    QUEST_DOT <treeptr> (297)
    EXCL_EQ <treeptr> (298) 238
    EXCL_EQEQ <treeptr> (299) 239
    AS_SAFE <treeptr> (300)
    EQEQ <treeptr> (301) 236
    EQEQEQ <treeptr> (302) 237
    SINGLE_QUOTE <treeptr> (303)
    RETURN_AT <treeptr> (304)
    CONTINUE_AT <treeptr> (305)
    BREAK_AT <treeptr> (306)
    THIS_AT <treeptr> (307)
    SUPER_AT <treeptr> (308)
    FILES <treeptr> (309)
    FIELD <treeptr> (310)
    PROPERTY <treeptr> (311)
    GET <treeptr> (312)
    QUEST_COLON <treeptr> (313) 205
    SET <treeptr> (314)
    RECEIVER <treeptr> (315)
    PARAM <treeptr> (316)
    SETPARAM <treeptr> (317)
    DELEGATE <treeptr> (318)
    PACKAGE <treeptr> (319)
    IMPORT <treeptr> (320)
    CLASS <treeptr> (321) 73 74 123
    INTERFACE <treeptr> (322)
    FUN <treeptr> (323) 9 10
    OBJECT <treeptr> (324)
    VAL <treeptr> (325) 38 178
    VAR <treeptr> (326) 37
    TYPEALIAS <treeptr> (327)
    CONSTRUCTOR <treeptr> (328)
    BY <treeptr> (329)
    COMPANION <treeptr> (330)
    INIT <treeptr> (331)
    THIS <treeptr> (332)
    SUPER <treeptr> (333)
    TYPEOF <treeptr> (334)
    WHERE <treeptr> (335)
    IF <treeptr> (336) 150
    ELSE <treeptr> (337) 151 184 185
    WHEN <treeptr> (338) 175 176
    TRY <treeptr> (339)
    CATCH <treeptr> (340)
    FINALLY <treeptr> (341)
    FOR <treeptr> (342) 165
    DO <treeptr> (343) 166
    WHILE <treeptr> (344) 164 166
    THROW <treeptr> (345)
    RETURN <treeptr> (346) 169 170
    CONTINUE <treeptr> (347) 171
    BREAK <treeptr> (348) 172
    AS <treeptr> (349)
    IS <treeptr> (350)
    IN <treeptr> (351) 165 188 203
    OUT <treeptr> (352)
    DYNAMIC <treeptr> (353)
    PUBLIC <treeptr> (354)
    PRIVATE <treeptr> (355)
    PROTECTED <treeptr> (356)
    INTERNAL <treeptr> (357)
    ENUM <treeptr> (358)
    SEALED <treeptr> (359)
    ANNOTATION <treeptr> (360)
    DATA <treeptr> (361)
    INNER <treeptr> (362)
    TAILREC <treeptr> (363)
    OPERATOR <treeptr> (364)
    INLINE <treeptr> (365)
    INFIX <treeptr> (366)
    EXTERNAL <treeptr> (367)
    SUSPEND <treeptr> (368)
    OVERRIDE <treeptr> (369)
    ABSTRACT <treeptr> (370)
    NULL_LITERAL <treeptr> (371)
    FINAL <treeptr> (372)
    OPEN <treeptr> (373)
    CONST <treeptr> (374) 39 73
    LATEINIT <treeptr> (375)
    VARARG <treeptr> (376)
    NOINLINE <treeptr> (377)
    CROSSINLINE <treeptr> (378)
    REIFIED <treeptr> (379)
    EXPECT <treeptr> (380)
    ACTUAL <treeptr> (381)
    REAL_LITERAL <treeptr> (382)
    FLOAT_LITERAL <treeptr> (383) 221
    DOUBLE_LITERAL <treeptr> (384)
    INTEGER_LITERAL <treeptr> (385) 218
    CHARACTER_LITERAL <treeptr> (386) 222
    HEX_LITERAL <treeptr> (387)
    BIN_LITERAL <treeptr> (388)
    UNSIGNED_LITERAL <treeptr> (389)
    LONG_LITERAL <treeptr> (390)
    BOOLEAN_LITERAL <treeptr> (391) 220
    STRING_LITERAL <treeptr> (392) 219
    INT <treeptr> (393)
    FLOAT <treeptr> (394)
    BOOLEAN <treeptr> (395)
    CHAR <treeptr> (396)
    STRING <treeptr> (397)
    BYTE <treeptr> (398)
    T_EOF <treeptr> (399)
    TYPELITERAL <treeptr> (400) 53
    MULT <treeptr> (401) 108 145 212
    MOD <treeptr> (402) 214
    DIV <treeptr> (403) 213
    ADD <treeptr> (404) 91 209
    SUB <treeptr> (405) 92 210
    IDENTIFIER <treeptr> (406) 72 153 155 156
    AND (407)
    OR (408)
    LOWER_THAN_ELSE (409)


Nonterminals, with rules where they appear

    $accept (155)
        on left: 0
    program <treeptr> (156)
        on left: 1
        on right: 0
    topLevelObjects <treeptr> (157)
        on left: 2 3
        on right: 1 3
    topLevelObject <treeptr> (158)
        on left: 4
        on right: 2 3
    opt_functionBody <treeptr> (159)
        on left: 5 6
        on right: 9 10
    opt_colon_type <treeptr> (160)
        on left: 7 8
        on right: 9 10
    functionDeclaration <treeptr> (161)
        on left: 9 10
        on right: 35 191
    functionValueParameters <treeptr> (162)
        on left: 11
        on right: 9 10
    functionValueParameter <treeptr> (163)
        on left: 12
        on right: 14 16 17
    parameter <treeptr> (164)
        on left: 13
        on right: 12
    multi_comma_functionParameter <treeptr> (165)
        on left: 14 15
        on right: 14 16 17
    opt_functionValueParameter <treeptr> (166)
        on left: 16 17 18
        on right: 11
    type <treeptr> (167)
        on left: 19
        on right: 7 13 42 75 76 107
    functionBody <treeptr> (168)
        on left: 20 21
        on right: 5
    block <treeptr> (169)
        on left: 22
        on right: 20 167
    semis <treeptr> (170)
        on left: 23 24
        on right: 4 25 30 31 32 33 153 154
    semis_statement <treeptr> (171)
        on left: 25 26
        on right: 25 27
    optional_statement_sequence <treeptr> (172)
        on left: 27 28
        on right: 29
    statements <treeptr> (173)
        on left: 29
        on right: 22
    statement <treeptr> (174)
        on left: 30 31 32 33
        on right: 25 27 168
    declaration <treeptr> (175)
        on left: 34 35 36
        on right: 4 30
    val_var <treeptr> (176)
        on left: 37 38
        on right: 61 62 63
    opt_modifier <treeptr> (177)
        on left: 39 41
        on right: 61 62 63
    $@1 (178)
        on left: 40
        on right: 41
    parenthesizedType <treeptr> (179)
        on left: 42
        on right: 54
    multi_dot_simpleUserType <treeptr> (180)
        on left: 43 45
        on right: 43 46
    $@2 (181)
        on left: 44
        on right: 45
    userType <treeptr> (182)
        on left: 46
        on right: 55
    simpleUserType <treeptr> (183)
        on left: 47 48
        on right: 43 46
    multi_quest <treeptr> (184)
        on left: 49 51
        on right: 49 52 53
    $@3 (185)
        on left: 50
        on right: 51
    nullableType <treeptr> (186)
        on left: 52 53
        on right: 9 19 61
    typeRef_parenthesizedType <treeptr> (187)
        on left: 54 55
        on right: 52
    opt_eq_exp <treeptr> (188)
        on left: 56 58
        on right: 12 61 62 63
    $@4 (189)
        on left: 57
        on right: 58
    multivariable_variableDeclaration <treeptr> (190)
        on left: 59 60
        on right: 61 62 63
    propertyDeclaration <treeptr> (191)
        on left: 61 62 63
        on right: 36
    opt_typeParameters <treeptr> (192)
        on left: 64 65
        on right: 9 10 61 62 63 73 74
    opt_comma <treeptr> (193)
        on left: 66 67
        on right: 68 77 103 133 138
    typeParameters <treeptr> (194)
        on left: 68
        on right: 64
    typeParameter <treeptr> (195)
        on left: 69
        on right: 68 70
    multi_typeParameter <treeptr> (196)
        on left: 70 71
        on right: 68 70
    simpleIdentifier <treeptr> (197)
        on left: 72
        on right: 9 10 13 47 48 69 73 74 110 121 142 216
    classDeclaration <treeptr> (198)
        on left: 73 74
        on right: 34
    variableDeclaration <treeptr> (199)
        on left: 75 76
        on right: 59 77 78 160 178 192
    multiVariableDeclaration <treeptr> (200)
        on left: 77
        on right: 60 161
    multi_comma_variableDeclaration <treeptr> (201)
        on left: 78 79
        on right: 77 78
    classBody <treeptr> (202)
        on left: 80
        on right: 73 74
    assignmentAndOperator <treeptr> (203)
        on left: 81 82 83 84 85
        on right: 100
    assignableExpression <treeptr> (204)
        on left: 86 87
        on right: 97 100 112
    multi_unaryPrefix <treeptr> (205)
        on left: 88 90
        on right: 88 96
    $@5 (206)
        on left: 89
        on right: 90
    prefixUnaryOperator <treeptr> (207)
        on left: 91 92 93 94 95
        on right: 88
    prefixUnaryExpression <treeptr> (208)
        on left: 96
        on right: 86
    parenthesizedAssignableExpression <treeptr> (209)
        on left: 97
        on right: 87
    assignment <treeptr> (210)
        on left: 98
        on right: 31
    directly_assign <treeptr> (211)
        on left: 99 100
        on right: 98
    assignableSuffix <treeptr> (212)
        on left: 101 102
        on right: 109
    typeArguments <treeptr> (213)
        on left: 103
        on right: 47 102
    multi_comma_typeProjection <treeptr> (214)
        on left: 104 106
        on right: 103 104
    $@6 (215)
        on left: 105
        on right: 106
    typeProjection <treeptr> (216)
        on left: 107 108
        on right: 103 104
    directlyAssignableExpression <treeptr> (217)
        on left: 109 110 111
        on right: 99
    parenthesizedDirectlyAssignableExpression <treeptr> (218)
        on left: 112
        on right: 111
    multi_postfixUnarySuffix <treeptr> (219)
        on left: 113 115
        on right: 113 116
    $@7 (220)
        on left: 114
        on right: 115
    postfixUnaryExpression <treeptr> (221)
        on left: 116
        on right: 96 109 211 212 213 214
    postfixUnarySuffix <treeptr> (222)
        on left: 117 118 119 120
        on right: 113
    identifier_expression_class <treeptr> (223)
        on left: 121 122 123
        on right: 124
    navigationSuffix <treeptr> (224)
        on left: 124
        on right: 120
    memberAccessOperator <treeptr> (225)
        on left: 125 126
        on right: 124
    postfixUnaryOperator <treeptr> (226)
        on left: 127 128 129
        on right: 117
    multi_comma_expression <treeptr> (227)
        on left: 130 132
        on right: 130 133 230 231
    $@8 (228)
        on left: 131
        on right: 132
    indexingSuffix <treeptr> (229)
        on left: 133
        on right: 101 118
    callSuffix <treeptr> (230)
        on left: 134
        on right: 119
    multi_comma_valueArgument <treeptr> (231)
        on left: 135 137
        on right: 135 138
    $@9 (232)
        on left: 136
        on right: 137
    opt_valueArgument <treeptr> (233)
        on left: 138 140
        on right: 141
    $@10 (234)
        on left: 139
        on right: 140
    valueArguments <treeptr> (235)
        on left: 141
        on right: 134
    opt_simpleIdentifier_EQ <treeptr> (236)
        on left: 142 144
        on right: 148
    $@11 (237)
        on left: 143
        on right: 144
    opt_Multi <treeptr> (238)
        on left: 145 147
        on right: 148
    $@12 (239)
        on left: 146
        on right: 147
    valueArgument <treeptr> (240)
        on left: 148
        on right: 135 138
    parenthesizedExpression <treeptr> (241)
        on left: 149
        on right: 122 215
    ifExpression <treeptr> (242)
        on left: 150
        on right: 225
    controls <treeptr> (243)
        on left: 151 152
        on right: 150
    functionCall <treeptr> (244)
        on left: 153 154
        on right: 217
    dotExpression <treeptr> (245)
        on left: 155 156
        on right: 154 156
    functionArguments <treeptr> (246)
        on left: 157 158 159
        on right: 153 154 158
    variable_multivariable <treeptr> (247)
        on left: 160 161
        on right: 165
    control_structure_body_or_comma <treeptr> (248)
        on left: 162 163
        on right: 164
    loopStatement <treeptr> (249)
        on left: 164 165 166
        on right: 33
    controlStructureBody <treeptr> (250)
        on left: 167 168
        on right: 151 152 162 165 166 182 183 184 185
    jumpExpression <treeptr> (251)
        on left: 169 170 171 172
        on right: 223
    multi_whenEntry <treeptr> (252)
        on left: 173 174
        on right: 173 175 176
    whenExpression <treeptr> (253)
        on left: 175 176
        on right: 226
    whenSubject <treeptr> (254)
        on left: 177 178
        on right: 175
    multi_comma_whenCondition <treeptr> (255)
        on left: 179 181
        on right: 179 182 183
    $@13 (256)
        on left: 180
        on right: 181
    whenEntry <treeptr> (257)
        on left: 182 183 184 185
        on right: 173
    whenCondition <treeptr> (258)
        on left: 186 187
        on right: 179 182 183
    rangeTest <treeptr> (259)
        on left: 188
        on right: 187
    classMembers <treeptr> (260)
        on left: 189 190
        on right: 80 190
    classMember <treeptr> (261)
        on left: 191 192
        on right: 190
    expression <treeptr> (262)
        on left: 193
        on right: 21 32 56 98 130 133 148 149 150 157 158 164 165 166 169 177 178 186 188 228 229 230 231
    disjunction <treeptr> (263)
        on left: 194 195
        on right: 193 195
    conjunction <treeptr> (264)
        on left: 196 197
        on right: 194 195 197
    equality <treeptr> (265)
        on left: 198 199
        on right: 196 197 199
    comparison <treeptr> (266)
        on left: 200 201
        on right: 198 199 201
    genericCallLikeComparison <treeptr> (267)
        on left: 202 203
        on right: 200 201
    elvisExpression <treeptr> (268)
        on left: 204 205
        on right: 202 203 205
    rangeExpression <treeptr> (269)
        on left: 206 207
        on right: 204 205 207
    additiveExpression <treeptr> (270)
        on left: 208 209 210
        on right: 206 207 209 210
    multiplicativeExpression <treeptr> (271)
        on left: 211 212 213 214
        on right: 208 209 210 212 213 214
    primaryExpression <treeptr> (272)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226
        on right: 116
    collectionLiteral <treeptr> (273)
        on left: 227 228 229 230 231
        on right: 224
    comparison_operator <treeptr> (274)
        on left: 232 233 234 235
        on right: 201
    equality_operator <treeptr> (275)
        on left: 236 237 238 239
        on right: 199


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    $default  reduce using rule 40 ($@1)

    program              go to state 4
    topLevelObjects      go to state 5
    topLevelObject       go to state 6
    functionDeclaration  go to state 7
    declaration          go to state 8
    opt_modifier         go to state 9
    $@1                  go to state 10
    propertyDeclaration  go to state 11
    classDeclaration     go to state 12


State 1

   74 classDeclaration: CLASS • simpleIdentifier opt_typeParameters classBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 14


State 2

    9 functionDeclaration: FUN • opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN • opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 16
    typeParameters      go to state 17


State 3

   39 opt_modifier: CONST •
   73 classDeclaration: CONST • CLASS simpleIdentifier opt_typeParameters classBody

    CLASS  shift, and go to state 18

    $default  reduce using rule 39 (opt_modifier)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 19


State 5

    1 program: topLevelObjects •
    3 topLevelObjects: topLevelObjects • topLevelObject

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    $end      reduce using rule 1 (program)
    $default  reduce using rule 40 ($@1)

    topLevelObject       go to state 20
    functionDeclaration  go to state 7
    declaration          go to state 8
    opt_modifier         go to state 9
    $@1                  go to state 10
    propertyDeclaration  go to state 11
    classDeclaration     go to state 12


State 6

    2 topLevelObjects: topLevelObject •

    $default  reduce using rule 2 (topLevelObjects)


State 7

   35 declaration: functionDeclaration •

    $default  reduce using rule 35 (declaration)


State 8

    4 topLevelObject: declaration • semis

    SEMICOLON  shift, and go to state 21

    $default  reduce using rule 24 (semis)

    semis  go to state 22


State 9

   61 propertyDeclaration: opt_modifier • val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    VAL  shift, and go to state 23
    VAR  shift, and go to state 24

    val_var  go to state 25


State 10

   41 opt_modifier: $@1 •

    $default  reduce using rule 41 (opt_modifier)


State 11

   36 declaration: propertyDeclaration •

    $default  reduce using rule 36 (declaration)


State 12

   34 declaration: classDeclaration •

    $default  reduce using rule 34 (declaration)


State 13

   72 simpleIdentifier: IDENTIFIER •

    $default  reduce using rule 72 (simpleIdentifier)


State 14

   74 classDeclaration: CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 26
    typeParameters      go to state 17


State 15

   68 typeParameters: LANGLE • typeParameter multi_typeParameter opt_comma RANGLE

    IDENTIFIER  shift, and go to state 13

    typeParameter     go to state 27
    simpleIdentifier  go to state 28


State 16

    9 functionDeclaration: FUN opt_typeParameters • nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN opt_typeParameters • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 34
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 36


State 17

   64 opt_typeParameters: typeParameters •

    $default  reduce using rule 64 (opt_typeParameters)


State 18

   73 classDeclaration: CONST CLASS • simpleIdentifier opt_typeParameters classBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 37


State 19

    0 $accept: program $end •

    $default  accept


State 20

    3 topLevelObjects: topLevelObjects topLevelObject •

    $default  reduce using rule 3 (topLevelObjects)


State 21

   23 semis: SEMICOLON •

    $default  reduce using rule 23 (semis)


State 22

    4 topLevelObject: declaration semis •

    $default  reduce using rule 4 (topLevelObject)


State 23

   38 val_var: VAL •

    $default  reduce using rule 38 (val_var)


State 24

   37 val_var: VAR •

    $default  reduce using rule 37 (val_var)


State 25

   61 propertyDeclaration: opt_modifier val_var • opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 38
    typeParameters      go to state 17


State 26

   74 classDeclaration: CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 39

    classBody  go to state 40


State 27

   68 typeParameters: LANGLE typeParameter • multi_typeParameter opt_comma RANGLE

    $default  reduce using rule 71 (multi_typeParameter)

    multi_typeParameter  go to state 41


State 28

   69 typeParameter: simpleIdentifier •

    $default  reduce using rule 69 (typeParameter)


State 29

   42 parenthesizedType: LPAREN • type RPAREN

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 42
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44


State 30

   53 nullableType: TYPELITERAL • multi_quest

    $default  reduce using rule 50 ($@3)

    multi_quest  go to state 45
    $@3          go to state 46


State 31

   54 typeRef_parenthesizedType: parenthesizedType •

    $default  reduce using rule 54 (typeRef_parenthesizedType)


State 32

   55 typeRef_parenthesizedType: userType •

    $default  reduce using rule 55 (typeRef_parenthesizedType)


State 33

   46 userType: simpleUserType • multi_dot_simpleUserType

    $default  reduce using rule 44 ($@2)

    multi_dot_simpleUserType  go to state 47
    $@2                       go to state 48


State 34

    9 functionDeclaration: FUN opt_typeParameters nullableType • DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    DOT  shift, and go to state 49


State 35

   52 nullableType: typeRef_parenthesizedType • multi_quest

    $default  reduce using rule 50 ($@3)

    multi_quest  go to state 50
    $@3          go to state 46


State 36

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody
   47 simpleUserType: simpleIdentifier • typeArguments
   48               | simpleIdentifier •

    LPAREN  shift, and go to state 51
    LANGLE  shift, and go to state 52

    $default  reduce using rule 48 (simpleUserType)

    functionValueParameters  go to state 53
    typeArguments            go to state 54


State 37

   73 classDeclaration: CONST CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 55
    typeParameters      go to state 17


State 38

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters • nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp

    LPAREN       shift, and go to state 56
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                               go to state 57
    parenthesizedType                  go to state 31
    userType                           go to state 32
    simpleUserType                     go to state 33
    nullableType                       go to state 58
    typeRef_parenthesizedType          go to state 35
    multivariable_variableDeclaration  go to state 59
    simpleIdentifier                   go to state 44
    variableDeclaration                go to state 60
    multiVariableDeclaration           go to state 61


State 39

   80 classBody: LCURL • classMembers RCURL

    $default  reduce using rule 189 (classMembers)

    classMembers  go to state 62


State 40

   74 classDeclaration: CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 74 (classDeclaration)


State 41

   68 typeParameters: LANGLE typeParameter multi_typeParameter • opt_comma RANGLE
   70 multi_typeParameter: multi_typeParameter • COMMA typeParameter

    COMMA  shift, and go to state 63

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 64


State 42

   42 parenthesizedType: LPAREN type • RPAREN

    RPAREN  shift, and go to state 65


State 43

   19 type: nullableType •

    $default  reduce using rule 19 (type)


State 44

   47 simpleUserType: simpleIdentifier • typeArguments
   48               | simpleIdentifier •

    LANGLE  shift, and go to state 52

    LANGLE    [reduce using rule 48 (simpleUserType)]
    $default  reduce using rule 48 (simpleUserType)

    typeArguments  go to state 54


State 45

   49 multi_quest: multi_quest • QUEST_NO_WS
   53 nullableType: TYPELITERAL multi_quest •

    QUEST_NO_WS  shift, and go to state 66

    QUEST_NO_WS  [reduce using rule 53 (nullableType)]
    $default     reduce using rule 53 (nullableType)


State 46

   51 multi_quest: $@3 •

    $default  reduce using rule 51 (multi_quest)


State 47

   43 multi_dot_simpleUserType: multi_dot_simpleUserType • DOT simpleUserType
   46 userType: simpleUserType multi_dot_simpleUserType •

    DOT  shift, and go to state 67

    DOT       [reduce using rule 46 (userType)]
    $default  reduce using rule 46 (userType)


State 48

   45 multi_dot_simpleUserType: $@2 •

    $default  reduce using rule 45 (multi_dot_simpleUserType)


State 49

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 68


State 50

   49 multi_quest: multi_quest • QUEST_NO_WS
   52 nullableType: typeRef_parenthesizedType multi_quest •

    QUEST_NO_WS  shift, and go to state 66

    QUEST_NO_WS  [reduce using rule 52 (nullableType)]
    $default     reduce using rule 52 (nullableType)


State 51

   11 functionValueParameters: LPAREN • opt_functionValueParameter RPAREN

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 18 (opt_functionValueParameter)

    functionValueParameter      go to state 69
    parameter                   go to state 70
    opt_functionValueParameter  go to state 71
    simpleIdentifier            go to state 72


State 52

  103 typeArguments: LANGLE • typeProjection multi_comma_typeProjection opt_comma RANGLE

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    MULT         shift, and go to state 73
    IDENTIFIER   shift, and go to state 13

    type                       go to state 74
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    typeProjection             go to state 75


State 53

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 76

    $default  reduce using rule 8 (opt_colon_type)

    opt_colon_type  go to state 77


State 54

   47 simpleUserType: simpleIdentifier typeArguments •

    $default  reduce using rule 47 (simpleUserType)


State 55

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 39

    classBody  go to state 78


State 56

   42 parenthesizedType: LPAREN • type RPAREN
   77 multiVariableDeclaration: LPAREN • variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 79
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    variableDeclaration        go to state 80


State 57

   75 variableDeclaration: type • COLON type
   76                    | type •

    COLON  shift, and go to state 81

    $default  reduce using rule 76 (variableDeclaration)


State 58

   19 type: nullableType •
   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType • DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON

    DOT  shift, and go to state 82

    DOT       [reduce using rule 19 (type)]
    $default  reduce using rule 19 (type)


State 59

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp

    ASSIGNMENT  shift, and go to state 83

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 84
    $@4         go to state 85


State 60

   59 multivariable_variableDeclaration: variableDeclaration •

    $default  reduce using rule 59 (multivariable_variableDeclaration)


State 61

   60 multivariable_variableDeclaration: multiVariableDeclaration •

    $default  reduce using rule 60 (multivariable_variableDeclaration)


State 62

   80 classBody: LCURL classMembers • RCURL
  190 classMembers: classMembers • classMember

    LPAREN       shift, and go to state 29
    RCURL        shift, and go to state 86
    FUN          shift, and go to state 2
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    functionDeclaration        go to state 87
    type                       go to state 57
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    variableDeclaration        go to state 88
    classMember                go to state 89


State 63

   66 opt_comma: COMMA •
   70 multi_typeParameter: multi_typeParameter COMMA • typeParameter

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    typeParameter     go to state 90
    simpleIdentifier  go to state 28


State 64

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma • RANGLE

    RANGLE  shift, and go to state 91


State 65

   42 parenthesizedType: LPAREN type RPAREN •

    $default  reduce using rule 42 (parenthesizedType)


State 66

   49 multi_quest: multi_quest QUEST_NO_WS •

    $default  reduce using rule 49 (multi_quest)


State 67

   43 multi_dot_simpleUserType: multi_dot_simpleUserType DOT • simpleUserType

    IDENTIFIER  shift, and go to state 13

    simpleUserType    go to state 92
    simpleIdentifier  go to state 44


State 68

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody

    LPAREN  shift, and go to state 51

    functionValueParameters  go to state 93


State 69

   16 opt_functionValueParameter: functionValueParameter • multi_comma_functionParameter COMMA
   17                           | functionValueParameter • multi_comma_functionParameter

    $default  reduce using rule 15 (multi_comma_functionParameter)

    multi_comma_functionParameter  go to state 94


State 70

   12 functionValueParameter: parameter • opt_eq_exp

    ASSIGNMENT  shift, and go to state 83

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 95
    $@4         go to state 85


State 71

   11 functionValueParameters: LPAREN opt_functionValueParameter • RPAREN

    RPAREN  shift, and go to state 96


State 72

   13 parameter: simpleIdentifier • COLON type

    COLON  shift, and go to state 97


State 73

  108 typeProjection: MULT •

    $default  reduce using rule 108 (typeProjection)


State 74

  107 typeProjection: type •

    $default  reduce using rule 107 (typeProjection)


State 75

  103 typeArguments: LANGLE typeProjection • multi_comma_typeProjection opt_comma RANGLE

    $default  reduce using rule 105 ($@6)

    multi_comma_typeProjection  go to state 98
    $@6                         go to state 99


State 76

    7 opt_colon_type: COLON • type

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 100
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44


State 77

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 101
    ASSIGNMENT  shift, and go to state 102

    $default  reduce using rule 6 (opt_functionBody)

    opt_functionBody  go to state 103
    functionBody      go to state 104
    block             go to state 105


State 78

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 73 (classDeclaration)


State 79

   42 parenthesizedType: LPAREN type • RPAREN
   75 variableDeclaration: type • COLON type
   76                    | type •

    RPAREN  shift, and go to state 65
    COLON   shift, and go to state 81

    RPAREN    [reduce using rule 76 (variableDeclaration)]
    $default  reduce using rule 76 (variableDeclaration)


State 80

   77 multiVariableDeclaration: LPAREN variableDeclaration • multi_comma_variableDeclaration opt_comma RPAREN

    $default  reduce using rule 79 (multi_comma_variableDeclaration)

    multi_comma_variableDeclaration  go to state 106


State 81

   75 variableDeclaration: type COLON • type

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 107
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44


State 82

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT • multivariable_variableDeclaration opt_eq_exp SEMICOLON

    LPAREN       shift, and go to state 56
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                               go to state 57
    parenthesizedType                  go to state 31
    userType                           go to state 32
    simpleUserType                     go to state 33
    nullableType                       go to state 43
    typeRef_parenthesizedType          go to state 35
    multivariable_variableDeclaration  go to state 108
    simpleIdentifier                   go to state 44
    variableDeclaration                go to state 60
    multiVariableDeclaration           go to state 61


State 83

   56 opt_eq_exp: ASSIGNMENT • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 130
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 84

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp • SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp •

    SEMICOLON  shift, and go to state 142

    SEMICOLON  [reduce using rule 63 (propertyDeclaration)]
    $default   reduce using rule 63 (propertyDeclaration)


State 85

   58 opt_eq_exp: $@4 •

    $default  reduce using rule 58 (opt_eq_exp)


State 86

   80 classBody: LCURL classMembers RCURL •

    $default  reduce using rule 80 (classBody)


State 87

  191 classMember: functionDeclaration •

    $default  reduce using rule 191 (classMember)


State 88

  192 classMember: variableDeclaration •

    $default  reduce using rule 192 (classMember)


State 89

  190 classMembers: classMembers classMember •

    $default  reduce using rule 190 (classMembers)


State 90

   70 multi_typeParameter: multi_typeParameter COMMA typeParameter •

    $default  reduce using rule 70 (multi_typeParameter)


State 91

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE •

    $default  reduce using rule 68 (typeParameters)


State 92

   43 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType •

    $default  reduce using rule 43 (multi_dot_simpleUserType)


State 93

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 76

    $default  reduce using rule 8 (opt_colon_type)

    opt_colon_type  go to state 143


State 94

   14 multi_comma_functionParameter: multi_comma_functionParameter • COMMA functionValueParameter
   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter • COMMA
   17                           | functionValueParameter multi_comma_functionParameter •

    COMMA  shift, and go to state 144

    $default  reduce using rule 17 (opt_functionValueParameter)


State 95

   12 functionValueParameter: parameter opt_eq_exp •

    $default  reduce using rule 12 (functionValueParameter)


State 96

   11 functionValueParameters: LPAREN opt_functionValueParameter RPAREN •

    $default  reduce using rule 11 (functionValueParameters)


State 97

   13 parameter: simpleIdentifier COLON • type

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 145
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44


State 98

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection • opt_comma RANGLE
  104 multi_comma_typeProjection: multi_comma_typeProjection • COMMA typeProjection

    COMMA  shift, and go to state 146

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 147


State 99

  106 multi_comma_typeProjection: $@6 •

    $default  reduce using rule 106 (multi_comma_typeProjection)


State 100

    7 opt_colon_type: COLON type •

    $default  reduce using rule 7 (opt_colon_type)


State 101

   22 block: LCURL • statements RCURL

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    RCURL              reduce using rule 28 (optional_statement_sequence)
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    optional_statement_sequence                go to state 152
    statements                                 go to state 153
    statement                                  go to state 154
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 102

   21 functionBody: ASSIGNMENT • expression SEMICOLON

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 169
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 103

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 10 (functionDeclaration)


State 104

    5 opt_functionBody: functionBody •

    $default  reduce using rule 5 (opt_functionBody)


State 105

   20 functionBody: block •

    $default  reduce using rule 20 (functionBody)


State 106

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration • opt_comma RPAREN
   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration • COMMA variableDeclaration

    COMMA  shift, and go to state 170

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 171


State 107

   75 variableDeclaration: type COLON type •

    $default  reduce using rule 75 (variableDeclaration)


State 108

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration • opt_eq_exp SEMICOLON

    ASSIGNMENT  shift, and go to state 83

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 172
    $@4         go to state 85


State 109

  149 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 173
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 110

  227 collectionLiteral: LSQUARE • RSQUARE
  228                  | LSQUARE • expression COMMA RSQUARE
  229                  | LSQUARE • expression RSQUARE
  230                  | LSQUARE • expression multi_comma_expression RSQUARE
  231                  | LSQUARE • expression multi_comma_expression COMMA RSQUARE

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    RSQUARE            shift, and go to state 174
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 175
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 111

  150 ifExpression: IF • LPAREN expression RPAREN controls

    LPAREN  shift, and go to state 176


State 112

  175 whenExpression: WHEN • whenSubject LCURL multi_whenEntry RCURL
  176               | WHEN • LCURL multi_whenEntry RCURL

    LPAREN  shift, and go to state 177
    LCURL   shift, and go to state 178

    whenSubject  go to state 179


State 113

  169 jumpExpression: RETURN • expression
  170               | RETURN •

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 170 (jumpExpression)]
    LSQUARE            [reduce using rule 170 (jumpExpression)]
    IF                 [reduce using rule 170 (jumpExpression)]
    WHEN               [reduce using rule 170 (jumpExpression)]
    RETURN             [reduce using rule 170 (jumpExpression)]
    CONTINUE           [reduce using rule 170 (jumpExpression)]
    BREAK              [reduce using rule 170 (jumpExpression)]
    FLOAT_LITERAL      [reduce using rule 170 (jumpExpression)]
    INTEGER_LITERAL    [reduce using rule 170 (jumpExpression)]
    CHARACTER_LITERAL  [reduce using rule 170 (jumpExpression)]
    BOOLEAN_LITERAL    [reduce using rule 170 (jumpExpression)]
    STRING_LITERAL     [reduce using rule 170 (jumpExpression)]
    IDENTIFIER         [reduce using rule 170 (jumpExpression)]
    $default           reduce using rule 170 (jumpExpression)

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 180
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 114

  171 jumpExpression: CONTINUE •

    $default  reduce using rule 171 (jumpExpression)


State 115

  172 jumpExpression: BREAK •

    $default  reduce using rule 172 (jumpExpression)


State 116

  221 primaryExpression: FLOAT_LITERAL •

    $default  reduce using rule 221 (primaryExpression)


State 117

  218 primaryExpression: INTEGER_LITERAL •

    $default  reduce using rule 218 (primaryExpression)


State 118

  222 primaryExpression: CHARACTER_LITERAL •

    $default  reduce using rule 222 (primaryExpression)


State 119

  220 primaryExpression: BOOLEAN_LITERAL •

    $default  reduce using rule 220 (primaryExpression)


State 120

  219 primaryExpression: STRING_LITERAL •

    $default  reduce using rule 219 (primaryExpression)


State 121

   72 simpleIdentifier: IDENTIFIER •
  153 functionCall: IDENTIFIER • LPAREN functionArguments RPAREN semis
  155 dotExpression: IDENTIFIER • DOT IDENTIFIER

    DOT     shift, and go to state 181
    LPAREN  shift, and go to state 182

    DOT       [reduce using rule 72 (simpleIdentifier)]
    LPAREN    [reduce using rule 72 (simpleIdentifier)]
    $default  reduce using rule 72 (simpleIdentifier)


State 122

  216 primaryExpression: simpleIdentifier •

    $default  reduce using rule 216 (primaryExpression)


State 123

  211 multiplicativeExpression: postfixUnaryExpression •

    $default  reduce using rule 211 (multiplicativeExpression)


State 124

  215 primaryExpression: parenthesizedExpression •

    $default  reduce using rule 215 (primaryExpression)


State 125

  225 primaryExpression: ifExpression •

    $default  reduce using rule 225 (primaryExpression)


State 126

  217 primaryExpression: functionCall •

    $default  reduce using rule 217 (primaryExpression)


State 127

  154 functionCall: dotExpression • LPAREN functionArguments RPAREN semis
  156 dotExpression: dotExpression • DOT IDENTIFIER

    DOT     shift, and go to state 183
    LPAREN  shift, and go to state 184


State 128

  223 primaryExpression: jumpExpression •

    $default  reduce using rule 223 (primaryExpression)


State 129

  226 primaryExpression: whenExpression •

    $default  reduce using rule 226 (primaryExpression)


State 130

   56 opt_eq_exp: ASSIGNMENT expression •

    $default  reduce using rule 56 (opt_eq_exp)


State 131

  193 expression: disjunction •
  195 disjunction: disjunction • DISJ conjunction

    DISJ  shift, and go to state 185

    DISJ      [reduce using rule 193 (expression)]
    $default  reduce using rule 193 (expression)


State 132

  194 disjunction: conjunction •
  197 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 186

    CONJ      [reduce using rule 194 (disjunction)]
    $default  reduce using rule 194 (disjunction)


State 133

  196 conjunction: equality •
  199 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 187
    EXCL_EQEQ  shift, and go to state 188
    EQEQ       shift, and go to state 189
    EQEQEQ     shift, and go to state 190

    EXCL_EQ    [reduce using rule 196 (conjunction)]
    EXCL_EQEQ  [reduce using rule 196 (conjunction)]
    EQEQ       [reduce using rule 196 (conjunction)]
    EQEQEQ     [reduce using rule 196 (conjunction)]
    $default   reduce using rule 196 (conjunction)

    equality_operator  go to state 191


State 134

  198 equality: comparison •
  201 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 192
    RANGLE  shift, and go to state 193
    LE      shift, and go to state 194
    GE      shift, and go to state 195

    LANGLE    [reduce using rule 198 (equality)]
    RANGLE    [reduce using rule 198 (equality)]
    LE        [reduce using rule 198 (equality)]
    GE        [reduce using rule 198 (equality)]
    $default  reduce using rule 198 (equality)

    comparison_operator  go to state 196


State 135

  200 comparison: genericCallLikeComparison •

    $default  reduce using rule 200 (comparison)


State 136

  202 genericCallLikeComparison: elvisExpression •
  203                          | elvisExpression • IN elvisExpression
  205 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 197
    IN           shift, and go to state 198

    QUEST_COLON  [reduce using rule 202 (genericCallLikeComparison)]
    IN           [reduce using rule 202 (genericCallLikeComparison)]
    $default     reduce using rule 202 (genericCallLikeComparison)


State 137

  204 elvisExpression: rangeExpression •
  207 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 199

    RANGE     [reduce using rule 204 (elvisExpression)]
    $default  reduce using rule 204 (elvisExpression)


State 138

  206 rangeExpression: additiveExpression •
  209 additiveExpression: additiveExpression • ADD multiplicativeExpression
  210                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 200
    SUB  shift, and go to state 201

    ADD       [reduce using rule 206 (rangeExpression)]
    SUB       [reduce using rule 206 (rangeExpression)]
    $default  reduce using rule 206 (rangeExpression)


State 139

  208 additiveExpression: multiplicativeExpression •
  212 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  213                         | multiplicativeExpression • DIV postfixUnaryExpression
  214                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 202
    MOD   shift, and go to state 203
    DIV   shift, and go to state 204

    MULT      [reduce using rule 208 (additiveExpression)]
    MOD       [reduce using rule 208 (additiveExpression)]
    DIV       [reduce using rule 208 (additiveExpression)]
    $default  reduce using rule 208 (additiveExpression)


State 140

  116 postfixUnaryExpression: primaryExpression • multi_postfixUnarySuffix

    $default  reduce using rule 114 ($@7)

    multi_postfixUnarySuffix  go to state 205
    $@7                       go to state 206


State 141

  224 primaryExpression: collectionLiteral •

    $default  reduce using rule 224 (primaryExpression)


State 142

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 62 (propertyDeclaration)


State 143

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 101
    ASSIGNMENT  shift, and go to state 102

    $default  reduce using rule 6 (opt_functionBody)

    opt_functionBody  go to state 207
    functionBody      go to state 104
    block             go to state 105


State 144

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA • functionValueParameter
   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA •

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 16 (opt_functionValueParameter)

    functionValueParameter  go to state 208
    parameter               go to state 70
    simpleIdentifier        go to state 72


State 145

   13 parameter: simpleIdentifier COLON type •

    $default  reduce using rule 13 (parameter)


State 146

   66 opt_comma: COMMA •
  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA • typeProjection

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    MULT         shift, and go to state 73
    IDENTIFIER   shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    type                       go to state 74
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    typeProjection             go to state 209


State 147

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma • RANGLE

    RANGLE  shift, and go to state 210


State 148

   97 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  112 parenthesizedDirectlyAssignableExpression: LPAREN • assignableExpression RPAREN
  149 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 211
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    simpleIdentifier                   go to state 122
    assignableExpression               go to state 212
    multi_unaryPrefix                  go to state 158
    $@5                                go to state 159
    prefixUnaryExpression              go to state 160
    parenthesizedAssignableExpression  go to state 161
    postfixUnaryExpression             go to state 123
    parenthesizedExpression            go to state 124
    ifExpression                       go to state 125
    functionCall                       go to state 126
    dotExpression                      go to state 127
    jumpExpression                     go to state 128
    whenExpression                     go to state 129
    expression                         go to state 173
    disjunction                        go to state 131
    conjunction                        go to state 132
    equality                           go to state 133
    comparison                         go to state 134
    genericCallLikeComparison          go to state 135
    elvisExpression                    go to state 136
    rangeExpression                    go to state 137
    additiveExpression                 go to state 138
    multiplicativeExpression           go to state 139
    primaryExpression                  go to state 140
    collectionLiteral                  go to state 141


State 149

  165 loopStatement: FOR • LPAREN variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN  shift, and go to state 213


State 150

  166 loopStatement: DO • controlStructureBody WHILE LPAREN expression RPAREN

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 216
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 151

  164 loopStatement: WHILE • LPAREN expression RPAREN control_structure_body_or_comma

    LPAREN  shift, and go to state 217


State 152

   29 statements: optional_statement_sequence •

    $default  reduce using rule 29 (statements)


State 153

   22 block: LCURL statements • RCURL

    RCURL  shift, and go to state 218


State 154

   27 optional_statement_sequence: statement • semis_statement

    $default  reduce using rule 26 (semis_statement)

    semis_statement  go to state 219


State 155

   30 statement: declaration • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 220


State 156

  110 directlyAssignableExpression: simpleIdentifier •
  216 primaryExpression: simpleIdentifier •

    ASSIGNMENT  reduce using rule 110 (directlyAssignableExpression)
    $default    reduce using rule 216 (primaryExpression)


State 157

  100 directly_assign: assignableExpression • assignmentAndOperator

    ADD_ASSIGNMENT   shift, and go to state 221
    SUB_ASSIGNMENT   shift, and go to state 222
    MULT_ASSIGNMENT  shift, and go to state 223
    DIV_ASSIGNMENT   shift, and go to state 224
    MOD_ASSIGNMENT   shift, and go to state 225

    assignmentAndOperator  go to state 226


State 158

   88 multi_unaryPrefix: multi_unaryPrefix • prefixUnaryOperator
   96 prefixUnaryExpression: multi_unaryPrefix • postfixUnaryExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    INCR               shift, and go to state 227
    DECR               shift, and go to state 228
    EXCL_NO_WS         shift, and go to state 229
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    ADD                shift, and go to state 230
    SUB                shift, and go to state 231
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier         go to state 122
    prefixUnaryOperator      go to state 232
    postfixUnaryExpression   go to state 233
    parenthesizedExpression  go to state 124
    ifExpression             go to state 125
    functionCall             go to state 126
    dotExpression            go to state 127
    jumpExpression           go to state 128
    whenExpression           go to state 129
    primaryExpression        go to state 140
    collectionLiteral        go to state 141


State 159

   90 multi_unaryPrefix: $@5 •

    $default  reduce using rule 90 (multi_unaryPrefix)


State 160

   86 assignableExpression: prefixUnaryExpression •

    $default  reduce using rule 86 (assignableExpression)


State 161

   87 assignableExpression: parenthesizedAssignableExpression •

    $default  reduce using rule 87 (assignableExpression)


State 162

   31 statement: assignment • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 234


State 163

   98 assignment: directly_assign • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 235
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 164

   99 directly_assign: directlyAssignableExpression • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 236


State 165

  111 directlyAssignableExpression: parenthesizedDirectlyAssignableExpression •

    $default  reduce using rule 111 (directlyAssignableExpression)


State 166

  109 directlyAssignableExpression: postfixUnaryExpression • assignableSuffix
  211 multiplicativeExpression: postfixUnaryExpression •

    LSQUARE  shift, and go to state 237
    LANGLE   shift, and go to state 52

    LSQUARE   [reduce using rule 211 (multiplicativeExpression)]
    LANGLE    [reduce using rule 211 (multiplicativeExpression)]
    $default  reduce using rule 211 (multiplicativeExpression)

    assignableSuffix  go to state 238
    typeArguments     go to state 239
    indexingSuffix    go to state 240


State 167

   33 statement: loopStatement • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 241


State 168

   32 statement: expression • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 242


State 169

   21 functionBody: ASSIGNMENT expression • SEMICOLON

    SEMICOLON  shift, and go to state 243


State 170

   66 opt_comma: COMMA •
   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA • variableDeclaration

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    type                       go to state 57
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    variableDeclaration        go to state 244


State 171

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma • RPAREN

    RPAREN  shift, and go to state 245


State 172

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp • SEMICOLON

    SEMICOLON  shift, and go to state 246


State 173

  149 parenthesizedExpression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 247


State 174

  227 collectionLiteral: LSQUARE RSQUARE •

    $default  reduce using rule 227 (collectionLiteral)


State 175

  228 collectionLiteral: LSQUARE expression • COMMA RSQUARE
  229                  | LSQUARE expression • RSQUARE
  230                  | LSQUARE expression • multi_comma_expression RSQUARE
  231                  | LSQUARE expression • multi_comma_expression COMMA RSQUARE

    COMMA    shift, and go to state 248
    RSQUARE  shift, and go to state 249

    COMMA    [reduce using rule 131 ($@8)]
    RSQUARE  [reduce using rule 131 ($@8)]

    multi_comma_expression  go to state 250
    $@8                     go to state 251


State 176

  150 ifExpression: IF LPAREN • expression RPAREN controls

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 252
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 177

  177 whenSubject: LPAREN • expression RPAREN
  178            | LPAREN • VAL variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    VAL                shift, and go to state 253
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 254
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 178

  176 whenExpression: WHEN LCURL • multi_whenEntry RCURL

    $default  reduce using rule 174 (multi_whenEntry)

    multi_whenEntry  go to state 255


State 179

  175 whenExpression: WHEN whenSubject • LCURL multi_whenEntry RCURL

    LCURL  shift, and go to state 256


State 180

  169 jumpExpression: RETURN expression •

    $default  reduce using rule 169 (jumpExpression)


State 181

  155 dotExpression: IDENTIFIER DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 257


State 182

  153 functionCall: IDENTIFIER LPAREN • functionArguments RPAREN semis

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    $default  reduce using rule 159 (functionArguments)

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    functionArguments          go to state 258
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 259
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 183

  156 dotExpression: dotExpression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 260


State 184

  154 functionCall: dotExpression LPAREN • functionArguments RPAREN semis

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    $default  reduce using rule 159 (functionArguments)

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    functionArguments          go to state 261
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 259
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 185

  195 disjunction: disjunction DISJ • conjunction

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    conjunction                go to state 262
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 186

  197 conjunction: conjunction CONJ • equality

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    equality                   go to state 263
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 187

  238 equality_operator: EXCL_EQ •

    $default  reduce using rule 238 (equality_operator)


State 188

  239 equality_operator: EXCL_EQEQ •

    $default  reduce using rule 239 (equality_operator)


State 189

  236 equality_operator: EQEQ •

    $default  reduce using rule 236 (equality_operator)


State 190

  237 equality_operator: EQEQEQ •

    $default  reduce using rule 237 (equality_operator)


State 191

  199 equality: equality equality_operator • comparison

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    comparison                 go to state 264
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 192

  232 comparison_operator: LANGLE •

    $default  reduce using rule 232 (comparison_operator)


State 193

  233 comparison_operator: RANGLE •

    $default  reduce using rule 233 (comparison_operator)


State 194

  234 comparison_operator: LE •

    $default  reduce using rule 234 (comparison_operator)


State 195

  235 comparison_operator: GE •

    $default  reduce using rule 235 (comparison_operator)


State 196

  201 comparison: comparison comparison_operator • genericCallLikeComparison

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    genericCallLikeComparison  go to state 265
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 197

  205 elvisExpression: elvisExpression QUEST_COLON • rangeExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier          go to state 122
    postfixUnaryExpression    go to state 123
    parenthesizedExpression   go to state 124
    ifExpression              go to state 125
    functionCall              go to state 126
    dotExpression             go to state 127
    jumpExpression            go to state 128
    whenExpression            go to state 129
    rangeExpression           go to state 266
    additiveExpression        go to state 138
    multiplicativeExpression  go to state 139
    primaryExpression         go to state 140
    collectionLiteral         go to state 141


State 198

  203 genericCallLikeComparison: elvisExpression IN • elvisExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier          go to state 122
    postfixUnaryExpression    go to state 123
    parenthesizedExpression   go to state 124
    ifExpression              go to state 125
    functionCall              go to state 126
    dotExpression             go to state 127
    jumpExpression            go to state 128
    whenExpression            go to state 129
    elvisExpression           go to state 267
    rangeExpression           go to state 137
    additiveExpression        go to state 138
    multiplicativeExpression  go to state 139
    primaryExpression         go to state 140
    collectionLiteral         go to state 141


State 199

  207 rangeExpression: rangeExpression RANGE • additiveExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier          go to state 122
    postfixUnaryExpression    go to state 123
    parenthesizedExpression   go to state 124
    ifExpression              go to state 125
    functionCall              go to state 126
    dotExpression             go to state 127
    jumpExpression            go to state 128
    whenExpression            go to state 129
    additiveExpression        go to state 268
    multiplicativeExpression  go to state 139
    primaryExpression         go to state 140
    collectionLiteral         go to state 141


State 200

  209 additiveExpression: additiveExpression ADD • multiplicativeExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier          go to state 122
    postfixUnaryExpression    go to state 123
    parenthesizedExpression   go to state 124
    ifExpression              go to state 125
    functionCall              go to state 126
    dotExpression             go to state 127
    jumpExpression            go to state 128
    whenExpression            go to state 129
    multiplicativeExpression  go to state 269
    primaryExpression         go to state 140
    collectionLiteral         go to state 141


State 201

  210 additiveExpression: additiveExpression SUB • multiplicativeExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier          go to state 122
    postfixUnaryExpression    go to state 123
    parenthesizedExpression   go to state 124
    ifExpression              go to state 125
    functionCall              go to state 126
    dotExpression             go to state 127
    jumpExpression            go to state 128
    whenExpression            go to state 129
    multiplicativeExpression  go to state 270
    primaryExpression         go to state 140
    collectionLiteral         go to state 141


State 202

  212 multiplicativeExpression: multiplicativeExpression MULT • postfixUnaryExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier         go to state 122
    postfixUnaryExpression   go to state 271
    parenthesizedExpression  go to state 124
    ifExpression             go to state 125
    functionCall             go to state 126
    dotExpression            go to state 127
    jumpExpression           go to state 128
    whenExpression           go to state 129
    primaryExpression        go to state 140
    collectionLiteral        go to state 141


State 203

  214 multiplicativeExpression: multiplicativeExpression MOD • postfixUnaryExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier         go to state 122
    postfixUnaryExpression   go to state 272
    parenthesizedExpression  go to state 124
    ifExpression             go to state 125
    functionCall             go to state 126
    dotExpression            go to state 127
    jumpExpression           go to state 128
    whenExpression           go to state 129
    primaryExpression        go to state 140
    collectionLiteral        go to state 141


State 204

  213 multiplicativeExpression: multiplicativeExpression DIV • postfixUnaryExpression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier         go to state 122
    postfixUnaryExpression   go to state 273
    parenthesizedExpression  go to state 124
    ifExpression             go to state 125
    functionCall             go to state 126
    dotExpression            go to state 127
    jumpExpression           go to state 128
    whenExpression           go to state 129
    primaryExpression        go to state 140
    collectionLiteral        go to state 141


State 205

  113 multi_postfixUnarySuffix: multi_postfixUnarySuffix • postfixUnarySuffix
  116 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix •

    DOT          shift, and go to state 274
    LPAREN       shift, and go to state 275
    LSQUARE      shift, and go to state 237
    INCR         shift, and go to state 276
    DECR         shift, and go to state 277
    EXCL_NO_WS   shift, and go to state 278
    QUEST_NO_WS  shift, and go to state 279

    DOT          [reduce using rule 116 (postfixUnaryExpression)]
    LPAREN       [reduce using rule 116 (postfixUnaryExpression)]
    LSQUARE      [reduce using rule 116 (postfixUnaryExpression)]
    INCR         [reduce using rule 116 (postfixUnaryExpression)]
    DECR         [reduce using rule 116 (postfixUnaryExpression)]
    EXCL_NO_WS   [reduce using rule 116 (postfixUnaryExpression)]
    QUEST_NO_WS  [reduce using rule 116 (postfixUnaryExpression)]
    $default     reduce using rule 116 (postfixUnaryExpression)

    postfixUnarySuffix    go to state 280
    navigationSuffix      go to state 281
    memberAccessOperator  go to state 282
    postfixUnaryOperator  go to state 283
    indexingSuffix        go to state 284
    callSuffix            go to state 285
    valueArguments        go to state 286


State 206

  115 multi_postfixUnarySuffix: $@7 •

    $default  reduce using rule 115 (multi_postfixUnarySuffix)


State 207

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 9 (functionDeclaration)


State 208

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter •

    $default  reduce using rule 14 (multi_comma_functionParameter)


State 209

  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection •

    $default  reduce using rule 104 (multi_comma_typeProjection)


State 210

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE •

    $default  reduce using rule 103 (typeArguments)


State 211

   97 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  149 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 211
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    simpleIdentifier                   go to state 122
    assignableExpression               go to state 287
    multi_unaryPrefix                  go to state 158
    $@5                                go to state 159
    prefixUnaryExpression              go to state 160
    parenthesizedAssignableExpression  go to state 161
    postfixUnaryExpression             go to state 123
    parenthesizedExpression            go to state 124
    ifExpression                       go to state 125
    functionCall                       go to state 126
    dotExpression                      go to state 127
    jumpExpression                     go to state 128
    whenExpression                     go to state 129
    expression                         go to state 173
    disjunction                        go to state 131
    conjunction                        go to state 132
    equality                           go to state 133
    comparison                         go to state 134
    genericCallLikeComparison          go to state 135
    elvisExpression                    go to state 136
    rangeExpression                    go to state 137
    additiveExpression                 go to state 138
    multiplicativeExpression           go to state 139
    primaryExpression                  go to state 140
    collectionLiteral                  go to state 141


State 212

   97 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN
  112 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 288


State 213

  165 loopStatement: FOR LPAREN • variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN       shift, and go to state 56
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 57
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    variableDeclaration        go to state 289
    multiVariableDeclaration   go to state 290
    variable_multivariable     go to state 291


State 214

  167 controlStructureBody: block •

    $default  reduce using rule 167 (controlStructureBody)


State 215

  168 controlStructureBody: statement •

    $default  reduce using rule 168 (controlStructureBody)


State 216

  166 loopStatement: DO controlStructureBody • WHILE LPAREN expression RPAREN

    WHILE  shift, and go to state 292


State 217

  164 loopStatement: WHILE LPAREN • expression RPAREN control_structure_body_or_comma

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 293
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 218

   22 block: LCURL statements RCURL •

    $default  reduce using rule 22 (block)


State 219

   25 semis_statement: semis_statement • semis statement
   27 optional_statement_sequence: statement semis_statement •

    SEMICOLON  shift, and go to state 21

    RCURL     reduce using rule 27 (optional_statement_sequence)
    $default  reduce using rule 24 (semis)

    semis  go to state 294


State 220

   30 statement: declaration semis •

    $default  reduce using rule 30 (statement)


State 221

   81 assignmentAndOperator: ADD_ASSIGNMENT •

    $default  reduce using rule 81 (assignmentAndOperator)


State 222

   82 assignmentAndOperator: SUB_ASSIGNMENT •

    $default  reduce using rule 82 (assignmentAndOperator)


State 223

   83 assignmentAndOperator: MULT_ASSIGNMENT •

    $default  reduce using rule 83 (assignmentAndOperator)


State 224

   84 assignmentAndOperator: DIV_ASSIGNMENT •

    $default  reduce using rule 84 (assignmentAndOperator)


State 225

   85 assignmentAndOperator: MOD_ASSIGNMENT •

    $default  reduce using rule 85 (assignmentAndOperator)


State 226

  100 directly_assign: assignableExpression assignmentAndOperator •

    $default  reduce using rule 100 (directly_assign)


State 227

   93 prefixUnaryOperator: INCR •

    $default  reduce using rule 93 (prefixUnaryOperator)


State 228

   94 prefixUnaryOperator: DECR •

    $default  reduce using rule 94 (prefixUnaryOperator)


State 229

   95 prefixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 295


State 230

   91 prefixUnaryOperator: ADD •

    $default  reduce using rule 91 (prefixUnaryOperator)


State 231

   92 prefixUnaryOperator: SUB •

    $default  reduce using rule 92 (prefixUnaryOperator)


State 232

   88 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator •

    $default  reduce using rule 88 (multi_unaryPrefix)


State 233

   96 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression •

    $default  reduce using rule 96 (prefixUnaryExpression)


State 234

   31 statement: assignment semis •

    $default  reduce using rule 31 (statement)


State 235

   98 assignment: directly_assign expression •

    $default  reduce using rule 98 (assignment)


State 236

   99 directly_assign: directlyAssignableExpression ASSIGNMENT •

    $default  reduce using rule 99 (directly_assign)


State 237

  133 indexingSuffix: LSQUARE • expression multi_comma_expression opt_comma RSQUARE

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 296
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 238

  109 directlyAssignableExpression: postfixUnaryExpression assignableSuffix •

    $default  reduce using rule 109 (directlyAssignableExpression)


State 239

  102 assignableSuffix: typeArguments •

    $default  reduce using rule 102 (assignableSuffix)


State 240

  101 assignableSuffix: indexingSuffix •

    $default  reduce using rule 101 (assignableSuffix)


State 241

   33 statement: loopStatement semis •

    $default  reduce using rule 33 (statement)


State 242

   32 statement: expression semis •

    $default  reduce using rule 32 (statement)


State 243

   21 functionBody: ASSIGNMENT expression SEMICOLON •

    $default  reduce using rule 21 (functionBody)


State 244

   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration •

    $default  reduce using rule 78 (multi_comma_variableDeclaration)


State 245

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN •

    $default  reduce using rule 77 (multiVariableDeclaration)


State 246

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 61 (propertyDeclaration)


State 247

  149 parenthesizedExpression: LPAREN expression RPAREN •

    $default  reduce using rule 149 (parenthesizedExpression)


State 248

  228 collectionLiteral: LSQUARE expression COMMA • RSQUARE

    RSQUARE  shift, and go to state 297


State 249

  229 collectionLiteral: LSQUARE expression RSQUARE •

    $default  reduce using rule 229 (collectionLiteral)


State 250

  130 multi_comma_expression: multi_comma_expression • COMMA expression
  230 collectionLiteral: LSQUARE expression multi_comma_expression • RSQUARE
  231                  | LSQUARE expression multi_comma_expression • COMMA RSQUARE

    COMMA    shift, and go to state 298
    RSQUARE  shift, and go to state 299


State 251

  132 multi_comma_expression: $@8 •

    $default  reduce using rule 132 (multi_comma_expression)


State 252

  150 ifExpression: IF LPAREN expression • RPAREN controls

    RPAREN  shift, and go to state 300


State 253

  178 whenSubject: LPAREN VAL • variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN       shift, and go to state 29
    TYPELITERAL  shift, and go to state 30
    IDENTIFIER   shift, and go to state 13

    type                       go to state 57
    parenthesizedType          go to state 31
    userType                   go to state 32
    simpleUserType             go to state 33
    nullableType               go to state 43
    typeRef_parenthesizedType  go to state 35
    simpleIdentifier           go to state 44
    variableDeclaration        go to state 301


State 254

  177 whenSubject: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 302


State 255

  173 multi_whenEntry: multi_whenEntry • whenEntry
  176 whenExpression: WHEN LCURL multi_whenEntry • RCURL

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    RCURL              shift, and go to state 303
    IF                 shift, and go to state 111
    ELSE               shift, and go to state 304
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    IN                 shift, and go to state 305
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    whenEntry                  go to state 306
    whenCondition              go to state 307
    rangeTest                  go to state 308
    expression                 go to state 309
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 256

  175 whenExpression: WHEN whenSubject LCURL • multi_whenEntry RCURL

    $default  reduce using rule 174 (multi_whenEntry)

    multi_whenEntry  go to state 310


State 257

  155 dotExpression: IDENTIFIER DOT IDENTIFIER •

    $default  reduce using rule 155 (dotExpression)


State 258

  153 functionCall: IDENTIFIER LPAREN functionArguments • RPAREN semis
  158 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 311
    RPAREN  shift, and go to state 312


State 259

  157 functionArguments: expression •

    $default  reduce using rule 157 (functionArguments)


State 260

  156 dotExpression: dotExpression DOT IDENTIFIER •

    $default  reduce using rule 156 (dotExpression)


State 261

  154 functionCall: dotExpression LPAREN functionArguments • RPAREN semis
  158 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 311
    RPAREN  shift, and go to state 313


State 262

  195 disjunction: disjunction DISJ conjunction •
  197 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 186

    CONJ      [reduce using rule 195 (disjunction)]
    $default  reduce using rule 195 (disjunction)


State 263

  197 conjunction: conjunction CONJ equality •
  199 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 187
    EXCL_EQEQ  shift, and go to state 188
    EQEQ       shift, and go to state 189
    EQEQEQ     shift, and go to state 190

    EXCL_EQ    [reduce using rule 197 (conjunction)]
    EXCL_EQEQ  [reduce using rule 197 (conjunction)]
    EQEQ       [reduce using rule 197 (conjunction)]
    EQEQEQ     [reduce using rule 197 (conjunction)]
    $default   reduce using rule 197 (conjunction)

    equality_operator  go to state 191


State 264

  199 equality: equality equality_operator comparison •
  201 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 192
    RANGLE  shift, and go to state 193
    LE      shift, and go to state 194
    GE      shift, and go to state 195

    LANGLE    [reduce using rule 199 (equality)]
    RANGLE    [reduce using rule 199 (equality)]
    LE        [reduce using rule 199 (equality)]
    GE        [reduce using rule 199 (equality)]
    $default  reduce using rule 199 (equality)

    comparison_operator  go to state 196


State 265

  201 comparison: comparison comparison_operator genericCallLikeComparison •

    $default  reduce using rule 201 (comparison)


State 266

  205 elvisExpression: elvisExpression QUEST_COLON rangeExpression •
  207 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 199

    RANGE     [reduce using rule 205 (elvisExpression)]
    $default  reduce using rule 205 (elvisExpression)


State 267

  203 genericCallLikeComparison: elvisExpression IN elvisExpression •
  205 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 197

    QUEST_COLON  [reduce using rule 203 (genericCallLikeComparison)]
    $default     reduce using rule 203 (genericCallLikeComparison)


State 268

  207 rangeExpression: rangeExpression RANGE additiveExpression •
  209 additiveExpression: additiveExpression • ADD multiplicativeExpression
  210                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 200
    SUB  shift, and go to state 201

    ADD       [reduce using rule 207 (rangeExpression)]
    SUB       [reduce using rule 207 (rangeExpression)]
    $default  reduce using rule 207 (rangeExpression)


State 269

  209 additiveExpression: additiveExpression ADD multiplicativeExpression •
  212 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  213                         | multiplicativeExpression • DIV postfixUnaryExpression
  214                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 202
    MOD   shift, and go to state 203
    DIV   shift, and go to state 204

    $default  reduce using rule 209 (additiveExpression)


State 270

  210 additiveExpression: additiveExpression SUB multiplicativeExpression •
  212 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  213                         | multiplicativeExpression • DIV postfixUnaryExpression
  214                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 202
    MOD   shift, and go to state 203
    DIV   shift, and go to state 204

    $default  reduce using rule 210 (additiveExpression)


State 271

  212 multiplicativeExpression: multiplicativeExpression MULT postfixUnaryExpression •

    $default  reduce using rule 212 (multiplicativeExpression)


State 272

  214 multiplicativeExpression: multiplicativeExpression MOD postfixUnaryExpression •

    $default  reduce using rule 214 (multiplicativeExpression)


State 273

  213 multiplicativeExpression: multiplicativeExpression DIV postfixUnaryExpression •

    $default  reduce using rule 213 (multiplicativeExpression)


State 274

  125 memberAccessOperator: DOT •

    $default  reduce using rule 125 (memberAccessOperator)


State 275

  141 valueArguments: LPAREN • opt_valueArgument RPAREN

    IDENTIFIER  shift, and go to state 13

    RPAREN      reduce using rule 139 ($@10)
    IDENTIFIER  [reduce using rule 143 ($@11)]
    $default    reduce using rule 143 ($@11)

    simpleIdentifier         go to state 314
    opt_valueArgument        go to state 315
    $@10                     go to state 316
    opt_simpleIdentifier_EQ  go to state 317
    $@11                     go to state 318
    valueArgument            go to state 319


State 276

  127 postfixUnaryOperator: INCR •

    $default  reduce using rule 127 (postfixUnaryOperator)


State 277

  128 postfixUnaryOperator: DECR •

    $default  reduce using rule 128 (postfixUnaryOperator)


State 278

  129 postfixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 320


State 279

  126 memberAccessOperator: QUEST_NO_WS • DOT

    DOT  shift, and go to state 321


State 280

  113 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix •

    $default  reduce using rule 113 (multi_postfixUnarySuffix)


State 281

  120 postfixUnarySuffix: navigationSuffix •

    $default  reduce using rule 120 (postfixUnarySuffix)


State 282

  124 navigationSuffix: memberAccessOperator • identifier_expression_class

    LPAREN      shift, and go to state 109
    CLASS       shift, and go to state 322
    IDENTIFIER  shift, and go to state 13

    simpleIdentifier             go to state 323
    identifier_expression_class  go to state 324
    parenthesizedExpression      go to state 325


State 283

  117 postfixUnarySuffix: postfixUnaryOperator •

    $default  reduce using rule 117 (postfixUnarySuffix)


State 284

  118 postfixUnarySuffix: indexingSuffix •

    $default  reduce using rule 118 (postfixUnarySuffix)


State 285

  119 postfixUnarySuffix: callSuffix •

    $default  reduce using rule 119 (postfixUnarySuffix)


State 286

  134 callSuffix: valueArguments •

    $default  reduce using rule 134 (callSuffix)


State 287

   97 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 326


State 288

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •
  112 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN •

    ASSIGNMENT  reduce using rule 112 (parenthesizedDirectlyAssignableExpression)
    $default    reduce using rule 97 (parenthesizedAssignableExpression)


State 289

  160 variable_multivariable: variableDeclaration •

    $default  reduce using rule 160 (variable_multivariable)


State 290

  161 variable_multivariable: multiVariableDeclaration •

    $default  reduce using rule 161 (variable_multivariable)


State 291

  165 loopStatement: FOR LPAREN variable_multivariable • IN expression RPAREN controlStructureBody

    IN  shift, and go to state 327


State 292

  166 loopStatement: DO controlStructureBody WHILE • LPAREN expression RPAREN

    LPAREN  shift, and go to state 328


State 293

  164 loopStatement: WHILE LPAREN expression • RPAREN control_structure_body_or_comma

    RPAREN  shift, and go to state 329


State 294

   25 semis_statement: semis_statement semis • statement

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    statement                                  go to state 330
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 295

   95 prefixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 95 (prefixUnaryOperator)


State 296

  133 indexingSuffix: LSQUARE expression • multi_comma_expression opt_comma RSQUARE

    $default  reduce using rule 131 ($@8)

    multi_comma_expression  go to state 331
    $@8                     go to state 251


State 297

  228 collectionLiteral: LSQUARE expression COMMA RSQUARE •

    $default  reduce using rule 228 (collectionLiteral)


State 298

  130 multi_comma_expression: multi_comma_expression COMMA • expression
  231 collectionLiteral: LSQUARE expression multi_comma_expression COMMA • RSQUARE

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    RSQUARE            shift, and go to state 332
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 333
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 299

  230 collectionLiteral: LSQUARE expression multi_comma_expression RSQUARE •

    $default  reduce using rule 230 (collectionLiteral)


State 300

  150 ifExpression: IF LPAREN expression RPAREN • controls

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    controls                                   go to state 334
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 335
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 301

  178 whenSubject: LPAREN VAL variableDeclaration • ASSIGNMENT expression RPAREN

    ASSIGNMENT  shift, and go to state 336


State 302

  177 whenSubject: LPAREN expression RPAREN •

    $default  reduce using rule 177 (whenSubject)


State 303

  176 whenExpression: WHEN LCURL multi_whenEntry RCURL •

    $default  reduce using rule 176 (whenExpression)


State 304

  184 whenEntry: ELSE • ARROW controlStructureBody SEMICOLON
  185          | ELSE • ARROW controlStructureBody

    ARROW  shift, and go to state 337


State 305

  188 rangeTest: IN • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 338
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 306

  173 multi_whenEntry: multi_whenEntry whenEntry •

    $default  reduce using rule 173 (multi_whenEntry)


State 307

  182 whenEntry: whenCondition • multi_comma_whenCondition ARROW controlStructureBody
  183          | whenCondition • multi_comma_whenCondition COMMA ARROW controlStructureBody

    $default  reduce using rule 180 ($@13)

    multi_comma_whenCondition  go to state 339
    $@13                       go to state 340


State 308

  187 whenCondition: rangeTest •

    $default  reduce using rule 187 (whenCondition)


State 309

  186 whenCondition: expression •

    $default  reduce using rule 186 (whenCondition)


State 310

  173 multi_whenEntry: multi_whenEntry • whenEntry
  175 whenExpression: WHEN whenSubject LCURL multi_whenEntry • RCURL

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    RCURL              shift, and go to state 341
    IF                 shift, and go to state 111
    ELSE               shift, and go to state 304
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    IN                 shift, and go to state 305
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    whenEntry                  go to state 306
    whenCondition              go to state 307
    rangeTest                  go to state 308
    expression                 go to state 309
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 311

  158 functionArguments: functionArguments COMMA • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 342
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 312

  153 functionCall: IDENTIFIER LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 343


State 313

  154 functionCall: dotExpression LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 21

    SEMICOLON  [reduce using rule 24 (semis)]
    $default   reduce using rule 24 (semis)

    semis  go to state 344


State 314

  142 opt_simpleIdentifier_EQ: simpleIdentifier • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 345


State 315

  141 valueArguments: LPAREN opt_valueArgument • RPAREN

    RPAREN  shift, and go to state 346


State 316

  140 opt_valueArgument: $@10 •

    $default  reduce using rule 140 (opt_valueArgument)


State 317

  148 valueArgument: opt_simpleIdentifier_EQ • opt_Multi expression

    MULT  shift, and go to state 347

    $default  reduce using rule 146 ($@12)

    opt_Multi  go to state 348
    $@12       go to state 349


State 318

  144 opt_simpleIdentifier_EQ: $@11 •

    $default  reduce using rule 144 (opt_simpleIdentifier_EQ)


State 319

  138 opt_valueArgument: valueArgument • multi_comma_valueArgument opt_comma

    $default  reduce using rule 136 ($@9)

    multi_comma_valueArgument  go to state 350
    $@9                        go to state 351


State 320

  129 postfixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 129 (postfixUnaryOperator)


State 321

  126 memberAccessOperator: QUEST_NO_WS DOT •

    $default  reduce using rule 126 (memberAccessOperator)


State 322

  123 identifier_expression_class: CLASS •

    $default  reduce using rule 123 (identifier_expression_class)


State 323

  121 identifier_expression_class: simpleIdentifier •

    $default  reduce using rule 121 (identifier_expression_class)


State 324

  124 navigationSuffix: memberAccessOperator identifier_expression_class •

    $default  reduce using rule 124 (navigationSuffix)


State 325

  122 identifier_expression_class: parenthesizedExpression •

    $default  reduce using rule 122 (identifier_expression_class)


State 326

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •

    $default  reduce using rule 97 (parenthesizedAssignableExpression)


State 327

  165 loopStatement: FOR LPAREN variable_multivariable IN • expression RPAREN controlStructureBody

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 352
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 328

  166 loopStatement: DO controlStructureBody WHILE LPAREN • expression RPAREN

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 353
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 329

  164 loopStatement: WHILE LPAREN expression RPAREN • control_structure_body_or_comma

    COMMA              shift, and go to state 354
    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    control_structure_body_or_comma            go to state 355
    loopStatement                              go to state 167
    controlStructureBody                       go to state 356
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 330

   25 semis_statement: semis_statement semis statement •

    $default  reduce using rule 25 (semis_statement)


State 331

  130 multi_comma_expression: multi_comma_expression • COMMA expression
  133 indexingSuffix: LSQUARE expression multi_comma_expression • opt_comma RSQUARE

    COMMA  shift, and go to state 357

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 358


State 332

  231 collectionLiteral: LSQUARE expression multi_comma_expression COMMA RSQUARE •

    $default  reduce using rule 231 (collectionLiteral)


State 333

  130 multi_comma_expression: multi_comma_expression COMMA expression •

    $default  reduce using rule 130 (multi_comma_expression)


State 334

  150 ifExpression: IF LPAREN expression RPAREN controls •

    $default  reduce using rule 150 (ifExpression)


State 335

  151 controls: controlStructureBody • ELSE controlStructureBody
  152         | controlStructureBody •

    ELSE  shift, and go to state 359

    ELSE      [reduce using rule 152 (controls)]
    $default  reduce using rule 152 (controls)


State 336

  178 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT • expression RPAREN

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 360
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 337

  184 whenEntry: ELSE ARROW • controlStructureBody SEMICOLON
  185          | ELSE ARROW • controlStructureBody

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 361
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 338

  188 rangeTest: IN expression •

    $default  reduce using rule 188 (rangeTest)


State 339

  179 multi_comma_whenCondition: multi_comma_whenCondition • COMMA whenCondition
  182 whenEntry: whenCondition multi_comma_whenCondition • ARROW controlStructureBody
  183          | whenCondition multi_comma_whenCondition • COMMA ARROW controlStructureBody

    COMMA  shift, and go to state 362
    ARROW  shift, and go to state 363


State 340

  181 multi_comma_whenCondition: $@13 •

    $default  reduce using rule 181 (multi_comma_whenCondition)


State 341

  175 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL •

    $default  reduce using rule 175 (whenExpression)


State 342

  158 functionArguments: functionArguments COMMA expression •

    $default  reduce using rule 158 (functionArguments)


State 343

  153 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 153 (functionCall)


State 344

  154 functionCall: dotExpression LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 154 (functionCall)


State 345

  142 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT •

    $default  reduce using rule 142 (opt_simpleIdentifier_EQ)


State 346

  141 valueArguments: LPAREN opt_valueArgument RPAREN •

    $default  reduce using rule 141 (valueArguments)


State 347

  145 opt_Multi: MULT •

    $default  reduce using rule 145 (opt_Multi)


State 348

  148 valueArgument: opt_simpleIdentifier_EQ opt_Multi • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 364
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 349

  147 opt_Multi: $@12 •

    $default  reduce using rule 147 (opt_Multi)


State 350

  135 multi_comma_valueArgument: multi_comma_valueArgument • COMMA valueArgument
  138 opt_valueArgument: valueArgument multi_comma_valueArgument • opt_comma

    COMMA  shift, and go to state 365

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 366


State 351

  137 multi_comma_valueArgument: $@9 •

    $default  reduce using rule 137 (multi_comma_valueArgument)


State 352

  165 loopStatement: FOR LPAREN variable_multivariable IN expression • RPAREN controlStructureBody

    RPAREN  shift, and go to state 367


State 353

  166 loopStatement: DO controlStructureBody WHILE LPAREN expression • RPAREN

    RPAREN  shift, and go to state 368


State 354

  163 control_structure_body_or_comma: COMMA •

    $default  reduce using rule 163 (control_structure_body_or_comma)


State 355

  164 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma •

    $default  reduce using rule 164 (loopStatement)


State 356

  162 control_structure_body_or_comma: controlStructureBody •

    $default  reduce using rule 162 (control_structure_body_or_comma)


State 357

   66 opt_comma: COMMA •
  130 multi_comma_expression: multi_comma_expression COMMA • expression

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    $default  reduce using rule 66 (opt_comma)

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    expression                 go to state 333
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 358

  133 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma • RSQUARE

    RSQUARE  shift, and go to state 369


State 359

  151 controls: controlStructureBody ELSE • controlStructureBody

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 370
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 360

  178 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression • RPAREN

    RPAREN  shift, and go to state 371


State 361

  184 whenEntry: ELSE ARROW controlStructureBody • SEMICOLON
  185          | ELSE ARROW controlStructureBody •

    SEMICOLON  shift, and go to state 372

    $default  reduce using rule 185 (whenEntry)


State 362

  179 multi_comma_whenCondition: multi_comma_whenCondition COMMA • whenCondition
  183 whenEntry: whenCondition multi_comma_whenCondition COMMA • ARROW controlStructureBody

    LPAREN             shift, and go to state 109
    LSQUARE            shift, and go to state 110
    ARROW              shift, and go to state 373
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    IN                 shift, and go to state 305
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    simpleIdentifier           go to state 122
    postfixUnaryExpression     go to state 123
    parenthesizedExpression    go to state 124
    ifExpression               go to state 125
    functionCall               go to state 126
    dotExpression              go to state 127
    jumpExpression             go to state 128
    whenExpression             go to state 129
    whenCondition              go to state 374
    rangeTest                  go to state 308
    expression                 go to state 309
    disjunction                go to state 131
    conjunction                go to state 132
    equality                   go to state 133
    comparison                 go to state 134
    genericCallLikeComparison  go to state 135
    elvisExpression            go to state 136
    rangeExpression            go to state 137
    additiveExpression         go to state 138
    multiplicativeExpression   go to state 139
    primaryExpression          go to state 140
    collectionLiteral          go to state 141


State 363

  182 whenEntry: whenCondition multi_comma_whenCondition ARROW • controlStructureBody

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 375
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 364

  148 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression •

    $default  reduce using rule 148 (valueArgument)


State 365

   66 opt_comma: COMMA •
  135 multi_comma_valueArgument: multi_comma_valueArgument COMMA • valueArgument

    IDENTIFIER  shift, and go to state 13

    RPAREN      reduce using rule 66 (opt_comma)
    IDENTIFIER  [reduce using rule 143 ($@11)]
    $default    reduce using rule 143 ($@11)

    simpleIdentifier         go to state 314
    opt_simpleIdentifier_EQ  go to state 317
    $@11                     go to state 318
    valueArgument            go to state 376


State 366

  138 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma •

    $default  reduce using rule 138 (opt_valueArgument)


State 367

  165 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN • controlStructureBody

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 377
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 368

  166 loopStatement: DO controlStructureBody WHILE LPAREN expression RPAREN •

    $default  reduce using rule 166 (loopStatement)


State 369

  133 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE •

    $default  reduce using rule 133 (indexingSuffix)


State 370

  151 controls: controlStructureBody ELSE controlStructureBody •

    $default  reduce using rule 151 (controls)


State 371

  178 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN •

    $default  reduce using rule 178 (whenSubject)


State 372

  184 whenEntry: ELSE ARROW controlStructureBody SEMICOLON •

    $default  reduce using rule 184 (whenEntry)


State 373

  183 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW • controlStructureBody

    LPAREN             shift, and go to state 148
    LSQUARE            shift, and go to state 110
    LCURL              shift, and go to state 101
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 111
    WHEN               shift, and go to state 112
    FOR                shift, and go to state 149
    DO                 shift, and go to state 150
    WHILE              shift, and go to state 151
    RETURN             shift, and go to state 113
    CONTINUE           shift, and go to state 114
    BREAK              shift, and go to state 115
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 116
    INTEGER_LITERAL    shift, and go to state 117
    CHARACTER_LITERAL  shift, and go to state 118
    BOOLEAN_LITERAL    shift, and go to state 119
    STRING_LITERAL     shift, and go to state 120
    IDENTIFIER         shift, and go to state 121

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 40 ($@1)
    VAR                reduce using rule 40 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 214
    statement                                  go to state 215
    declaration                                go to state 155
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 156
    classDeclaration                           go to state 12
    assignableExpression                       go to state 157
    multi_unaryPrefix                          go to state 158
    $@5                                        go to state 159
    prefixUnaryExpression                      go to state 160
    parenthesizedAssignableExpression          go to state 161
    assignment                                 go to state 162
    directly_assign                            go to state 163
    directlyAssignableExpression               go to state 164
    parenthesizedDirectlyAssignableExpression  go to state 165
    postfixUnaryExpression                     go to state 166
    parenthesizedExpression                    go to state 124
    ifExpression                               go to state 125
    functionCall                               go to state 126
    dotExpression                              go to state 127
    loopStatement                              go to state 167
    controlStructureBody                       go to state 378
    jumpExpression                             go to state 128
    whenExpression                             go to state 129
    expression                                 go to state 168
    disjunction                                go to state 131
    conjunction                                go to state 132
    equality                                   go to state 133
    comparison                                 go to state 134
    genericCallLikeComparison                  go to state 135
    elvisExpression                            go to state 136
    rangeExpression                            go to state 137
    additiveExpression                         go to state 138
    multiplicativeExpression                   go to state 139
    primaryExpression                          go to state 140
    collectionLiteral                          go to state 141


State 374

  179 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition •

    $default  reduce using rule 179 (multi_comma_whenCondition)


State 375

  182 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody •

    $default  reduce using rule 182 (whenEntry)


State 376

  135 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument •

    $default  reduce using rule 135 (multi_comma_valueArgument)


State 377

  165 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody •

    $default  reduce using rule 165 (loopStatement)


State 378

  183 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody •

    $default  reduce using rule 183 (whenEntry)
