Terminals unused in grammar

    RESERVED
    EXCL_WS
    DOUBLE_ARROW
    COLONCOLON
    DOUBLE_SEMICOLON
    HASH
    AT_NO_WS
    AT_POST_WS
    AT_PRE_WS
    AT_BOTH_WS
    QUEST_WS
    QUEST_DOT
    AS_SAFE
    SINGLE_QUOTE
    RETURN_AT
    CONTINUE_AT
    BREAK_AT
    THIS_AT
    SUPER_AT
    FILES
    FIELD
    PROPERTY
    GET
    SET
    RECEIVER
    PARAM
    SETPARAM
    DELEGATE
    PACKAGE
    IMPORT
    INTERFACE
    OBJECT
    TYPEALIAS
    CONSTRUCTOR
    BY
    COMPANION
    INIT
    THIS
    SUPER
    TYPEOF
    WHERE
    TRY
    CATCH
    FINALLY
    THROW
    AS
    IS
    OUT
    DYNAMIC
    PUBLIC
    PRIVATE
    PROTECTED
    INTERNAL
    ENUM
    SEALED
    ANNOTATION
    DATA
    INNER
    TAILREC
    OPERATOR
    INLINE
    INFIX
    EXTERNAL
    SUSPEND
    OVERRIDE
    ABSTRACT
    NULL_LITERAL
    FINAL
    OPEN
    LATEINIT
    VARARG
    NOINLINE
    CROSSINLINE
    REIFIED
    EXPECT
    ACTUAL
    REAL_LITERAL
    DOUBLE_LITERAL
    HEX_LITERAL
    BIN_LITERAL
    UNSIGNED_LITERAL
    LONG_LITERAL
    INT
    FLOAT
    BOOLEAN
    CHAR
    STRING
    BYTE
    T_EOF
    AND
    OR
    LOWER_THAN_ELSE


State 42 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 99 conflicts: 13 shift/reduce
State 111 conflicts: 13 shift/reduce
State 119 conflicts: 2 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 131 conflicts: 4 shift/reduce
State 132 conflicts: 4 shift/reduce
State 134 conflicts: 2 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 2 shift/reduce
State 137 conflicts: 3 shift/reduce
State 146 conflicts: 13 shift/reduce
State 148 conflicts: 13 shift/reduce
State 153 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 164 conflicts: 2 shift/reduce
State 165 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce
State 173 conflicts: 2 shift/reduce
State 203 conflicts: 7 shift/reduce
State 209 conflicts: 13 shift/reduce
State 261 conflicts: 1 shift/reduce
State 262 conflicts: 4 shift/reduce
State 263 conflicts: 4 shift/reduce
State 265 conflicts: 1 shift/reduce
State 266 conflicts: 1 shift/reduce
State 267 conflicts: 2 shift/reduce
State 274 conflicts: 1 shift/reduce
State 293 conflicts: 13 shift/reduce
State 299 conflicts: 13 shift/reduce
State 311 conflicts: 1 shift/reduce
State 312 conflicts: 1 shift/reduce
State 328 conflicts: 13 shift/reduce
State 334 conflicts: 1 shift/reduce
State 336 conflicts: 13 shift/reduce
State 358 conflicts: 13 shift/reduce
State 362 conflicts: 13 shift/reduce
State 364 conflicts: 1 shift/reduce
State 366 conflicts: 13 shift/reduce
State 372 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: topLevelObjects

    2 topLevelObjects: topLevelObject
    3                | topLevelObjects topLevelObject

    4 topLevelObject: declaration

    5 opt_functionBody: functionBody
    6                 | ε

    7 opt_colon_type: COLON type
    8               | ε

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

   11 functionValueParameters: LPAREN opt_functionValueParameter RPAREN

   12 functionValueParameter: parameter opt_eq_exp

   13 parameter: simpleIdentifier COLON type

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter
   15                              | ε

   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA
   17                           | functionValueParameter multi_comma_functionParameter
   18                           | ε

   19 type: nullableType
   20     | TYPELITERAL

   21 functionBody: block
   22             | ASSIGNMENT expression SEMICOLON

   23 block: LCURL statements RCURL

   24 semis: SEMICOLON
   25      | ε

   26 semis_statement: semis_statement semis statement
   27                | ε

   28 optional_statement_sequence: statement semis_statement
   29                            | ε

   30 statements: optional_statement_sequence

   31 statement: declaration semis
   32          | assignment semis
   33          | expression semis
   34          | loopStatement semis

   35 declaration: classDeclaration
   36            | functionDeclaration
   37            | propertyDeclaration

   38 val_var: VAR
   39        | VAL

   40 opt_modifier: CONST

   41 $@1: ε

   42 opt_modifier: $@1

   43 parenthesizedType: LPAREN type RPAREN

   44 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType

   45 $@2: ε

   46 multi_dot_simpleUserType: $@2

   47 userType: simpleUserType multi_dot_simpleUserType

   48 simpleUserType: simpleIdentifier typeArguments
   49               | simpleIdentifier

   50 multi_quest: multi_quest QUEST_NO_WS

   51 $@3: ε

   52 multi_quest: $@3

   53 nullableType: typeRef_parenthesizedType multi_quest

   54 typeRef_parenthesizedType: parenthesizedType
   55                          | userType

   56 opt_eq_exp: ASSIGNMENT expression

   57 $@4: ε

   58 opt_eq_exp: $@4

   59 multivariable_variableDeclaration: variableDeclaration
   60                                  | multiVariableDeclaration

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

   64 opt_typeParameters: typeParameters
   65                   | ε

   66 opt_comma: COMMA
   67          | ε

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE

   69 typeParameter: simpleIdentifier

   70 multi_typeParameter: multi_typeParameter COMMA typeParameter
   71                    | ε

   72 simpleIdentifier: IDENTIFIER

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody
   74                 | CLASS simpleIdentifier opt_typeParameters classBody

   75 variableDeclaration: type COLON type
   76                    | type

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration
   79                                | ε

   80 classBody: LCURL classMembers RCURL

   81 assignmentAndOperator: ADD_ASSIGNMENT
   82                      | SUB_ASSIGNMENT
   83                      | MULT_ASSIGNMENT
   84                      | DIV_ASSIGNMENT
   85                      | MOD_ASSIGNMENT

   86 assignableExpression: prefixUnaryExpression
   87                     | parenthesizedAssignableExpression

   88 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator

   89 $@5: ε

   90 multi_unaryPrefix: $@5

   91 prefixUnaryOperator: ADD
   92                    | SUB
   93                    | INCR
   94                    | DECR
   95                    | EXCL_NO_WS EXCL_NO_WS

   96 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN

   98 assignment: directly_assign expression

   99 directly_assign: directlyAssignableExpression ASSIGNMENT
  100                | assignableExpression assignmentAndOperator

  101 assignableSuffix: indexingSuffix
  102                 | typeArguments

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE

  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection

  105 $@6: ε

  106 multi_comma_typeProjection: $@6

  107 typeProjection: type
  108               | type QUEST_NO_WS
  109               | MULT

  110 directlyAssignableExpression: postfixUnaryExpression assignableSuffix
  111                             | simpleIdentifier
  112                             | parenthesizedDirectlyAssignableExpression

  113 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN

  114 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix

  115 $@7: ε

  116 multi_postfixUnarySuffix: $@7

  117 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix

  118 postfixUnarySuffix: postfixUnaryOperator
  119                   | indexingSuffix
  120                   | callSuffix
  121                   | navigationSuffix

  122 identifier_expression_class: simpleIdentifier
  123                            | parenthesizedExpression
  124                            | CLASS

  125 navigationSuffix: memberAccessOperator identifier_expression_class

  126 memberAccessOperator: DOT
  127                     | QUEST_NO_WS DOT

  128 postfixUnaryOperator: INCR
  129                     | DECR
  130                     | EXCL_NO_WS EXCL_NO_WS

  131 multi_comma_expression: multi_comma_expression COMMA expression

  132 $@8: ε

  133 multi_comma_expression: $@8

  134 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE

  135 callSuffix: valueArguments

  136 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument

  137 $@9: ε

  138 multi_comma_valueArgument: $@9

  139 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma

  140 $@10: ε

  141 opt_valueArgument: $@10

  142 valueArguments: LPAREN opt_valueArgument RPAREN

  143 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT

  144 $@11: ε

  145 opt_simpleIdentifier_EQ: $@11

  146 opt_Multi: MULT

  147 $@12: ε

  148 opt_Multi: $@12

  149 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression

  150 parenthesizedExpression: LPAREN expression RPAREN

  151 ifExpression: IF LPAREN expression RPAREN controls

  152 controls: controlStructureBody ELSE controlStructureBody
  153         | controlStructureBody

  154 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis
  155             | dotExpression LPAREN functionArguments RPAREN semis

  156 dotExpression: IDENTIFIER DOT IDENTIFIER
  157              | dotExpression DOT IDENTIFIER

  158 functionArguments: expression
  159                  | functionArguments COMMA expression
  160                  | ε

  161 variable_multivariable: variableDeclaration
  162                       | multiVariableDeclaration

  163 control_structure_body_or_comma: controlStructureBody
  164                                | COMMA

  165 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma
  166              | FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody
  167              | DO controlStructureBody WHILE LPAREN expression RPAREN

  168 controlStructureBody: block
  169                     | statement

  170 jumpExpression: RETURN expression
  171               | RETURN
  172               | CONTINUE
  173               | BREAK

  174 multi_whenEntry: multi_whenEntry whenEntry
  175                | ε

  176 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL
  177               | WHEN LCURL multi_whenEntry RCURL

  178 whenSubject: LPAREN expression RPAREN
  179            | LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN

  180 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition

  181 $@13: ε

  182 multi_comma_whenCondition: $@13

  183 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody
  184          | whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody
  185          | ELSE ARROW controlStructureBody SEMICOLON
  186          | ELSE ARROW controlStructureBody

  187 whenCondition: expression
  188              | rangeTest

  189 rangeTest: IN expression

  190 classMembers: ε
  191             | classMembers classMember

  192 classMember: functionDeclaration
  193            | variableDeclaration

  194 expression: disjunction

  195 disjunction: conjunction
  196            | disjunction DISJ conjunction

  197 conjunction: equality
  198            | conjunction CONJ equality

  199 equality: comparison
  200         | equality equality_operator comparison

  201 comparison: genericCallLikeComparison
  202           | comparison comparison_operator genericCallLikeComparison

  203 genericCallLikeComparison: elvisExpression
  204                          | elvisExpression IN elvisExpression

  205 elvisExpression: rangeExpression
  206                | elvisExpression QUEST_COLON rangeExpression

  207 rangeExpression: additiveExpression
  208                | rangeExpression RANGE additiveExpression

  209 additiveExpression: multiplicativeExpression
  210                   | additiveExpression ADD multiplicativeExpression
  211                   | additiveExpression SUB multiplicativeExpression

  212 multiplicativeExpression: postfixUnaryExpression
  213                         | multiplicativeExpression MULT postfixUnaryExpression
  214                         | multiplicativeExpression DIV postfixUnaryExpression
  215                         | multiplicativeExpression MOD postfixUnaryExpression

  216 primaryExpression: parenthesizedExpression
  217                  | simpleIdentifier
  218                  | functionCall
  219                  | INTEGER_LITERAL
  220                  | STRING_LITERAL
  221                  | BOOLEAN_LITERAL
  222                  | FLOAT_LITERAL
  223                  | CHARACTER_LITERAL
  224                  | jumpExpression
  225                  | collectionLiteral
  226                  | ifExpression
  227                  | whenExpression

  228 collectionLiteral: LSQUARE RSQUARE
  229                  | LSQUARE expression COMMA RSQUARE
  230                  | LSQUARE expression RSQUARE
  231                  | LSQUARE expression multi_comma_expression RSQUARE
  232                  | LSQUARE expression multi_comma_expression COMMA RSQUARE

  233 comparison_operator: LANGLE
  234                    | RANGLE
  235                    | LE
  236                    | GE

  237 equality_operator: EQEQ
  238                  | EQEQEQ
  239                  | EXCL_EQ
  240                  | EXCL_EQEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    RESERVED <treeptr> (258)
    DOT <treeptr> (259) 9 44 61 126 127 156 157
    COMMA <treeptr> (260) 14 16 66 70 78 104 131 136 159 164 180 184 229 232
    LPAREN <treeptr> (261) 11 43 77 97 113 142 150 151 154 155 165 166 167 178 179
    RPAREN <treeptr> (262) 11 43 77 97 113 142 150 151 154 155 165 166 167 178 179
    LSQUARE <treeptr> (263) 134 228 229 230 231 232
    RSQUARE <treeptr> (264) 134 228 229 230 231 232
    LCURL <treeptr> (265) 23 80 176 177
    RCURL <treeptr> (266) 23 80 176 177
    INCR <treeptr> (267) 93 128
    DECR <treeptr> (268) 94 129
    CONJ <treeptr> (269) 198
    DISJ <treeptr> (270) 196
    EXCL_WS <treeptr> (271)
    EXCL_NO_WS <treeptr> (272) 95 130
    COLON <treeptr> (273) 7 13 75
    SEMICOLON <treeptr> (274) 22 24 61 62 185
    ASSIGNMENT <treeptr> (275) 22 56 99 143 179
    ADD_ASSIGNMENT <treeptr> (276) 81
    SUB_ASSIGNMENT <treeptr> (277) 82
    MULT_ASSIGNMENT <treeptr> (278) 83
    DIV_ASSIGNMENT <treeptr> (279) 84
    MOD_ASSIGNMENT <treeptr> (280) 85
    ARROW <treeptr> (281) 183 184 185 186
    DOUBLE_ARROW <treeptr> (282)
    RANGE <treeptr> (283) 208
    COLONCOLON <treeptr> (284)
    DOUBLE_SEMICOLON <treeptr> (285)
    HASH <treeptr> (286)
    AT_NO_WS <treeptr> (287)
    AT_POST_WS <treeptr> (288)
    AT_PRE_WS <treeptr> (289)
    AT_BOTH_WS <treeptr> (290)
    QUEST_WS <treeptr> (291)
    QUEST_NO_WS <treeptr> (292) 50 108 127
    LANGLE <treeptr> (293) 68 103 233
    RANGLE <treeptr> (294) 68 103 234
    LE <treeptr> (295) 235
    GE <treeptr> (296) 236
    QUEST_DOT <treeptr> (297)
    EXCL_EQ <treeptr> (298) 239
    EXCL_EQEQ <treeptr> (299) 240
    AS_SAFE <treeptr> (300)
    EQEQ <treeptr> (301) 237
    EQEQEQ <treeptr> (302) 238
    SINGLE_QUOTE <treeptr> (303)
    RETURN_AT <treeptr> (304)
    CONTINUE_AT <treeptr> (305)
    BREAK_AT <treeptr> (306)
    THIS_AT <treeptr> (307)
    SUPER_AT <treeptr> (308)
    FILES <treeptr> (309)
    FIELD <treeptr> (310)
    PROPERTY <treeptr> (311)
    GET <treeptr> (312)
    QUEST_COLON <treeptr> (313) 206
    SET <treeptr> (314)
    RECEIVER <treeptr> (315)
    PARAM <treeptr> (316)
    SETPARAM <treeptr> (317)
    DELEGATE <treeptr> (318)
    PACKAGE <treeptr> (319)
    IMPORT <treeptr> (320)
    CLASS <treeptr> (321) 73 74 124
    INTERFACE <treeptr> (322)
    FUN <treeptr> (323) 9 10
    OBJECT <treeptr> (324)
    VAL <treeptr> (325) 39 179
    VAR <treeptr> (326) 38
    TYPEALIAS <treeptr> (327)
    CONSTRUCTOR <treeptr> (328)
    BY <treeptr> (329)
    COMPANION <treeptr> (330)
    INIT <treeptr> (331)
    THIS <treeptr> (332)
    SUPER <treeptr> (333)
    TYPEOF <treeptr> (334)
    WHERE <treeptr> (335)
    IF <treeptr> (336) 151
    ELSE <treeptr> (337) 152 185 186
    WHEN <treeptr> (338) 176 177
    TRY <treeptr> (339)
    CATCH <treeptr> (340)
    FINALLY <treeptr> (341)
    FOR <treeptr> (342) 166
    DO <treeptr> (343) 167
    WHILE <treeptr> (344) 165 167
    THROW <treeptr> (345)
    RETURN <treeptr> (346) 170 171
    CONTINUE <treeptr> (347) 172
    BREAK <treeptr> (348) 173
    AS <treeptr> (349)
    IS <treeptr> (350)
    IN <treeptr> (351) 166 189 204
    OUT <treeptr> (352)
    DYNAMIC <treeptr> (353)
    PUBLIC <treeptr> (354)
    PRIVATE <treeptr> (355)
    PROTECTED <treeptr> (356)
    INTERNAL <treeptr> (357)
    ENUM <treeptr> (358)
    SEALED <treeptr> (359)
    ANNOTATION <treeptr> (360)
    DATA <treeptr> (361)
    INNER <treeptr> (362)
    TAILREC <treeptr> (363)
    OPERATOR <treeptr> (364)
    INLINE <treeptr> (365)
    INFIX <treeptr> (366)
    EXTERNAL <treeptr> (367)
    SUSPEND <treeptr> (368)
    OVERRIDE <treeptr> (369)
    ABSTRACT <treeptr> (370)
    NULL_LITERAL <treeptr> (371)
    FINAL <treeptr> (372)
    OPEN <treeptr> (373)
    CONST <treeptr> (374) 40 73
    LATEINIT <treeptr> (375)
    VARARG <treeptr> (376)
    NOINLINE <treeptr> (377)
    CROSSINLINE <treeptr> (378)
    REIFIED <treeptr> (379)
    EXPECT <treeptr> (380)
    ACTUAL <treeptr> (381)
    REAL_LITERAL <treeptr> (382)
    FLOAT_LITERAL <treeptr> (383) 222
    DOUBLE_LITERAL <treeptr> (384)
    INTEGER_LITERAL <treeptr> (385) 219
    CHARACTER_LITERAL <treeptr> (386) 223
    HEX_LITERAL <treeptr> (387)
    BIN_LITERAL <treeptr> (388)
    UNSIGNED_LITERAL <treeptr> (389)
    LONG_LITERAL <treeptr> (390)
    BOOLEAN_LITERAL <treeptr> (391) 221
    STRING_LITERAL <treeptr> (392) 220
    INT <treeptr> (393)
    FLOAT <treeptr> (394)
    BOOLEAN <treeptr> (395)
    CHAR <treeptr> (396)
    STRING <treeptr> (397)
    BYTE <treeptr> (398)
    T_EOF <treeptr> (399)
    TYPELITERAL <treeptr> (400) 20
    MULT <treeptr> (401) 109 146 213
    MOD <treeptr> (402) 215
    DIV <treeptr> (403) 214
    ADD <treeptr> (404) 91 210
    SUB <treeptr> (405) 92 211
    IDENTIFIER <treeptr> (406) 72 154 156 157
    AND (407)
    OR (408)
    LOWER_THAN_ELSE (409)


Nonterminals, with rules where they appear

    $accept (155)
        on left: 0
    program <treeptr> (156)
        on left: 1
        on right: 0
    topLevelObjects <treeptr> (157)
        on left: 2 3
        on right: 1 3
    topLevelObject <treeptr> (158)
        on left: 4
        on right: 2 3
    opt_functionBody <treeptr> (159)
        on left: 5 6
        on right: 9 10
    opt_colon_type <treeptr> (160)
        on left: 7 8
        on right: 9 10
    functionDeclaration <treeptr> (161)
        on left: 9 10
        on right: 36 192
    functionValueParameters <treeptr> (162)
        on left: 11
        on right: 9 10
    functionValueParameter <treeptr> (163)
        on left: 12
        on right: 14 16 17
    parameter <treeptr> (164)
        on left: 13
        on right: 12
    multi_comma_functionParameter <treeptr> (165)
        on left: 14 15
        on right: 14 16 17
    opt_functionValueParameter <treeptr> (166)
        on left: 16 17 18
        on right: 11
    type <treeptr> (167)
        on left: 19 20
        on right: 7 13 43 75 76 107 108
    functionBody <treeptr> (168)
        on left: 21 22
        on right: 5
    block <treeptr> (169)
        on left: 23
        on right: 21 168
    semis <treeptr> (170)
        on left: 24 25
        on right: 26 31 32 33 34 154 155
    semis_statement <treeptr> (171)
        on left: 26 27
        on right: 26 28
    optional_statement_sequence <treeptr> (172)
        on left: 28 29
        on right: 30
    statements <treeptr> (173)
        on left: 30
        on right: 23
    statement <treeptr> (174)
        on left: 31 32 33 34
        on right: 26 28 169
    declaration <treeptr> (175)
        on left: 35 36 37
        on right: 4 31
    val_var <treeptr> (176)
        on left: 38 39
        on right: 61 62 63
    opt_modifier <treeptr> (177)
        on left: 40 42
        on right: 61 62 63
    $@1 (178)
        on left: 41
        on right: 42
    parenthesizedType <treeptr> (179)
        on left: 43
        on right: 54
    multi_dot_simpleUserType <treeptr> (180)
        on left: 44 46
        on right: 44 47
    $@2 (181)
        on left: 45
        on right: 46
    userType <treeptr> (182)
        on left: 47
        on right: 55
    simpleUserType <treeptr> (183)
        on left: 48 49
        on right: 44 47
    multi_quest <treeptr> (184)
        on left: 50 52
        on right: 50 53
    $@3 (185)
        on left: 51
        on right: 52
    nullableType <treeptr> (186)
        on left: 53
        on right: 9 19 61
    typeRef_parenthesizedType <treeptr> (187)
        on left: 54 55
        on right: 53
    opt_eq_exp <treeptr> (188)
        on left: 56 58
        on right: 12 61 62 63
    $@4 (189)
        on left: 57
        on right: 58
    multivariable_variableDeclaration <treeptr> (190)
        on left: 59 60
        on right: 61 62 63
    propertyDeclaration <treeptr> (191)
        on left: 61 62 63
        on right: 37
    opt_typeParameters <treeptr> (192)
        on left: 64 65
        on right: 9 10 61 62 63 73 74
    opt_comma <treeptr> (193)
        on left: 66 67
        on right: 68 77 103 134 139
    typeParameters <treeptr> (194)
        on left: 68
        on right: 64
    typeParameter <treeptr> (195)
        on left: 69
        on right: 68 70
    multi_typeParameter <treeptr> (196)
        on left: 70 71
        on right: 68 70
    simpleIdentifier <treeptr> (197)
        on left: 72
        on right: 9 10 13 48 49 69 73 74 111 122 143 217
    classDeclaration <treeptr> (198)
        on left: 73 74
        on right: 35
    variableDeclaration <treeptr> (199)
        on left: 75 76
        on right: 59 77 78 161 179 193
    multiVariableDeclaration <treeptr> (200)
        on left: 77
        on right: 60 162
    multi_comma_variableDeclaration <treeptr> (201)
        on left: 78 79
        on right: 77 78
    classBody <treeptr> (202)
        on left: 80
        on right: 73 74
    assignmentAndOperator <treeptr> (203)
        on left: 81 82 83 84 85
        on right: 100
    assignableExpression <treeptr> (204)
        on left: 86 87
        on right: 97 100 113
    multi_unaryPrefix <treeptr> (205)
        on left: 88 90
        on right: 88 96
    $@5 (206)
        on left: 89
        on right: 90
    prefixUnaryOperator <treeptr> (207)
        on left: 91 92 93 94 95
        on right: 88
    prefixUnaryExpression <treeptr> (208)
        on left: 96
        on right: 86
    parenthesizedAssignableExpression <treeptr> (209)
        on left: 97
        on right: 87
    assignment <treeptr> (210)
        on left: 98
        on right: 32
    directly_assign <treeptr> (211)
        on left: 99 100
        on right: 98
    assignableSuffix <treeptr> (212)
        on left: 101 102
        on right: 110
    typeArguments <treeptr> (213)
        on left: 103
        on right: 48 102
    multi_comma_typeProjection <treeptr> (214)
        on left: 104 106
        on right: 103 104
    $@6 (215)
        on left: 105
        on right: 106
    typeProjection <treeptr> (216)
        on left: 107 108 109
        on right: 103 104
    directlyAssignableExpression <treeptr> (217)
        on left: 110 111 112
        on right: 99
    parenthesizedDirectlyAssignableExpression <treeptr> (218)
        on left: 113
        on right: 112
    multi_postfixUnarySuffix <treeptr> (219)
        on left: 114 116
        on right: 114 117
    $@7 (220)
        on left: 115
        on right: 116
    postfixUnaryExpression <treeptr> (221)
        on left: 117
        on right: 96 110 212 213 214 215
    postfixUnarySuffix <treeptr> (222)
        on left: 118 119 120 121
        on right: 114
    identifier_expression_class <treeptr> (223)
        on left: 122 123 124
        on right: 125
    navigationSuffix <treeptr> (224)
        on left: 125
        on right: 121
    memberAccessOperator <treeptr> (225)
        on left: 126 127
        on right: 125
    postfixUnaryOperator <treeptr> (226)
        on left: 128 129 130
        on right: 118
    multi_comma_expression <treeptr> (227)
        on left: 131 133
        on right: 131 134 231 232
    $@8 (228)
        on left: 132
        on right: 133
    indexingSuffix <treeptr> (229)
        on left: 134
        on right: 101 119
    callSuffix <treeptr> (230)
        on left: 135
        on right: 120
    multi_comma_valueArgument <treeptr> (231)
        on left: 136 138
        on right: 136 139
    $@9 (232)
        on left: 137
        on right: 138
    opt_valueArgument <treeptr> (233)
        on left: 139 141
        on right: 142
    $@10 (234)
        on left: 140
        on right: 141
    valueArguments <treeptr> (235)
        on left: 142
        on right: 135
    opt_simpleIdentifier_EQ <treeptr> (236)
        on left: 143 145
        on right: 149
    $@11 (237)
        on left: 144
        on right: 145
    opt_Multi <treeptr> (238)
        on left: 146 148
        on right: 149
    $@12 (239)
        on left: 147
        on right: 148
    valueArgument <treeptr> (240)
        on left: 149
        on right: 136 139
    parenthesizedExpression <treeptr> (241)
        on left: 150
        on right: 123 216
    ifExpression <treeptr> (242)
        on left: 151
        on right: 226
    controls <treeptr> (243)
        on left: 152 153
        on right: 151
    functionCall <treeptr> (244)
        on left: 154 155
        on right: 218
    dotExpression <treeptr> (245)
        on left: 156 157
        on right: 155 157
    functionArguments <treeptr> (246)
        on left: 158 159 160
        on right: 154 155 159
    variable_multivariable <treeptr> (247)
        on left: 161 162
        on right: 166
    control_structure_body_or_comma <treeptr> (248)
        on left: 163 164
        on right: 165
    loopStatement <treeptr> (249)
        on left: 165 166 167
        on right: 34
    controlStructureBody <treeptr> (250)
        on left: 168 169
        on right: 152 153 163 166 167 183 184 185 186
    jumpExpression <treeptr> (251)
        on left: 170 171 172 173
        on right: 224
    multi_whenEntry <treeptr> (252)
        on left: 174 175
        on right: 174 176 177
    whenExpression <treeptr> (253)
        on left: 176 177
        on right: 227
    whenSubject <treeptr> (254)
        on left: 178 179
        on right: 176
    multi_comma_whenCondition <treeptr> (255)
        on left: 180 182
        on right: 180 183 184
    $@13 (256)
        on left: 181
        on right: 182
    whenEntry <treeptr> (257)
        on left: 183 184 185 186
        on right: 174
    whenCondition <treeptr> (258)
        on left: 187 188
        on right: 180 183 184
    rangeTest <treeptr> (259)
        on left: 189
        on right: 188
    classMembers <treeptr> (260)
        on left: 190 191
        on right: 80 191
    classMember <treeptr> (261)
        on left: 192 193
        on right: 191
    expression <treeptr> (262)
        on left: 194
        on right: 22 33 56 98 131 134 149 150 151 158 159 165 166 167 170 178 179 187 189 229 230 231 232
    disjunction <treeptr> (263)
        on left: 195 196
        on right: 194 196
    conjunction <treeptr> (264)
        on left: 197 198
        on right: 195 196 198
    equality <treeptr> (265)
        on left: 199 200
        on right: 197 198 200
    comparison <treeptr> (266)
        on left: 201 202
        on right: 199 200 202
    genericCallLikeComparison <treeptr> (267)
        on left: 203 204
        on right: 201 202
    elvisExpression <treeptr> (268)
        on left: 205 206
        on right: 203 204 206
    rangeExpression <treeptr> (269)
        on left: 207 208
        on right: 205 206 208
    additiveExpression <treeptr> (270)
        on left: 209 210 211
        on right: 207 208 210 211
    multiplicativeExpression <treeptr> (271)
        on left: 212 213 214 215
        on right: 209 210 211 213 214 215
    primaryExpression <treeptr> (272)
        on left: 216 217 218 219 220 221 222 223 224 225 226 227
        on right: 117
    collectionLiteral <treeptr> (273)
        on left: 228 229 230 231 232
        on right: 225
    comparison_operator <treeptr> (274)
        on left: 233 234 235 236
        on right: 202
    equality_operator <treeptr> (275)
        on left: 237 238 239 240
        on right: 200


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    $default  reduce using rule 41 ($@1)

    program              go to state 4
    topLevelObjects      go to state 5
    topLevelObject       go to state 6
    functionDeclaration  go to state 7
    declaration          go to state 8
    opt_modifier         go to state 9
    $@1                  go to state 10
    propertyDeclaration  go to state 11
    classDeclaration     go to state 12


State 1

   74 classDeclaration: CLASS • simpleIdentifier opt_typeParameters classBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 14


State 2

    9 functionDeclaration: FUN • opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN • opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 16
    typeParameters      go to state 17


State 3

   40 opt_modifier: CONST •
   73 classDeclaration: CONST • CLASS simpleIdentifier opt_typeParameters classBody

    CLASS  shift, and go to state 18

    $default  reduce using rule 40 (opt_modifier)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 19


State 5

    1 program: topLevelObjects •
    3 topLevelObjects: topLevelObjects • topLevelObject

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    $end      reduce using rule 1 (program)
    $default  reduce using rule 41 ($@1)

    topLevelObject       go to state 20
    functionDeclaration  go to state 7
    declaration          go to state 8
    opt_modifier         go to state 9
    $@1                  go to state 10
    propertyDeclaration  go to state 11
    classDeclaration     go to state 12


State 6

    2 topLevelObjects: topLevelObject •

    $default  reduce using rule 2 (topLevelObjects)


State 7

   36 declaration: functionDeclaration •

    $default  reduce using rule 36 (declaration)


State 8

    4 topLevelObject: declaration •

    $default  reduce using rule 4 (topLevelObject)


State 9

   61 propertyDeclaration: opt_modifier • val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    VAL  shift, and go to state 21
    VAR  shift, and go to state 22

    val_var  go to state 23


State 10

   42 opt_modifier: $@1 •

    $default  reduce using rule 42 (opt_modifier)


State 11

   37 declaration: propertyDeclaration •

    $default  reduce using rule 37 (declaration)


State 12

   35 declaration: classDeclaration •

    $default  reduce using rule 35 (declaration)


State 13

   72 simpleIdentifier: IDENTIFIER •

    $default  reduce using rule 72 (simpleIdentifier)


State 14

   74 classDeclaration: CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 24
    typeParameters      go to state 17


State 15

   68 typeParameters: LANGLE • typeParameter multi_typeParameter opt_comma RANGLE

    IDENTIFIER  shift, and go to state 13

    typeParameter     go to state 25
    simpleIdentifier  go to state 26


State 16

    9 functionDeclaration: FUN opt_typeParameters • nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   10                    | FUN opt_typeParameters • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 13

    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 31
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 33


State 17

   64 opt_typeParameters: typeParameters •

    $default  reduce using rule 64 (opt_typeParameters)


State 18

   73 classDeclaration: CONST CLASS • simpleIdentifier opt_typeParameters classBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 34


State 19

    0 $accept: program $end •

    $default  accept


State 20

    3 topLevelObjects: topLevelObjects topLevelObject •

    $default  reduce using rule 3 (topLevelObjects)


State 21

   39 val_var: VAL •

    $default  reduce using rule 39 (val_var)


State 22

   38 val_var: VAR •

    $default  reduce using rule 38 (val_var)


State 23

   61 propertyDeclaration: opt_modifier val_var • opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 35
    typeParameters      go to state 17


State 24

   74 classDeclaration: CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 36

    classBody  go to state 37


State 25

   68 typeParameters: LANGLE typeParameter • multi_typeParameter opt_comma RANGLE

    $default  reduce using rule 71 (multi_typeParameter)

    multi_typeParameter  go to state 38


State 26

   69 typeParameter: simpleIdentifier •

    $default  reduce using rule 69 (typeParameter)


State 27

   43 parenthesizedType: LPAREN • type RPAREN

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 40
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42


State 28

   54 typeRef_parenthesizedType: parenthesizedType •

    $default  reduce using rule 54 (typeRef_parenthesizedType)


State 29

   55 typeRef_parenthesizedType: userType •

    $default  reduce using rule 55 (typeRef_parenthesizedType)


State 30

   47 userType: simpleUserType • multi_dot_simpleUserType

    $default  reduce using rule 45 ($@2)

    multi_dot_simpleUserType  go to state 43
    $@2                       go to state 44


State 31

    9 functionDeclaration: FUN opt_typeParameters nullableType • DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    DOT  shift, and go to state 45


State 32

   53 nullableType: typeRef_parenthesizedType • multi_quest

    $default  reduce using rule 51 ($@3)

    multi_quest  go to state 46
    $@3          go to state 47


State 33

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody
   48 simpleUserType: simpleIdentifier • typeArguments
   49               | simpleIdentifier •

    LPAREN  shift, and go to state 48
    LANGLE  shift, and go to state 49

    $default  reduce using rule 49 (simpleUserType)

    functionValueParameters  go to state 50
    typeArguments            go to state 51


State 34

   73 classDeclaration: CONST CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 15

    $default  reduce using rule 65 (opt_typeParameters)

    opt_typeParameters  go to state 52
    typeParameters      go to state 17


State 35

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters • nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   62                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp

    LPAREN       shift, and go to state 53
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                               go to state 54
    parenthesizedType                  go to state 28
    userType                           go to state 29
    simpleUserType                     go to state 30
    nullableType                       go to state 55
    typeRef_parenthesizedType          go to state 32
    multivariable_variableDeclaration  go to state 56
    simpleIdentifier                   go to state 42
    variableDeclaration                go to state 57
    multiVariableDeclaration           go to state 58


State 36

   80 classBody: LCURL • classMembers RCURL

    $default  reduce using rule 190 (classMembers)

    classMembers  go to state 59


State 37

   74 classDeclaration: CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 74 (classDeclaration)


State 38

   68 typeParameters: LANGLE typeParameter multi_typeParameter • opt_comma RANGLE
   70 multi_typeParameter: multi_typeParameter • COMMA typeParameter

    COMMA  shift, and go to state 60

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 61


State 39

   20 type: TYPELITERAL •

    $default  reduce using rule 20 (type)


State 40

   43 parenthesizedType: LPAREN type • RPAREN

    RPAREN  shift, and go to state 62


State 41

   19 type: nullableType •

    $default  reduce using rule 19 (type)


State 42

   48 simpleUserType: simpleIdentifier • typeArguments
   49               | simpleIdentifier •

    LANGLE  shift, and go to state 49

    LANGLE    [reduce using rule 49 (simpleUserType)]
    $default  reduce using rule 49 (simpleUserType)

    typeArguments  go to state 51


State 43

   44 multi_dot_simpleUserType: multi_dot_simpleUserType • DOT simpleUserType
   47 userType: simpleUserType multi_dot_simpleUserType •

    DOT  shift, and go to state 63

    DOT       [reduce using rule 47 (userType)]
    $default  reduce using rule 47 (userType)


State 44

   46 multi_dot_simpleUserType: $@2 •

    $default  reduce using rule 46 (multi_dot_simpleUserType)


State 45

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    IDENTIFIER  shift, and go to state 13

    simpleIdentifier  go to state 64


State 46

   50 multi_quest: multi_quest • QUEST_NO_WS
   53 nullableType: typeRef_parenthesizedType multi_quest •

    QUEST_NO_WS  shift, and go to state 65

    QUEST_NO_WS  [reduce using rule 53 (nullableType)]
    $default     reduce using rule 53 (nullableType)


State 47

   52 multi_quest: $@3 •

    $default  reduce using rule 52 (multi_quest)


State 48

   11 functionValueParameters: LPAREN • opt_functionValueParameter RPAREN

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 18 (opt_functionValueParameter)

    functionValueParameter      go to state 66
    parameter                   go to state 67
    opt_functionValueParameter  go to state 68
    simpleIdentifier            go to state 69


State 49

  103 typeArguments: LANGLE • typeProjection multi_comma_typeProjection opt_comma RANGLE

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    MULT         shift, and go to state 70
    IDENTIFIER   shift, and go to state 13

    type                       go to state 71
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    typeProjection             go to state 72


State 50

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 73

    $default  reduce using rule 8 (opt_colon_type)

    opt_colon_type  go to state 74


State 51

   48 simpleUserType: simpleIdentifier typeArguments •

    $default  reduce using rule 48 (simpleUserType)


State 52

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 36

    classBody  go to state 75


State 53

   43 parenthesizedType: LPAREN • type RPAREN
   77 multiVariableDeclaration: LPAREN • variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 76
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    variableDeclaration        go to state 77


State 54

   75 variableDeclaration: type • COLON type
   76                    | type •

    COLON  shift, and go to state 78

    $default  reduce using rule 76 (variableDeclaration)


State 55

   19 type: nullableType •
   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType • DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON

    DOT  shift, and go to state 79

    DOT       [reduce using rule 19 (type)]
    $default  reduce using rule 19 (type)


State 56

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp

    ASSIGNMENT  shift, and go to state 80

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 81
    $@4         go to state 82


State 57

   59 multivariable_variableDeclaration: variableDeclaration •

    $default  reduce using rule 59 (multivariable_variableDeclaration)


State 58

   60 multivariable_variableDeclaration: multiVariableDeclaration •

    $default  reduce using rule 60 (multivariable_variableDeclaration)


State 59

   80 classBody: LCURL classMembers • RCURL
  191 classMembers: classMembers • classMember

    LPAREN       shift, and go to state 27
    RCURL        shift, and go to state 83
    FUN          shift, and go to state 2
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    functionDeclaration        go to state 84
    type                       go to state 54
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    variableDeclaration        go to state 85
    classMember                go to state 86


State 60

   66 opt_comma: COMMA •
   70 multi_typeParameter: multi_typeParameter COMMA • typeParameter

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    typeParameter     go to state 87
    simpleIdentifier  go to state 26


State 61

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma • RANGLE

    RANGLE  shift, and go to state 88


State 62

   43 parenthesizedType: LPAREN type RPAREN •

    $default  reduce using rule 43 (parenthesizedType)


State 63

   44 multi_dot_simpleUserType: multi_dot_simpleUserType DOT • simpleUserType

    IDENTIFIER  shift, and go to state 13

    simpleUserType    go to state 89
    simpleIdentifier  go to state 42


State 64

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody

    LPAREN  shift, and go to state 48

    functionValueParameters  go to state 90


State 65

   50 multi_quest: multi_quest QUEST_NO_WS •

    $default  reduce using rule 50 (multi_quest)


State 66

   16 opt_functionValueParameter: functionValueParameter • multi_comma_functionParameter COMMA
   17                           | functionValueParameter • multi_comma_functionParameter

    $default  reduce using rule 15 (multi_comma_functionParameter)

    multi_comma_functionParameter  go to state 91


State 67

   12 functionValueParameter: parameter • opt_eq_exp

    ASSIGNMENT  shift, and go to state 80

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 92
    $@4         go to state 82


State 68

   11 functionValueParameters: LPAREN opt_functionValueParameter • RPAREN

    RPAREN  shift, and go to state 93


State 69

   13 parameter: simpleIdentifier • COLON type

    COLON  shift, and go to state 94


State 70

  109 typeProjection: MULT •

    $default  reduce using rule 109 (typeProjection)


State 71

  107 typeProjection: type •
  108               | type • QUEST_NO_WS

    QUEST_NO_WS  shift, and go to state 95

    $default  reduce using rule 107 (typeProjection)


State 72

  103 typeArguments: LANGLE typeProjection • multi_comma_typeProjection opt_comma RANGLE

    $default  reduce using rule 105 ($@6)

    multi_comma_typeProjection  go to state 96
    $@6                         go to state 97


State 73

    7 opt_colon_type: COLON • type

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 98
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42


State 74

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 99
    ASSIGNMENT  shift, and go to state 100

    $default  reduce using rule 6 (opt_functionBody)

    opt_functionBody  go to state 101
    functionBody      go to state 102
    block             go to state 103


State 75

   73 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 73 (classDeclaration)


State 76

   43 parenthesizedType: LPAREN type • RPAREN
   75 variableDeclaration: type • COLON type
   76                    | type •

    RPAREN  shift, and go to state 62
    COLON   shift, and go to state 78

    RPAREN    [reduce using rule 76 (variableDeclaration)]
    $default  reduce using rule 76 (variableDeclaration)


State 77

   77 multiVariableDeclaration: LPAREN variableDeclaration • multi_comma_variableDeclaration opt_comma RPAREN

    $default  reduce using rule 79 (multi_comma_variableDeclaration)

    multi_comma_variableDeclaration  go to state 104


State 78

   75 variableDeclaration: type COLON • type

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 105
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42


State 79

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT • multivariable_variableDeclaration opt_eq_exp SEMICOLON

    LPAREN       shift, and go to state 53
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                               go to state 54
    parenthesizedType                  go to state 28
    userType                           go to state 29
    simpleUserType                     go to state 30
    nullableType                       go to state 41
    typeRef_parenthesizedType          go to state 32
    multivariable_variableDeclaration  go to state 106
    simpleIdentifier                   go to state 42
    variableDeclaration                go to state 57
    multiVariableDeclaration           go to state 58


State 80

   56 opt_eq_exp: ASSIGNMENT • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 128
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 81

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp • SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp •

    SEMICOLON  shift, and go to state 140

    SEMICOLON  [reduce using rule 63 (propertyDeclaration)]
    $default   reduce using rule 63 (propertyDeclaration)


State 82

   58 opt_eq_exp: $@4 •

    $default  reduce using rule 58 (opt_eq_exp)


State 83

   80 classBody: LCURL classMembers RCURL •

    $default  reduce using rule 80 (classBody)


State 84

  192 classMember: functionDeclaration •

    $default  reduce using rule 192 (classMember)


State 85

  193 classMember: variableDeclaration •

    $default  reduce using rule 193 (classMember)


State 86

  191 classMembers: classMembers classMember •

    $default  reduce using rule 191 (classMembers)


State 87

   70 multi_typeParameter: multi_typeParameter COMMA typeParameter •

    $default  reduce using rule 70 (multi_typeParameter)


State 88

   68 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE •

    $default  reduce using rule 68 (typeParameters)


State 89

   44 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType •

    $default  reduce using rule 44 (multi_dot_simpleUserType)


State 90

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 73

    $default  reduce using rule 8 (opt_colon_type)

    opt_colon_type  go to state 141


State 91

   14 multi_comma_functionParameter: multi_comma_functionParameter • COMMA functionValueParameter
   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter • COMMA
   17                           | functionValueParameter multi_comma_functionParameter •

    COMMA  shift, and go to state 142

    $default  reduce using rule 17 (opt_functionValueParameter)


State 92

   12 functionValueParameter: parameter opt_eq_exp •

    $default  reduce using rule 12 (functionValueParameter)


State 93

   11 functionValueParameters: LPAREN opt_functionValueParameter RPAREN •

    $default  reduce using rule 11 (functionValueParameters)


State 94

   13 parameter: simpleIdentifier COLON • type

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 143
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42


State 95

  108 typeProjection: type QUEST_NO_WS •

    $default  reduce using rule 108 (typeProjection)


State 96

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection • opt_comma RANGLE
  104 multi_comma_typeProjection: multi_comma_typeProjection • COMMA typeProjection

    COMMA  shift, and go to state 144

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 145


State 97

  106 multi_comma_typeProjection: $@6 •

    $default  reduce using rule 106 (multi_comma_typeProjection)


State 98

    7 opt_colon_type: COLON type •

    $default  reduce using rule 7 (opt_colon_type)


State 99

   23 block: LCURL • statements RCURL

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    RCURL              reduce using rule 29 (optional_statement_sequence)
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    optional_statement_sequence                go to state 150
    statements                                 go to state 151
    statement                                  go to state 152
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 100

   22 functionBody: ASSIGNMENT • expression SEMICOLON

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 167
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 101

   10 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 10 (functionDeclaration)


State 102

    5 opt_functionBody: functionBody •

    $default  reduce using rule 5 (opt_functionBody)


State 103

   21 functionBody: block •

    $default  reduce using rule 21 (functionBody)


State 104

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration • opt_comma RPAREN
   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration • COMMA variableDeclaration

    COMMA  shift, and go to state 168

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 169


State 105

   75 variableDeclaration: type COLON type •

    $default  reduce using rule 75 (variableDeclaration)


State 106

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration • opt_eq_exp SEMICOLON

    ASSIGNMENT  shift, and go to state 80

    $default  reduce using rule 57 ($@4)

    opt_eq_exp  go to state 170
    $@4         go to state 82


State 107

  150 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 171
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 108

  228 collectionLiteral: LSQUARE • RSQUARE
  229                  | LSQUARE • expression COMMA RSQUARE
  230                  | LSQUARE • expression RSQUARE
  231                  | LSQUARE • expression multi_comma_expression RSQUARE
  232                  | LSQUARE • expression multi_comma_expression COMMA RSQUARE

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    RSQUARE            shift, and go to state 172
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 173
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 109

  151 ifExpression: IF • LPAREN expression RPAREN controls

    LPAREN  shift, and go to state 174


State 110

  176 whenExpression: WHEN • whenSubject LCURL multi_whenEntry RCURL
  177               | WHEN • LCURL multi_whenEntry RCURL

    LPAREN  shift, and go to state 175
    LCURL   shift, and go to state 176

    whenSubject  go to state 177


State 111

  170 jumpExpression: RETURN • expression
  171               | RETURN •

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 171 (jumpExpression)]
    LSQUARE            [reduce using rule 171 (jumpExpression)]
    IF                 [reduce using rule 171 (jumpExpression)]
    WHEN               [reduce using rule 171 (jumpExpression)]
    RETURN             [reduce using rule 171 (jumpExpression)]
    CONTINUE           [reduce using rule 171 (jumpExpression)]
    BREAK              [reduce using rule 171 (jumpExpression)]
    FLOAT_LITERAL      [reduce using rule 171 (jumpExpression)]
    INTEGER_LITERAL    [reduce using rule 171 (jumpExpression)]
    CHARACTER_LITERAL  [reduce using rule 171 (jumpExpression)]
    BOOLEAN_LITERAL    [reduce using rule 171 (jumpExpression)]
    STRING_LITERAL     [reduce using rule 171 (jumpExpression)]
    IDENTIFIER         [reduce using rule 171 (jumpExpression)]
    $default           reduce using rule 171 (jumpExpression)

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 178
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 112

  172 jumpExpression: CONTINUE •

    $default  reduce using rule 172 (jumpExpression)


State 113

  173 jumpExpression: BREAK •

    $default  reduce using rule 173 (jumpExpression)


State 114

  222 primaryExpression: FLOAT_LITERAL •

    $default  reduce using rule 222 (primaryExpression)


State 115

  219 primaryExpression: INTEGER_LITERAL •

    $default  reduce using rule 219 (primaryExpression)


State 116

  223 primaryExpression: CHARACTER_LITERAL •

    $default  reduce using rule 223 (primaryExpression)


State 117

  221 primaryExpression: BOOLEAN_LITERAL •

    $default  reduce using rule 221 (primaryExpression)


State 118

  220 primaryExpression: STRING_LITERAL •

    $default  reduce using rule 220 (primaryExpression)


State 119

   72 simpleIdentifier: IDENTIFIER •
  154 functionCall: IDENTIFIER • LPAREN functionArguments RPAREN semis
  156 dotExpression: IDENTIFIER • DOT IDENTIFIER

    DOT     shift, and go to state 179
    LPAREN  shift, and go to state 180

    DOT       [reduce using rule 72 (simpleIdentifier)]
    LPAREN    [reduce using rule 72 (simpleIdentifier)]
    $default  reduce using rule 72 (simpleIdentifier)


State 120

  217 primaryExpression: simpleIdentifier •

    $default  reduce using rule 217 (primaryExpression)


State 121

  212 multiplicativeExpression: postfixUnaryExpression •

    $default  reduce using rule 212 (multiplicativeExpression)


State 122

  216 primaryExpression: parenthesizedExpression •

    $default  reduce using rule 216 (primaryExpression)


State 123

  226 primaryExpression: ifExpression •

    $default  reduce using rule 226 (primaryExpression)


State 124

  218 primaryExpression: functionCall •

    $default  reduce using rule 218 (primaryExpression)


State 125

  155 functionCall: dotExpression • LPAREN functionArguments RPAREN semis
  157 dotExpression: dotExpression • DOT IDENTIFIER

    DOT     shift, and go to state 181
    LPAREN  shift, and go to state 182


State 126

  224 primaryExpression: jumpExpression •

    $default  reduce using rule 224 (primaryExpression)


State 127

  227 primaryExpression: whenExpression •

    $default  reduce using rule 227 (primaryExpression)


State 128

   56 opt_eq_exp: ASSIGNMENT expression •

    $default  reduce using rule 56 (opt_eq_exp)


State 129

  194 expression: disjunction •
  196 disjunction: disjunction • DISJ conjunction

    DISJ  shift, and go to state 183

    DISJ      [reduce using rule 194 (expression)]
    $default  reduce using rule 194 (expression)


State 130

  195 disjunction: conjunction •
  198 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 184

    CONJ      [reduce using rule 195 (disjunction)]
    $default  reduce using rule 195 (disjunction)


State 131

  197 conjunction: equality •
  200 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 185
    EXCL_EQEQ  shift, and go to state 186
    EQEQ       shift, and go to state 187
    EQEQEQ     shift, and go to state 188

    EXCL_EQ    [reduce using rule 197 (conjunction)]
    EXCL_EQEQ  [reduce using rule 197 (conjunction)]
    EQEQ       [reduce using rule 197 (conjunction)]
    EQEQEQ     [reduce using rule 197 (conjunction)]
    $default   reduce using rule 197 (conjunction)

    equality_operator  go to state 189


State 132

  199 equality: comparison •
  202 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 190
    RANGLE  shift, and go to state 191
    LE      shift, and go to state 192
    GE      shift, and go to state 193

    LANGLE    [reduce using rule 199 (equality)]
    RANGLE    [reduce using rule 199 (equality)]
    LE        [reduce using rule 199 (equality)]
    GE        [reduce using rule 199 (equality)]
    $default  reduce using rule 199 (equality)

    comparison_operator  go to state 194


State 133

  201 comparison: genericCallLikeComparison •

    $default  reduce using rule 201 (comparison)


State 134

  203 genericCallLikeComparison: elvisExpression •
  204                          | elvisExpression • IN elvisExpression
  206 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 195
    IN           shift, and go to state 196

    QUEST_COLON  [reduce using rule 203 (genericCallLikeComparison)]
    IN           [reduce using rule 203 (genericCallLikeComparison)]
    $default     reduce using rule 203 (genericCallLikeComparison)


State 135

  205 elvisExpression: rangeExpression •
  208 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 197

    RANGE     [reduce using rule 205 (elvisExpression)]
    $default  reduce using rule 205 (elvisExpression)


State 136

  207 rangeExpression: additiveExpression •
  210 additiveExpression: additiveExpression • ADD multiplicativeExpression
  211                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 198
    SUB  shift, and go to state 199

    ADD       [reduce using rule 207 (rangeExpression)]
    SUB       [reduce using rule 207 (rangeExpression)]
    $default  reduce using rule 207 (rangeExpression)


State 137

  209 additiveExpression: multiplicativeExpression •
  213 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  214                         | multiplicativeExpression • DIV postfixUnaryExpression
  215                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 200
    MOD   shift, and go to state 201
    DIV   shift, and go to state 202

    MULT      [reduce using rule 209 (additiveExpression)]
    MOD       [reduce using rule 209 (additiveExpression)]
    DIV       [reduce using rule 209 (additiveExpression)]
    $default  reduce using rule 209 (additiveExpression)


State 138

  117 postfixUnaryExpression: primaryExpression • multi_postfixUnarySuffix

    $default  reduce using rule 115 ($@7)

    multi_postfixUnarySuffix  go to state 203
    $@7                       go to state 204


State 139

  225 primaryExpression: collectionLiteral •

    $default  reduce using rule 225 (primaryExpression)


State 140

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 62 (propertyDeclaration)


State 141

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 99
    ASSIGNMENT  shift, and go to state 100

    $default  reduce using rule 6 (opt_functionBody)

    opt_functionBody  go to state 205
    functionBody      go to state 102
    block             go to state 103


State 142

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA • functionValueParameter
   16 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA •

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 16 (opt_functionValueParameter)

    functionValueParameter  go to state 206
    parameter               go to state 67
    simpleIdentifier        go to state 69


State 143

   13 parameter: simpleIdentifier COLON type •

    $default  reduce using rule 13 (parameter)


State 144

   66 opt_comma: COMMA •
  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA • typeProjection

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    MULT         shift, and go to state 70
    IDENTIFIER   shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    type                       go to state 71
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    typeProjection             go to state 207


State 145

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma • RANGLE

    RANGLE  shift, and go to state 208


State 146

   97 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  113 parenthesizedDirectlyAssignableExpression: LPAREN • assignableExpression RPAREN
  150 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 209
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    simpleIdentifier                   go to state 120
    assignableExpression               go to state 210
    multi_unaryPrefix                  go to state 156
    $@5                                go to state 157
    prefixUnaryExpression              go to state 158
    parenthesizedAssignableExpression  go to state 159
    postfixUnaryExpression             go to state 121
    parenthesizedExpression            go to state 122
    ifExpression                       go to state 123
    functionCall                       go to state 124
    dotExpression                      go to state 125
    jumpExpression                     go to state 126
    whenExpression                     go to state 127
    expression                         go to state 171
    disjunction                        go to state 129
    conjunction                        go to state 130
    equality                           go to state 131
    comparison                         go to state 132
    genericCallLikeComparison          go to state 133
    elvisExpression                    go to state 134
    rangeExpression                    go to state 135
    additiveExpression                 go to state 136
    multiplicativeExpression           go to state 137
    primaryExpression                  go to state 138
    collectionLiteral                  go to state 139


State 147

  166 loopStatement: FOR • LPAREN variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN  shift, and go to state 211


State 148

  167 loopStatement: DO • controlStructureBody WHILE LPAREN expression RPAREN

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 214
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 149

  165 loopStatement: WHILE • LPAREN expression RPAREN control_structure_body_or_comma

    LPAREN  shift, and go to state 215


State 150

   30 statements: optional_statement_sequence •

    $default  reduce using rule 30 (statements)


State 151

   23 block: LCURL statements • RCURL

    RCURL  shift, and go to state 216


State 152

   28 optional_statement_sequence: statement • semis_statement

    $default  reduce using rule 27 (semis_statement)

    semis_statement  go to state 217


State 153

   31 statement: declaration • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 219


State 154

  111 directlyAssignableExpression: simpleIdentifier •
  217 primaryExpression: simpleIdentifier •

    ASSIGNMENT  reduce using rule 111 (directlyAssignableExpression)
    $default    reduce using rule 217 (primaryExpression)


State 155

  100 directly_assign: assignableExpression • assignmentAndOperator

    ADD_ASSIGNMENT   shift, and go to state 220
    SUB_ASSIGNMENT   shift, and go to state 221
    MULT_ASSIGNMENT  shift, and go to state 222
    DIV_ASSIGNMENT   shift, and go to state 223
    MOD_ASSIGNMENT   shift, and go to state 224

    assignmentAndOperator  go to state 225


State 156

   88 multi_unaryPrefix: multi_unaryPrefix • prefixUnaryOperator
   96 prefixUnaryExpression: multi_unaryPrefix • postfixUnaryExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    INCR               shift, and go to state 226
    DECR               shift, and go to state 227
    EXCL_NO_WS         shift, and go to state 228
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    ADD                shift, and go to state 229
    SUB                shift, and go to state 230
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier         go to state 120
    prefixUnaryOperator      go to state 231
    postfixUnaryExpression   go to state 232
    parenthesizedExpression  go to state 122
    ifExpression             go to state 123
    functionCall             go to state 124
    dotExpression            go to state 125
    jumpExpression           go to state 126
    whenExpression           go to state 127
    primaryExpression        go to state 138
    collectionLiteral        go to state 139


State 157

   90 multi_unaryPrefix: $@5 •

    $default  reduce using rule 90 (multi_unaryPrefix)


State 158

   86 assignableExpression: prefixUnaryExpression •

    $default  reduce using rule 86 (assignableExpression)


State 159

   87 assignableExpression: parenthesizedAssignableExpression •

    $default  reduce using rule 87 (assignableExpression)


State 160

   32 statement: assignment • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 233


State 161

   98 assignment: directly_assign • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 234
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 162

   99 directly_assign: directlyAssignableExpression • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 235


State 163

  112 directlyAssignableExpression: parenthesizedDirectlyAssignableExpression •

    $default  reduce using rule 112 (directlyAssignableExpression)


State 164

  110 directlyAssignableExpression: postfixUnaryExpression • assignableSuffix
  212 multiplicativeExpression: postfixUnaryExpression •

    LSQUARE  shift, and go to state 236
    LANGLE   shift, and go to state 49

    LSQUARE   [reduce using rule 212 (multiplicativeExpression)]
    LANGLE    [reduce using rule 212 (multiplicativeExpression)]
    $default  reduce using rule 212 (multiplicativeExpression)

    assignableSuffix  go to state 237
    typeArguments     go to state 238
    indexingSuffix    go to state 239


State 165

   34 statement: loopStatement • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 240


State 166

   33 statement: expression • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 241


State 167

   22 functionBody: ASSIGNMENT expression • SEMICOLON

    SEMICOLON  shift, and go to state 242


State 168

   66 opt_comma: COMMA •
   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA • variableDeclaration

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    $default  reduce using rule 66 (opt_comma)

    type                       go to state 54
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    variableDeclaration        go to state 243


State 169

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma • RPAREN

    RPAREN  shift, and go to state 244


State 170

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp • SEMICOLON

    SEMICOLON  shift, and go to state 245


State 171

  150 parenthesizedExpression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 246


State 172

  228 collectionLiteral: LSQUARE RSQUARE •

    $default  reduce using rule 228 (collectionLiteral)


State 173

  229 collectionLiteral: LSQUARE expression • COMMA RSQUARE
  230                  | LSQUARE expression • RSQUARE
  231                  | LSQUARE expression • multi_comma_expression RSQUARE
  232                  | LSQUARE expression • multi_comma_expression COMMA RSQUARE

    COMMA    shift, and go to state 247
    RSQUARE  shift, and go to state 248

    COMMA    [reduce using rule 132 ($@8)]
    RSQUARE  [reduce using rule 132 ($@8)]

    multi_comma_expression  go to state 249
    $@8                     go to state 250


State 174

  151 ifExpression: IF LPAREN • expression RPAREN controls

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 251
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 175

  178 whenSubject: LPAREN • expression RPAREN
  179            | LPAREN • VAL variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    VAL                shift, and go to state 252
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 253
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 176

  177 whenExpression: WHEN LCURL • multi_whenEntry RCURL

    $default  reduce using rule 175 (multi_whenEntry)

    multi_whenEntry  go to state 254


State 177

  176 whenExpression: WHEN whenSubject • LCURL multi_whenEntry RCURL

    LCURL  shift, and go to state 255


State 178

  170 jumpExpression: RETURN expression •

    $default  reduce using rule 170 (jumpExpression)


State 179

  156 dotExpression: IDENTIFIER DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 256


State 180

  154 functionCall: IDENTIFIER LPAREN • functionArguments RPAREN semis

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    $default  reduce using rule 160 (functionArguments)

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    functionArguments          go to state 257
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 258
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 181

  157 dotExpression: dotExpression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 259


State 182

  155 functionCall: dotExpression LPAREN • functionArguments RPAREN semis

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    $default  reduce using rule 160 (functionArguments)

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    functionArguments          go to state 260
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 258
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 183

  196 disjunction: disjunction DISJ • conjunction

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    conjunction                go to state 261
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 184

  198 conjunction: conjunction CONJ • equality

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    equality                   go to state 262
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 185

  239 equality_operator: EXCL_EQ •

    $default  reduce using rule 239 (equality_operator)


State 186

  240 equality_operator: EXCL_EQEQ •

    $default  reduce using rule 240 (equality_operator)


State 187

  237 equality_operator: EQEQ •

    $default  reduce using rule 237 (equality_operator)


State 188

  238 equality_operator: EQEQEQ •

    $default  reduce using rule 238 (equality_operator)


State 189

  200 equality: equality equality_operator • comparison

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    comparison                 go to state 263
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 190

  233 comparison_operator: LANGLE •

    $default  reduce using rule 233 (comparison_operator)


State 191

  234 comparison_operator: RANGLE •

    $default  reduce using rule 234 (comparison_operator)


State 192

  235 comparison_operator: LE •

    $default  reduce using rule 235 (comparison_operator)


State 193

  236 comparison_operator: GE •

    $default  reduce using rule 236 (comparison_operator)


State 194

  202 comparison: comparison comparison_operator • genericCallLikeComparison

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    genericCallLikeComparison  go to state 264
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 195

  206 elvisExpression: elvisExpression QUEST_COLON • rangeExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier          go to state 120
    postfixUnaryExpression    go to state 121
    parenthesizedExpression   go to state 122
    ifExpression              go to state 123
    functionCall              go to state 124
    dotExpression             go to state 125
    jumpExpression            go to state 126
    whenExpression            go to state 127
    rangeExpression           go to state 265
    additiveExpression        go to state 136
    multiplicativeExpression  go to state 137
    primaryExpression         go to state 138
    collectionLiteral         go to state 139


State 196

  204 genericCallLikeComparison: elvisExpression IN • elvisExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier          go to state 120
    postfixUnaryExpression    go to state 121
    parenthesizedExpression   go to state 122
    ifExpression              go to state 123
    functionCall              go to state 124
    dotExpression             go to state 125
    jumpExpression            go to state 126
    whenExpression            go to state 127
    elvisExpression           go to state 266
    rangeExpression           go to state 135
    additiveExpression        go to state 136
    multiplicativeExpression  go to state 137
    primaryExpression         go to state 138
    collectionLiteral         go to state 139


State 197

  208 rangeExpression: rangeExpression RANGE • additiveExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier          go to state 120
    postfixUnaryExpression    go to state 121
    parenthesizedExpression   go to state 122
    ifExpression              go to state 123
    functionCall              go to state 124
    dotExpression             go to state 125
    jumpExpression            go to state 126
    whenExpression            go to state 127
    additiveExpression        go to state 267
    multiplicativeExpression  go to state 137
    primaryExpression         go to state 138
    collectionLiteral         go to state 139


State 198

  210 additiveExpression: additiveExpression ADD • multiplicativeExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier          go to state 120
    postfixUnaryExpression    go to state 121
    parenthesizedExpression   go to state 122
    ifExpression              go to state 123
    functionCall              go to state 124
    dotExpression             go to state 125
    jumpExpression            go to state 126
    whenExpression            go to state 127
    multiplicativeExpression  go to state 268
    primaryExpression         go to state 138
    collectionLiteral         go to state 139


State 199

  211 additiveExpression: additiveExpression SUB • multiplicativeExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier          go to state 120
    postfixUnaryExpression    go to state 121
    parenthesizedExpression   go to state 122
    ifExpression              go to state 123
    functionCall              go to state 124
    dotExpression             go to state 125
    jumpExpression            go to state 126
    whenExpression            go to state 127
    multiplicativeExpression  go to state 269
    primaryExpression         go to state 138
    collectionLiteral         go to state 139


State 200

  213 multiplicativeExpression: multiplicativeExpression MULT • postfixUnaryExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier         go to state 120
    postfixUnaryExpression   go to state 270
    parenthesizedExpression  go to state 122
    ifExpression             go to state 123
    functionCall             go to state 124
    dotExpression            go to state 125
    jumpExpression           go to state 126
    whenExpression           go to state 127
    primaryExpression        go to state 138
    collectionLiteral        go to state 139


State 201

  215 multiplicativeExpression: multiplicativeExpression MOD • postfixUnaryExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier         go to state 120
    postfixUnaryExpression   go to state 271
    parenthesizedExpression  go to state 122
    ifExpression             go to state 123
    functionCall             go to state 124
    dotExpression            go to state 125
    jumpExpression           go to state 126
    whenExpression           go to state 127
    primaryExpression        go to state 138
    collectionLiteral        go to state 139


State 202

  214 multiplicativeExpression: multiplicativeExpression DIV • postfixUnaryExpression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier         go to state 120
    postfixUnaryExpression   go to state 272
    parenthesizedExpression  go to state 122
    ifExpression             go to state 123
    functionCall             go to state 124
    dotExpression            go to state 125
    jumpExpression           go to state 126
    whenExpression           go to state 127
    primaryExpression        go to state 138
    collectionLiteral        go to state 139


State 203

  114 multi_postfixUnarySuffix: multi_postfixUnarySuffix • postfixUnarySuffix
  117 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix •

    DOT          shift, and go to state 273
    LPAREN       shift, and go to state 274
    LSQUARE      shift, and go to state 236
    INCR         shift, and go to state 275
    DECR         shift, and go to state 276
    EXCL_NO_WS   shift, and go to state 277
    QUEST_NO_WS  shift, and go to state 278

    DOT          [reduce using rule 117 (postfixUnaryExpression)]
    LPAREN       [reduce using rule 117 (postfixUnaryExpression)]
    LSQUARE      [reduce using rule 117 (postfixUnaryExpression)]
    INCR         [reduce using rule 117 (postfixUnaryExpression)]
    DECR         [reduce using rule 117 (postfixUnaryExpression)]
    EXCL_NO_WS   [reduce using rule 117 (postfixUnaryExpression)]
    QUEST_NO_WS  [reduce using rule 117 (postfixUnaryExpression)]
    $default     reduce using rule 117 (postfixUnaryExpression)

    postfixUnarySuffix    go to state 279
    navigationSuffix      go to state 280
    memberAccessOperator  go to state 281
    postfixUnaryOperator  go to state 282
    indexingSuffix        go to state 283
    callSuffix            go to state 284
    valueArguments        go to state 285


State 204

  116 multi_postfixUnarySuffix: $@7 •

    $default  reduce using rule 116 (multi_postfixUnarySuffix)


State 205

    9 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 9 (functionDeclaration)


State 206

   14 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter •

    $default  reduce using rule 14 (multi_comma_functionParameter)


State 207

  104 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection •

    $default  reduce using rule 104 (multi_comma_typeProjection)


State 208

  103 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE •

    $default  reduce using rule 103 (typeArguments)


State 209

   97 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  150 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN             shift, and go to state 209
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    simpleIdentifier                   go to state 120
    assignableExpression               go to state 286
    multi_unaryPrefix                  go to state 156
    $@5                                go to state 157
    prefixUnaryExpression              go to state 158
    parenthesizedAssignableExpression  go to state 159
    postfixUnaryExpression             go to state 121
    parenthesizedExpression            go to state 122
    ifExpression                       go to state 123
    functionCall                       go to state 124
    dotExpression                      go to state 125
    jumpExpression                     go to state 126
    whenExpression                     go to state 127
    expression                         go to state 171
    disjunction                        go to state 129
    conjunction                        go to state 130
    equality                           go to state 131
    comparison                         go to state 132
    genericCallLikeComparison          go to state 133
    elvisExpression                    go to state 134
    rangeExpression                    go to state 135
    additiveExpression                 go to state 136
    multiplicativeExpression           go to state 137
    primaryExpression                  go to state 138
    collectionLiteral                  go to state 139


State 210

   97 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN
  113 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 287


State 211

  166 loopStatement: FOR LPAREN • variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN       shift, and go to state 53
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 54
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    variableDeclaration        go to state 288
    multiVariableDeclaration   go to state 289
    variable_multivariable     go to state 290


State 212

  168 controlStructureBody: block •

    $default  reduce using rule 168 (controlStructureBody)


State 213

  169 controlStructureBody: statement •

    $default  reduce using rule 169 (controlStructureBody)


State 214

  167 loopStatement: DO controlStructureBody • WHILE LPAREN expression RPAREN

    WHILE  shift, and go to state 291


State 215

  165 loopStatement: WHILE LPAREN • expression RPAREN control_structure_body_or_comma

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 292
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 216

   23 block: LCURL statements RCURL •

    $default  reduce using rule 23 (block)


State 217

   26 semis_statement: semis_statement • semis statement
   28 optional_statement_sequence: statement semis_statement •

    SEMICOLON  shift, and go to state 218

    RCURL     reduce using rule 28 (optional_statement_sequence)
    $default  reduce using rule 25 (semis)

    semis  go to state 293


State 218

   24 semis: SEMICOLON •

    $default  reduce using rule 24 (semis)


State 219

   31 statement: declaration semis •

    $default  reduce using rule 31 (statement)


State 220

   81 assignmentAndOperator: ADD_ASSIGNMENT •

    $default  reduce using rule 81 (assignmentAndOperator)


State 221

   82 assignmentAndOperator: SUB_ASSIGNMENT •

    $default  reduce using rule 82 (assignmentAndOperator)


State 222

   83 assignmentAndOperator: MULT_ASSIGNMENT •

    $default  reduce using rule 83 (assignmentAndOperator)


State 223

   84 assignmentAndOperator: DIV_ASSIGNMENT •

    $default  reduce using rule 84 (assignmentAndOperator)


State 224

   85 assignmentAndOperator: MOD_ASSIGNMENT •

    $default  reduce using rule 85 (assignmentAndOperator)


State 225

  100 directly_assign: assignableExpression assignmentAndOperator •

    $default  reduce using rule 100 (directly_assign)


State 226

   93 prefixUnaryOperator: INCR •

    $default  reduce using rule 93 (prefixUnaryOperator)


State 227

   94 prefixUnaryOperator: DECR •

    $default  reduce using rule 94 (prefixUnaryOperator)


State 228

   95 prefixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 294


State 229

   91 prefixUnaryOperator: ADD •

    $default  reduce using rule 91 (prefixUnaryOperator)


State 230

   92 prefixUnaryOperator: SUB •

    $default  reduce using rule 92 (prefixUnaryOperator)


State 231

   88 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator •

    $default  reduce using rule 88 (multi_unaryPrefix)


State 232

   96 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression •

    $default  reduce using rule 96 (prefixUnaryExpression)


State 233

   32 statement: assignment semis •

    $default  reduce using rule 32 (statement)


State 234

   98 assignment: directly_assign expression •

    $default  reduce using rule 98 (assignment)


State 235

   99 directly_assign: directlyAssignableExpression ASSIGNMENT •

    $default  reduce using rule 99 (directly_assign)


State 236

  134 indexingSuffix: LSQUARE • expression multi_comma_expression opt_comma RSQUARE

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 295
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 237

  110 directlyAssignableExpression: postfixUnaryExpression assignableSuffix •

    $default  reduce using rule 110 (directlyAssignableExpression)


State 238

  102 assignableSuffix: typeArguments •

    $default  reduce using rule 102 (assignableSuffix)


State 239

  101 assignableSuffix: indexingSuffix •

    $default  reduce using rule 101 (assignableSuffix)


State 240

   34 statement: loopStatement semis •

    $default  reduce using rule 34 (statement)


State 241

   33 statement: expression semis •

    $default  reduce using rule 33 (statement)


State 242

   22 functionBody: ASSIGNMENT expression SEMICOLON •

    $default  reduce using rule 22 (functionBody)


State 243

   78 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration •

    $default  reduce using rule 78 (multi_comma_variableDeclaration)


State 244

   77 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN •

    $default  reduce using rule 77 (multiVariableDeclaration)


State 245

   61 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 61 (propertyDeclaration)


State 246

  150 parenthesizedExpression: LPAREN expression RPAREN •

    $default  reduce using rule 150 (parenthesizedExpression)


State 247

  229 collectionLiteral: LSQUARE expression COMMA • RSQUARE

    RSQUARE  shift, and go to state 296


State 248

  230 collectionLiteral: LSQUARE expression RSQUARE •

    $default  reduce using rule 230 (collectionLiteral)


State 249

  131 multi_comma_expression: multi_comma_expression • COMMA expression
  231 collectionLiteral: LSQUARE expression multi_comma_expression • RSQUARE
  232                  | LSQUARE expression multi_comma_expression • COMMA RSQUARE

    COMMA    shift, and go to state 297
    RSQUARE  shift, and go to state 298


State 250

  133 multi_comma_expression: $@8 •

    $default  reduce using rule 133 (multi_comma_expression)


State 251

  151 ifExpression: IF LPAREN expression • RPAREN controls

    RPAREN  shift, and go to state 299


State 252

  179 whenSubject: LPAREN VAL • variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN       shift, and go to state 27
    TYPELITERAL  shift, and go to state 39
    IDENTIFIER   shift, and go to state 13

    type                       go to state 54
    parenthesizedType          go to state 28
    userType                   go to state 29
    simpleUserType             go to state 30
    nullableType               go to state 41
    typeRef_parenthesizedType  go to state 32
    simpleIdentifier           go to state 42
    variableDeclaration        go to state 300


State 253

  178 whenSubject: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 301


State 254

  174 multi_whenEntry: multi_whenEntry • whenEntry
  177 whenExpression: WHEN LCURL multi_whenEntry • RCURL

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    RCURL              shift, and go to state 302
    IF                 shift, and go to state 109
    ELSE               shift, and go to state 303
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    IN                 shift, and go to state 304
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    whenEntry                  go to state 305
    whenCondition              go to state 306
    rangeTest                  go to state 307
    expression                 go to state 308
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 255

  176 whenExpression: WHEN whenSubject LCURL • multi_whenEntry RCURL

    $default  reduce using rule 175 (multi_whenEntry)

    multi_whenEntry  go to state 309


State 256

  156 dotExpression: IDENTIFIER DOT IDENTIFIER •

    $default  reduce using rule 156 (dotExpression)


State 257

  154 functionCall: IDENTIFIER LPAREN functionArguments • RPAREN semis
  159 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 310
    RPAREN  shift, and go to state 311


State 258

  158 functionArguments: expression •

    $default  reduce using rule 158 (functionArguments)


State 259

  157 dotExpression: dotExpression DOT IDENTIFIER •

    $default  reduce using rule 157 (dotExpression)


State 260

  155 functionCall: dotExpression LPAREN functionArguments • RPAREN semis
  159 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 310
    RPAREN  shift, and go to state 312


State 261

  196 disjunction: disjunction DISJ conjunction •
  198 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 184

    CONJ      [reduce using rule 196 (disjunction)]
    $default  reduce using rule 196 (disjunction)


State 262

  198 conjunction: conjunction CONJ equality •
  200 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 185
    EXCL_EQEQ  shift, and go to state 186
    EQEQ       shift, and go to state 187
    EQEQEQ     shift, and go to state 188

    EXCL_EQ    [reduce using rule 198 (conjunction)]
    EXCL_EQEQ  [reduce using rule 198 (conjunction)]
    EQEQ       [reduce using rule 198 (conjunction)]
    EQEQEQ     [reduce using rule 198 (conjunction)]
    $default   reduce using rule 198 (conjunction)

    equality_operator  go to state 189


State 263

  200 equality: equality equality_operator comparison •
  202 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 190
    RANGLE  shift, and go to state 191
    LE      shift, and go to state 192
    GE      shift, and go to state 193

    LANGLE    [reduce using rule 200 (equality)]
    RANGLE    [reduce using rule 200 (equality)]
    LE        [reduce using rule 200 (equality)]
    GE        [reduce using rule 200 (equality)]
    $default  reduce using rule 200 (equality)

    comparison_operator  go to state 194


State 264

  202 comparison: comparison comparison_operator genericCallLikeComparison •

    $default  reduce using rule 202 (comparison)


State 265

  206 elvisExpression: elvisExpression QUEST_COLON rangeExpression •
  208 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 197

    RANGE     [reduce using rule 206 (elvisExpression)]
    $default  reduce using rule 206 (elvisExpression)


State 266

  204 genericCallLikeComparison: elvisExpression IN elvisExpression •
  206 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 195

    QUEST_COLON  [reduce using rule 204 (genericCallLikeComparison)]
    $default     reduce using rule 204 (genericCallLikeComparison)


State 267

  208 rangeExpression: rangeExpression RANGE additiveExpression •
  210 additiveExpression: additiveExpression • ADD multiplicativeExpression
  211                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 198
    SUB  shift, and go to state 199

    ADD       [reduce using rule 208 (rangeExpression)]
    SUB       [reduce using rule 208 (rangeExpression)]
    $default  reduce using rule 208 (rangeExpression)


State 268

  210 additiveExpression: additiveExpression ADD multiplicativeExpression •
  213 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  214                         | multiplicativeExpression • DIV postfixUnaryExpression
  215                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 200
    MOD   shift, and go to state 201
    DIV   shift, and go to state 202

    $default  reduce using rule 210 (additiveExpression)


State 269

  211 additiveExpression: additiveExpression SUB multiplicativeExpression •
  213 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  214                         | multiplicativeExpression • DIV postfixUnaryExpression
  215                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 200
    MOD   shift, and go to state 201
    DIV   shift, and go to state 202

    $default  reduce using rule 211 (additiveExpression)


State 270

  213 multiplicativeExpression: multiplicativeExpression MULT postfixUnaryExpression •

    $default  reduce using rule 213 (multiplicativeExpression)


State 271

  215 multiplicativeExpression: multiplicativeExpression MOD postfixUnaryExpression •

    $default  reduce using rule 215 (multiplicativeExpression)


State 272

  214 multiplicativeExpression: multiplicativeExpression DIV postfixUnaryExpression •

    $default  reduce using rule 214 (multiplicativeExpression)


State 273

  126 memberAccessOperator: DOT •

    $default  reduce using rule 126 (memberAccessOperator)


State 274

  142 valueArguments: LPAREN • opt_valueArgument RPAREN

    IDENTIFIER  shift, and go to state 13

    RPAREN      reduce using rule 140 ($@10)
    IDENTIFIER  [reduce using rule 144 ($@11)]
    $default    reduce using rule 144 ($@11)

    simpleIdentifier         go to state 313
    opt_valueArgument        go to state 314
    $@10                     go to state 315
    opt_simpleIdentifier_EQ  go to state 316
    $@11                     go to state 317
    valueArgument            go to state 318


State 275

  128 postfixUnaryOperator: INCR •

    $default  reduce using rule 128 (postfixUnaryOperator)


State 276

  129 postfixUnaryOperator: DECR •

    $default  reduce using rule 129 (postfixUnaryOperator)


State 277

  130 postfixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 319


State 278

  127 memberAccessOperator: QUEST_NO_WS • DOT

    DOT  shift, and go to state 320


State 279

  114 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix •

    $default  reduce using rule 114 (multi_postfixUnarySuffix)


State 280

  121 postfixUnarySuffix: navigationSuffix •

    $default  reduce using rule 121 (postfixUnarySuffix)


State 281

  125 navigationSuffix: memberAccessOperator • identifier_expression_class

    LPAREN      shift, and go to state 107
    CLASS       shift, and go to state 321
    IDENTIFIER  shift, and go to state 13

    simpleIdentifier             go to state 322
    identifier_expression_class  go to state 323
    parenthesizedExpression      go to state 324


State 282

  118 postfixUnarySuffix: postfixUnaryOperator •

    $default  reduce using rule 118 (postfixUnarySuffix)


State 283

  119 postfixUnarySuffix: indexingSuffix •

    $default  reduce using rule 119 (postfixUnarySuffix)


State 284

  120 postfixUnarySuffix: callSuffix •

    $default  reduce using rule 120 (postfixUnarySuffix)


State 285

  135 callSuffix: valueArguments •

    $default  reduce using rule 135 (callSuffix)


State 286

   97 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 325


State 287

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •
  113 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN •

    ASSIGNMENT  reduce using rule 113 (parenthesizedDirectlyAssignableExpression)
    $default    reduce using rule 97 (parenthesizedAssignableExpression)


State 288

  161 variable_multivariable: variableDeclaration •

    $default  reduce using rule 161 (variable_multivariable)


State 289

  162 variable_multivariable: multiVariableDeclaration •

    $default  reduce using rule 162 (variable_multivariable)


State 290

  166 loopStatement: FOR LPAREN variable_multivariable • IN expression RPAREN controlStructureBody

    IN  shift, and go to state 326


State 291

  167 loopStatement: DO controlStructureBody WHILE • LPAREN expression RPAREN

    LPAREN  shift, and go to state 327


State 292

  165 loopStatement: WHILE LPAREN expression • RPAREN control_structure_body_or_comma

    RPAREN  shift, and go to state 328


State 293

   26 semis_statement: semis_statement semis • statement

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    statement                                  go to state 329
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 294

   95 prefixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 95 (prefixUnaryOperator)


State 295

  134 indexingSuffix: LSQUARE expression • multi_comma_expression opt_comma RSQUARE

    $default  reduce using rule 132 ($@8)

    multi_comma_expression  go to state 330
    $@8                     go to state 250


State 296

  229 collectionLiteral: LSQUARE expression COMMA RSQUARE •

    $default  reduce using rule 229 (collectionLiteral)


State 297

  131 multi_comma_expression: multi_comma_expression COMMA • expression
  232 collectionLiteral: LSQUARE expression multi_comma_expression COMMA • RSQUARE

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    RSQUARE            shift, and go to state 331
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 332
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 298

  231 collectionLiteral: LSQUARE expression multi_comma_expression RSQUARE •

    $default  reduce using rule 231 (collectionLiteral)


State 299

  151 ifExpression: IF LPAREN expression RPAREN • controls

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    controls                                   go to state 333
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 334
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 300

  179 whenSubject: LPAREN VAL variableDeclaration • ASSIGNMENT expression RPAREN

    ASSIGNMENT  shift, and go to state 335


State 301

  178 whenSubject: LPAREN expression RPAREN •

    $default  reduce using rule 178 (whenSubject)


State 302

  177 whenExpression: WHEN LCURL multi_whenEntry RCURL •

    $default  reduce using rule 177 (whenExpression)


State 303

  185 whenEntry: ELSE • ARROW controlStructureBody SEMICOLON
  186          | ELSE • ARROW controlStructureBody

    ARROW  shift, and go to state 336


State 304

  189 rangeTest: IN • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 337
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 305

  174 multi_whenEntry: multi_whenEntry whenEntry •

    $default  reduce using rule 174 (multi_whenEntry)


State 306

  183 whenEntry: whenCondition • multi_comma_whenCondition ARROW controlStructureBody
  184          | whenCondition • multi_comma_whenCondition COMMA ARROW controlStructureBody

    $default  reduce using rule 181 ($@13)

    multi_comma_whenCondition  go to state 338
    $@13                       go to state 339


State 307

  188 whenCondition: rangeTest •

    $default  reduce using rule 188 (whenCondition)


State 308

  187 whenCondition: expression •

    $default  reduce using rule 187 (whenCondition)


State 309

  174 multi_whenEntry: multi_whenEntry • whenEntry
  176 whenExpression: WHEN whenSubject LCURL multi_whenEntry • RCURL

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    RCURL              shift, and go to state 340
    IF                 shift, and go to state 109
    ELSE               shift, and go to state 303
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    IN                 shift, and go to state 304
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    whenEntry                  go to state 305
    whenCondition              go to state 306
    rangeTest                  go to state 307
    expression                 go to state 308
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 310

  159 functionArguments: functionArguments COMMA • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 341
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 311

  154 functionCall: IDENTIFIER LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 342


State 312

  155 functionCall: dotExpression LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 218

    SEMICOLON  [reduce using rule 25 (semis)]
    $default   reduce using rule 25 (semis)

    semis  go to state 343


State 313

  143 opt_simpleIdentifier_EQ: simpleIdentifier • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 344


State 314

  142 valueArguments: LPAREN opt_valueArgument • RPAREN

    RPAREN  shift, and go to state 345


State 315

  141 opt_valueArgument: $@10 •

    $default  reduce using rule 141 (opt_valueArgument)


State 316

  149 valueArgument: opt_simpleIdentifier_EQ • opt_Multi expression

    MULT  shift, and go to state 346

    $default  reduce using rule 147 ($@12)

    opt_Multi  go to state 347
    $@12       go to state 348


State 317

  145 opt_simpleIdentifier_EQ: $@11 •

    $default  reduce using rule 145 (opt_simpleIdentifier_EQ)


State 318

  139 opt_valueArgument: valueArgument • multi_comma_valueArgument opt_comma

    $default  reduce using rule 137 ($@9)

    multi_comma_valueArgument  go to state 349
    $@9                        go to state 350


State 319

  130 postfixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 130 (postfixUnaryOperator)


State 320

  127 memberAccessOperator: QUEST_NO_WS DOT •

    $default  reduce using rule 127 (memberAccessOperator)


State 321

  124 identifier_expression_class: CLASS •

    $default  reduce using rule 124 (identifier_expression_class)


State 322

  122 identifier_expression_class: simpleIdentifier •

    $default  reduce using rule 122 (identifier_expression_class)


State 323

  125 navigationSuffix: memberAccessOperator identifier_expression_class •

    $default  reduce using rule 125 (navigationSuffix)


State 324

  123 identifier_expression_class: parenthesizedExpression •

    $default  reduce using rule 123 (identifier_expression_class)


State 325

   97 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •

    $default  reduce using rule 97 (parenthesizedAssignableExpression)


State 326

  166 loopStatement: FOR LPAREN variable_multivariable IN • expression RPAREN controlStructureBody

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 351
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 327

  167 loopStatement: DO controlStructureBody WHILE LPAREN • expression RPAREN

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 352
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 328

  165 loopStatement: WHILE LPAREN expression RPAREN • control_structure_body_or_comma

    COMMA              shift, and go to state 353
    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    control_structure_body_or_comma            go to state 354
    loopStatement                              go to state 165
    controlStructureBody                       go to state 355
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 329

   26 semis_statement: semis_statement semis statement •

    $default  reduce using rule 26 (semis_statement)


State 330

  131 multi_comma_expression: multi_comma_expression • COMMA expression
  134 indexingSuffix: LSQUARE expression multi_comma_expression • opt_comma RSQUARE

    COMMA  shift, and go to state 356

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 357


State 331

  232 collectionLiteral: LSQUARE expression multi_comma_expression COMMA RSQUARE •

    $default  reduce using rule 232 (collectionLiteral)


State 332

  131 multi_comma_expression: multi_comma_expression COMMA expression •

    $default  reduce using rule 131 (multi_comma_expression)


State 333

  151 ifExpression: IF LPAREN expression RPAREN controls •

    $default  reduce using rule 151 (ifExpression)


State 334

  152 controls: controlStructureBody • ELSE controlStructureBody
  153         | controlStructureBody •

    ELSE  shift, and go to state 358

    ELSE      [reduce using rule 153 (controls)]
    $default  reduce using rule 153 (controls)


State 335

  179 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT • expression RPAREN

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 359
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 336

  185 whenEntry: ELSE ARROW • controlStructureBody SEMICOLON
  186          | ELSE ARROW • controlStructureBody

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 360
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 337

  189 rangeTest: IN expression •

    $default  reduce using rule 189 (rangeTest)


State 338

  180 multi_comma_whenCondition: multi_comma_whenCondition • COMMA whenCondition
  183 whenEntry: whenCondition multi_comma_whenCondition • ARROW controlStructureBody
  184          | whenCondition multi_comma_whenCondition • COMMA ARROW controlStructureBody

    COMMA  shift, and go to state 361
    ARROW  shift, and go to state 362


State 339

  182 multi_comma_whenCondition: $@13 •

    $default  reduce using rule 182 (multi_comma_whenCondition)


State 340

  176 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL •

    $default  reduce using rule 176 (whenExpression)


State 341

  159 functionArguments: functionArguments COMMA expression •

    $default  reduce using rule 159 (functionArguments)


State 342

  154 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 154 (functionCall)


State 343

  155 functionCall: dotExpression LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 155 (functionCall)


State 344

  143 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT •

    $default  reduce using rule 143 (opt_simpleIdentifier_EQ)


State 345

  142 valueArguments: LPAREN opt_valueArgument RPAREN •

    $default  reduce using rule 142 (valueArguments)


State 346

  146 opt_Multi: MULT •

    $default  reduce using rule 146 (opt_Multi)


State 347

  149 valueArgument: opt_simpleIdentifier_EQ opt_Multi • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 363
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 348

  148 opt_Multi: $@12 •

    $default  reduce using rule 148 (opt_Multi)


State 349

  136 multi_comma_valueArgument: multi_comma_valueArgument • COMMA valueArgument
  139 opt_valueArgument: valueArgument multi_comma_valueArgument • opt_comma

    COMMA  shift, and go to state 364

    $default  reduce using rule 67 (opt_comma)

    opt_comma  go to state 365


State 350

  138 multi_comma_valueArgument: $@9 •

    $default  reduce using rule 138 (multi_comma_valueArgument)


State 351

  166 loopStatement: FOR LPAREN variable_multivariable IN expression • RPAREN controlStructureBody

    RPAREN  shift, and go to state 366


State 352

  167 loopStatement: DO controlStructureBody WHILE LPAREN expression • RPAREN

    RPAREN  shift, and go to state 367


State 353

  164 control_structure_body_or_comma: COMMA •

    $default  reduce using rule 164 (control_structure_body_or_comma)


State 354

  165 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma •

    $default  reduce using rule 165 (loopStatement)


State 355

  163 control_structure_body_or_comma: controlStructureBody •

    $default  reduce using rule 163 (control_structure_body_or_comma)


State 356

   66 opt_comma: COMMA •
  131 multi_comma_expression: multi_comma_expression COMMA • expression

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    $default  reduce using rule 66 (opt_comma)

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    expression                 go to state 332
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 357

  134 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma • RSQUARE

    RSQUARE  shift, and go to state 368


State 358

  152 controls: controlStructureBody ELSE • controlStructureBody

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 369
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 359

  179 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression • RPAREN

    RPAREN  shift, and go to state 370


State 360

  185 whenEntry: ELSE ARROW controlStructureBody • SEMICOLON
  186          | ELSE ARROW controlStructureBody •

    SEMICOLON  shift, and go to state 371

    $default  reduce using rule 186 (whenEntry)


State 361

  180 multi_comma_whenCondition: multi_comma_whenCondition COMMA • whenCondition
  184 whenEntry: whenCondition multi_comma_whenCondition COMMA • ARROW controlStructureBody

    LPAREN             shift, and go to state 107
    LSQUARE            shift, and go to state 108
    ARROW              shift, and go to state 372
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    IN                 shift, and go to state 304
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    simpleIdentifier           go to state 120
    postfixUnaryExpression     go to state 121
    parenthesizedExpression    go to state 122
    ifExpression               go to state 123
    functionCall               go to state 124
    dotExpression              go to state 125
    jumpExpression             go to state 126
    whenExpression             go to state 127
    whenCondition              go to state 373
    rangeTest                  go to state 307
    expression                 go to state 308
    disjunction                go to state 129
    conjunction                go to state 130
    equality                   go to state 131
    comparison                 go to state 132
    genericCallLikeComparison  go to state 133
    elvisExpression            go to state 134
    rangeExpression            go to state 135
    additiveExpression         go to state 136
    multiplicativeExpression   go to state 137
    primaryExpression          go to state 138
    collectionLiteral          go to state 139


State 362

  183 whenEntry: whenCondition multi_comma_whenCondition ARROW • controlStructureBody

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 374
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 363

  149 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression •

    $default  reduce using rule 149 (valueArgument)


State 364

   66 opt_comma: COMMA •
  136 multi_comma_valueArgument: multi_comma_valueArgument COMMA • valueArgument

    IDENTIFIER  shift, and go to state 13

    RPAREN      reduce using rule 66 (opt_comma)
    IDENTIFIER  [reduce using rule 144 ($@11)]
    $default    reduce using rule 144 ($@11)

    simpleIdentifier         go to state 313
    opt_simpleIdentifier_EQ  go to state 316
    $@11                     go to state 317
    valueArgument            go to state 375


State 365

  139 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma •

    $default  reduce using rule 139 (opt_valueArgument)


State 366

  166 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN • controlStructureBody

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 376
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 367

  167 loopStatement: DO controlStructureBody WHILE LPAREN expression RPAREN •

    $default  reduce using rule 167 (loopStatement)


State 368

  134 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE •

    $default  reduce using rule 134 (indexingSuffix)


State 369

  152 controls: controlStructureBody ELSE controlStructureBody •

    $default  reduce using rule 152 (controls)


State 370

  179 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN •

    $default  reduce using rule 179 (whenSubject)


State 371

  185 whenEntry: ELSE ARROW controlStructureBody SEMICOLON •

    $default  reduce using rule 185 (whenEntry)


State 372

  184 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW • controlStructureBody

    LPAREN             shift, and go to state 146
    LSQUARE            shift, and go to state 108
    LCURL              shift, and go to state 99
    CLASS              shift, and go to state 1
    FUN                shift, and go to state 2
    IF                 shift, and go to state 109
    WHEN               shift, and go to state 110
    FOR                shift, and go to state 147
    DO                 shift, and go to state 148
    WHILE              shift, and go to state 149
    RETURN             shift, and go to state 111
    CONTINUE           shift, and go to state 112
    BREAK              shift, and go to state 113
    CONST              shift, and go to state 3
    FLOAT_LITERAL      shift, and go to state 114
    INTEGER_LITERAL    shift, and go to state 115
    CHARACTER_LITERAL  shift, and go to state 116
    BOOLEAN_LITERAL    shift, and go to state 117
    STRING_LITERAL     shift, and go to state 118
    IDENTIFIER         shift, and go to state 119

    LPAREN             [reduce using rule 89 ($@5)]
    LSQUARE            [reduce using rule 89 ($@5)]
    VAL                reduce using rule 41 ($@1)
    VAR                reduce using rule 41 ($@1)
    IF                 [reduce using rule 89 ($@5)]
    WHEN               [reduce using rule 89 ($@5)]
    RETURN             [reduce using rule 89 ($@5)]
    CONTINUE           [reduce using rule 89 ($@5)]
    BREAK              [reduce using rule 89 ($@5)]
    FLOAT_LITERAL      [reduce using rule 89 ($@5)]
    INTEGER_LITERAL    [reduce using rule 89 ($@5)]
    CHARACTER_LITERAL  [reduce using rule 89 ($@5)]
    BOOLEAN_LITERAL    [reduce using rule 89 ($@5)]
    STRING_LITERAL     [reduce using rule 89 ($@5)]
    IDENTIFIER         [reduce using rule 89 ($@5)]
    $default           reduce using rule 89 ($@5)

    functionDeclaration                        go to state 7
    block                                      go to state 212
    statement                                  go to state 213
    declaration                                go to state 153
    opt_modifier                               go to state 9
    $@1                                        go to state 10
    propertyDeclaration                        go to state 11
    simpleIdentifier                           go to state 154
    classDeclaration                           go to state 12
    assignableExpression                       go to state 155
    multi_unaryPrefix                          go to state 156
    $@5                                        go to state 157
    prefixUnaryExpression                      go to state 158
    parenthesizedAssignableExpression          go to state 159
    assignment                                 go to state 160
    directly_assign                            go to state 161
    directlyAssignableExpression               go to state 162
    parenthesizedDirectlyAssignableExpression  go to state 163
    postfixUnaryExpression                     go to state 164
    parenthesizedExpression                    go to state 122
    ifExpression                               go to state 123
    functionCall                               go to state 124
    dotExpression                              go to state 125
    loopStatement                              go to state 165
    controlStructureBody                       go to state 377
    jumpExpression                             go to state 126
    whenExpression                             go to state 127
    expression                                 go to state 166
    disjunction                                go to state 129
    conjunction                                go to state 130
    equality                                   go to state 131
    comparison                                 go to state 132
    genericCallLikeComparison                  go to state 133
    elvisExpression                            go to state 134
    rangeExpression                            go to state 135
    additiveExpression                         go to state 136
    multiplicativeExpression                   go to state 137
    primaryExpression                          go to state 138
    collectionLiteral                          go to state 139


State 373

  180 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition •

    $default  reduce using rule 180 (multi_comma_whenCondition)


State 374

  183 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody •

    $default  reduce using rule 183 (whenEntry)


State 375

  136 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument •

    $default  reduce using rule 136 (multi_comma_valueArgument)


State 376

  166 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody •

    $default  reduce using rule 166 (loopStatement)


State 377

  184 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody •

    $default  reduce using rule 184 (whenEntry)
