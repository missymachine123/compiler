Terminals unused in grammar

    RESERVED
    EXCL_WS
    DOUBLE_ARROW
    COLONCOLON
    DOUBLE_SEMICOLON
    HASH
    AT_NO_WS
    AT_POST_WS
    AT_PRE_WS
    AT_BOTH_WS
    QUEST_WS
    QUEST_DOT
    AS_SAFE
    SINGLE_QUOTE
    RETURN_AT
    CONTINUE_AT
    BREAK_AT
    THIS_AT
    SUPER_AT
    FILES
    FIELD
    PROPERTY
    GET
    SET
    RECEIVER
    PARAM
    SETPARAM
    DELEGATE
    PACKAGE
    INTERFACE
    OBJECT
    TYPEALIAS
    CONSTRUCTOR
    BY
    COMPANION
    INIT
    THIS
    SUPER
    TYPEOF
    WHERE
    TRY
    CATCH
    FINALLY
    DO
    THROW
    AS
    IS
    OUT
    DYNAMIC
    PUBLIC
    PRIVATE
    PROTECTED
    INTERNAL
    ENUM
    SEALED
    ANNOTATION
    DATA
    INNER
    TAILREC
    OPERATOR
    INLINE
    INFIX
    EXTERNAL
    SUSPEND
    OVERRIDE
    ABSTRACT
    NULL_LITERAL
    FINAL
    OPEN
    LATEINIT
    VARARG
    NOINLINE
    CROSSINLINE
    REIFIED
    EXPECT
    ACTUAL
    REAL_LITERAL
    DOUBLE_LITERAL
    CHARACTER_LITERAL
    HEX_LITERAL
    BIN_LITERAL
    UNSIGNED_LITERAL
    LONG_LITERAL
    INT
    FLOAT
    BOOLEAN
    CHAR
    STRING
    BYTE
    T_EOF
    AND
    OR
    LOWER_THAN_ELSE


State 36 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 40 conflicts: 1 shift/reduce
State 82 conflicts: 12 shift/reduce
State 94 conflicts: 12 shift/reduce
State 101 conflicts: 2 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 4 shift/reduce
State 113 conflicts: 4 shift/reduce
State 115 conflicts: 2 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 2 shift/reduce
State 118 conflicts: 3 shift/reduce
State 124 conflicts: 12 shift/reduce
State 128 conflicts: 2 shift/reduce
State 133 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 148 conflicts: 2 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 157 conflicts: 2 shift/reduce
State 187 conflicts: 7 shift/reduce
State 191 conflicts: 12 shift/reduce
State 240 conflicts: 1 shift/reduce
State 241 conflicts: 4 shift/reduce
State 242 conflicts: 4 shift/reduce
State 244 conflicts: 1 shift/reduce
State 245 conflicts: 1 shift/reduce
State 246 conflicts: 2 shift/reduce
State 253 conflicts: 1 shift/reduce
State 272 conflicts: 12 shift/reduce
State 279 conflicts: 12 shift/reduce
State 291 conflicts: 1 shift/reduce
State 292 conflicts: 1 shift/reduce
State 306 conflicts: 1 shift/reduce
State 309 conflicts: 12 shift/reduce
State 311 conflicts: 1 shift/reduce
State 321 conflicts: 1 shift/reduce
State 323 conflicts: 12 shift/reduce
State 344 conflicts: 1 shift/reduce
State 347 conflicts: 12 shift/reduce
State 351 conflicts: 12 shift/reduce
State 353 conflicts: 1 shift/reduce
State 357 conflicts: 12 shift/reduce
State 364 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: topLevelObjects

    2 topLevelObjects: topLevelObject
    3                | topLevelObjects topLevelObject

    4 topLevelObject: functionDeclaration
    5               | classDeclaration

    6 opt_functionBody: functionBody
    7                 | ε

    8 opt_colon_type: COLON type
    9               | ε

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   11                    | FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

   12 functionValueParameters: LPAREN opt_functionValueParameter RPAREN

   13 functionValueParameter: parameter opt_eq_exp

   14 parameter: simpleIdentifier COLON type

   15 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter
   16                              | ε

   17 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA
   18                           | functionValueParameter multi_comma_functionParameter
   19                           | ε

   20 type: nullableType
   21     | TYPELITERAL

   22 functionBody: block
   23             | ASSIGNMENT expression SEMICOLON

   24 block: LCURL statements RCURL

   25 semis: SEMICOLON
   26      | ε

   27 semis_statement: semis_statement semis statement
   28                | ε

   29 optional_statement_sequence: statement semis_statement
   30                            | ε

   31 statements: optional_statement_sequence

   32 statement: declaration semis
   33          | assignment semis
   34          | expression semis
   35          | loopStatement semis

   36 declaration: classDeclaration
   37            | functionDeclaration
   38            | propertyDeclaration

   39 val_var: VAR
   40        | VAL

   41 opt_modifier: CONST

   42 $@1: ε

   43 opt_modifier: $@1

   44 parenthesizedType: LPAREN type RPAREN

   45 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType

   46 $@2: ε

   47 multi_dot_simpleUserType: $@2

   48 userType: simpleUserType multi_dot_simpleUserType

   49 simpleUserType: simpleIdentifier typeArguments
   50               | simpleIdentifier

   51 multi_quest: multi_quest QUEST_NO_WS

   52 $@3: ε

   53 multi_quest: $@3

   54 nullableType: typeRef_parenthesizedType multi_quest

   55 typeRef_parenthesizedType: parenthesizedType
   56                          | userType

   57 opt_eq_exp: ASSIGNMENT expression

   58 $@4: ε

   59 opt_eq_exp: $@4

   60 multivariable_variableDeclaration: variableDeclaration
   61                                  | multiVariableDeclaration

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   64                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

   65 opt_typeParameters: typeParameters
   66                   | ε

   67 opt_comma: COMMA
   68          | ε

   69 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE

   70 typeParameter: simpleIdentifier

   71 multi_typeParameter: multi_typeParameter COMMA typeParameter
   72                    | ε

   73 simpleIdentifier: IDENTIFIER
   74                 | IMPORT
   75                 | CONST

   76 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody
   77                 | CLASS simpleIdentifier opt_typeParameters classBody

   78 variableDeclaration: type COLON type
   79                    | type

   80 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

   81 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration
   82                                | ε

   83 classBody: LCURL classMembers RCURL

   84 assignmentAndOperator: ADD_ASSIGNMENT
   85                      | SUB_ASSIGNMENT
   86                      | MULT_ASSIGNMENT
   87                      | DIV_ASSIGNMENT
   88                      | MOD_ASSIGNMENT

   89 assignableExpression: prefixUnaryExpression
   90                     | parenthesizedAssignableExpression

   91 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator

   92 $@5: ε

   93 multi_unaryPrefix: $@5

   94 prefixUnaryOperator: ADD
   95                    | SUB
   96                    | INCR
   97                    | DECR
   98                    | EXCL_NO_WS EXCL_NO_WS

   99 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression

  100 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN

  101 assignment: directly_assign expression

  102 directly_assign: directlyAssignableExpression ASSIGNMENT
  103                | assignableExpression assignmentAndOperator

  104 assignableSuffix: indexingSuffix
  105                 | typeArguments

  106 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE

  107 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection

  108 $@6: ε

  109 multi_comma_typeProjection: $@6

  110 typeProjection: type
  111               | MULT

  112 directlyAssignableExpression: postfixUnaryExpression assignableSuffix
  113                             | simpleIdentifier
  114                             | parenthesizedDirectlyAssignableExpression

  115 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN

  116 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix

  117 $@7: ε

  118 multi_postfixUnarySuffix: $@7

  119 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix

  120 postfixUnarySuffix: postfixUnaryOperator
  121                   | indexingSuffix
  122                   | callSuffix
  123                   | navigationSuffix

  124 identifier_expression_class: simpleIdentifier
  125                            | parenthesizedExpression
  126                            | CLASS

  127 navigationSuffix: memberAccessOperator identifier_expression_class

  128 memberAccessOperator: DOT
  129                     | QUEST_NO_WS DOT

  130 postfixUnaryOperator: INCR
  131                     | DECR
  132                     | EXCL_NO_WS EXCL_NO_WS

  133 multi_comma_expression: multi_comma_expression COMMA expression

  134 $@8: ε

  135 multi_comma_expression: $@8

  136 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE

  137 callSuffix: valueArguments

  138 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument

  139 $@9: ε

  140 multi_comma_valueArgument: $@9

  141 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma

  142 $@10: ε

  143 opt_valueArgument: $@10

  144 valueArguments: LPAREN opt_valueArgument RPAREN

  145 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT

  146 $@11: ε

  147 opt_simpleIdentifier_EQ: $@11

  148 opt_Multi: MULT

  149 $@12: ε

  150 opt_Multi: $@12

  151 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression

  152 parenthesizedExpression: LPAREN expression RPAREN

  153 ifExpression: IF LPAREN expression RPAREN controls

  154 controls: controlStructureBody ELSE controlStructureBody
  155         | controlStructureBody

  156 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis
  157             | dotExpression LPAREN functionArguments RPAREN semis

  158 dotExpression: IDENTIFIER DOT IDENTIFIER
  159              | dotExpression DOT IDENTIFIER

  160 functionArguments: expression
  161                  | functionArguments COMMA expression
  162                  | ε

  163 variable_multivariable: variableDeclaration
  164                       | multiVariableDeclaration

  165 control_structure_body_or_comma: controlStructureBody
  166                                | COMMA

  167 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma
  168              | FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody

  169 controlStructureBody: block
  170                     | statement

  171 jumpExpression: RETURN expression
  172               | RETURN
  173               | CONTINUE
  174               | BREAK

  175 multi_whenEntry: multi_whenEntry whenEntry
  176                | ε

  177 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL
  178               | WHEN LCURL multi_whenEntry RCURL

  179 whenSubject: LPAREN expression RPAREN
  180            | LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN

  181 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition

  182 $@13: ε

  183 multi_comma_whenCondition: $@13

  184 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody
  185          | whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody
  186          | ELSE ARROW controlStructureBody SEMICOLON
  187          | ELSE ARROW controlStructureBody

  188 whenCondition: expression
  189              | rangeTest

  190 rangeTest: IN expression

  191 classMembers: ε
  192             | classMembers classMember

  193 classMember: functionDeclaration
  194            | variableDeclaration

  195 expression: disjunction

  196 disjunction: conjunction
  197            | disjunction DISJ conjunction

  198 conjunction: equality
  199            | conjunction CONJ equality

  200 equality: comparison
  201         | equality equality_operator comparison

  202 comparison: genericCallLikeComparison
  203           | comparison comparison_operator genericCallLikeComparison

  204 genericCallLikeComparison: elvisExpression
  205                          | elvisExpression IN elvisExpression

  206 elvisExpression: rangeExpression
  207                | elvisExpression QUEST_COLON rangeExpression

  208 rangeExpression: additiveExpression
  209                | rangeExpression RANGE additiveExpression

  210 additiveExpression: multiplicativeExpression
  211                   | additiveExpression ADD multiplicativeExpression
  212                   | additiveExpression SUB multiplicativeExpression

  213 multiplicativeExpression: postfixUnaryExpression
  214                         | multiplicativeExpression MULT postfixUnaryExpression
  215                         | multiplicativeExpression DIV postfixUnaryExpression
  216                         | multiplicativeExpression MOD postfixUnaryExpression

  217 primaryExpression: parenthesizedExpression
  218                  | IDENTIFIER
  219                  | functionCall
  220                  | INTEGER_LITERAL
  221                  | STRING_LITERAL
  222                  | BOOLEAN_LITERAL
  223                  | FLOAT_LITERAL
  224                  | jumpExpression
  225                  | collectionLiteral
  226                  | ifExpression
  227                  | whenExpression

  228 collectionLiteral: LSQUARE RSQUARE
  229                  | LSQUARE expression COMMA RSQUARE
  230                  | LSQUARE expression RSQUARE
  231                  | LSQUARE expression multi_comma_expression RSQUARE
  232                  | LSQUARE expression multi_comma_expression COMMA RSQUARE

  233 comparison_operator: LANGLE
  234                    | RANGLE
  235                    | LE
  236                    | GE

  237 equality_operator: EQEQ
  238                  | EQEQEQ
  239                  | EXCL_EQ
  240                  | EXCL_EQEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    RESERVED <treeptr> (258)
    DOT <treeptr> (259) 10 45 62 128 129 158 159
    COMMA <treeptr> (260) 15 17 67 71 81 107 133 138 161 166 181 185 229 232
    LPAREN <treeptr> (261) 12 44 80 100 115 144 152 153 156 157 167 168 179 180
    RPAREN <treeptr> (262) 12 44 80 100 115 144 152 153 156 157 167 168 179 180
    LSQUARE <treeptr> (263) 136 228 229 230 231 232
    RSQUARE <treeptr> (264) 136 228 229 230 231 232
    LCURL <treeptr> (265) 24 83 177 178
    RCURL <treeptr> (266) 24 83 177 178
    INCR <treeptr> (267) 96 130
    DECR <treeptr> (268) 97 131
    CONJ <treeptr> (269) 199
    DISJ <treeptr> (270) 197
    EXCL_WS <treeptr> (271)
    EXCL_NO_WS <treeptr> (272) 98 132
    COLON <treeptr> (273) 8 14 78
    SEMICOLON <treeptr> (274) 23 25 62 63 186
    ASSIGNMENT <treeptr> (275) 23 57 102 145 180
    ADD_ASSIGNMENT <treeptr> (276) 84
    SUB_ASSIGNMENT <treeptr> (277) 85
    MULT_ASSIGNMENT <treeptr> (278) 86
    DIV_ASSIGNMENT <treeptr> (279) 87
    MOD_ASSIGNMENT <treeptr> (280) 88
    ARROW <treeptr> (281) 184 185 186 187
    DOUBLE_ARROW <treeptr> (282)
    RANGE <treeptr> (283) 209
    COLONCOLON <treeptr> (284)
    DOUBLE_SEMICOLON <treeptr> (285)
    HASH <treeptr> (286)
    AT_NO_WS <treeptr> (287)
    AT_POST_WS <treeptr> (288)
    AT_PRE_WS <treeptr> (289)
    AT_BOTH_WS <treeptr> (290)
    QUEST_WS <treeptr> (291)
    QUEST_NO_WS <treeptr> (292) 51 129
    LANGLE <treeptr> (293) 69 106 233
    RANGLE <treeptr> (294) 69 106 234
    LE <treeptr> (295) 235
    GE <treeptr> (296) 236
    QUEST_DOT <treeptr> (297)
    EXCL_EQ <treeptr> (298) 239
    EXCL_EQEQ <treeptr> (299) 240
    AS_SAFE <treeptr> (300)
    EQEQ <treeptr> (301) 237
    EQEQEQ <treeptr> (302) 238
    SINGLE_QUOTE <treeptr> (303)
    RETURN_AT <treeptr> (304)
    CONTINUE_AT <treeptr> (305)
    BREAK_AT <treeptr> (306)
    THIS_AT <treeptr> (307)
    SUPER_AT <treeptr> (308)
    FILES <treeptr> (309)
    FIELD <treeptr> (310)
    PROPERTY <treeptr> (311)
    GET <treeptr> (312)
    QUEST_COLON <treeptr> (313) 207
    SET <treeptr> (314)
    RECEIVER <treeptr> (315)
    PARAM <treeptr> (316)
    SETPARAM <treeptr> (317)
    DELEGATE <treeptr> (318)
    PACKAGE <treeptr> (319)
    IMPORT <treeptr> (320) 74
    CLASS <treeptr> (321) 76 77 126
    INTERFACE <treeptr> (322)
    FUN <treeptr> (323) 10 11
    OBJECT <treeptr> (324)
    VAL <treeptr> (325) 40 180
    VAR <treeptr> (326) 39
    TYPEALIAS <treeptr> (327)
    CONSTRUCTOR <treeptr> (328)
    BY <treeptr> (329)
    COMPANION <treeptr> (330)
    INIT <treeptr> (331)
    THIS <treeptr> (332)
    SUPER <treeptr> (333)
    TYPEOF <treeptr> (334)
    WHERE <treeptr> (335)
    IF <treeptr> (336) 153
    ELSE <treeptr> (337) 154 186 187
    WHEN <treeptr> (338) 177 178
    TRY <treeptr> (339)
    CATCH <treeptr> (340)
    FINALLY <treeptr> (341)
    FOR <treeptr> (342) 168
    DO <treeptr> (343)
    WHILE <treeptr> (344) 167
    THROW <treeptr> (345)
    RETURN <treeptr> (346) 171 172
    CONTINUE <treeptr> (347) 173
    BREAK <treeptr> (348) 174
    AS <treeptr> (349)
    IS <treeptr> (350)
    IN <treeptr> (351) 168 190 205
    OUT <treeptr> (352)
    DYNAMIC <treeptr> (353)
    PUBLIC <treeptr> (354)
    PRIVATE <treeptr> (355)
    PROTECTED <treeptr> (356)
    INTERNAL <treeptr> (357)
    ENUM <treeptr> (358)
    SEALED <treeptr> (359)
    ANNOTATION <treeptr> (360)
    DATA <treeptr> (361)
    INNER <treeptr> (362)
    TAILREC <treeptr> (363)
    OPERATOR <treeptr> (364)
    INLINE <treeptr> (365)
    INFIX <treeptr> (366)
    EXTERNAL <treeptr> (367)
    SUSPEND <treeptr> (368)
    OVERRIDE <treeptr> (369)
    ABSTRACT <treeptr> (370)
    NULL_LITERAL <treeptr> (371)
    FINAL <treeptr> (372)
    OPEN <treeptr> (373)
    CONST <treeptr> (374) 41 75 76
    LATEINIT <treeptr> (375)
    VARARG <treeptr> (376)
    NOINLINE <treeptr> (377)
    CROSSINLINE <treeptr> (378)
    REIFIED <treeptr> (379)
    EXPECT <treeptr> (380)
    ACTUAL <treeptr> (381)
    REAL_LITERAL <treeptr> (382)
    FLOAT_LITERAL <treeptr> (383) 223
    DOUBLE_LITERAL <treeptr> (384)
    INTEGER_LITERAL <treeptr> (385) 220
    CHARACTER_LITERAL <treeptr> (386)
    HEX_LITERAL <treeptr> (387)
    BIN_LITERAL <treeptr> (388)
    UNSIGNED_LITERAL <treeptr> (389)
    LONG_LITERAL <treeptr> (390)
    BOOLEAN_LITERAL <treeptr> (391) 222
    STRING_LITERAL <treeptr> (392) 221
    INT <treeptr> (393)
    FLOAT <treeptr> (394)
    BOOLEAN <treeptr> (395)
    CHAR <treeptr> (396)
    STRING <treeptr> (397)
    BYTE <treeptr> (398)
    T_EOF <treeptr> (399)
    TYPELITERAL <treeptr> (400) 21
    MULT <treeptr> (401) 111 148 214
    MOD <treeptr> (402) 216
    DIV <treeptr> (403) 215
    ADD <treeptr> (404) 94 211
    SUB <treeptr> (405) 95 212
    IDENTIFIER <treeptr> (406) 73 156 158 159 218
    AND (407)
    OR (408)
    LOWER_THAN_ELSE (409)


Nonterminals, with rules where they appear

    $accept (155)
        on left: 0
    program <treeptr> (156)
        on left: 1
        on right: 0
    topLevelObjects <treeptr> (157)
        on left: 2 3
        on right: 1 3
    topLevelObject <treeptr> (158)
        on left: 4 5
        on right: 2 3
    opt_functionBody <treeptr> (159)
        on left: 6 7
        on right: 10 11
    opt_colon_type <treeptr> (160)
        on left: 8 9
        on right: 10 11
    functionDeclaration <treeptr> (161)
        on left: 10 11
        on right: 4 37 193
    functionValueParameters <treeptr> (162)
        on left: 12
        on right: 10 11
    functionValueParameter <treeptr> (163)
        on left: 13
        on right: 15 17 18
    parameter <treeptr> (164)
        on left: 14
        on right: 13
    multi_comma_functionParameter <treeptr> (165)
        on left: 15 16
        on right: 15 17 18
    opt_functionValueParameter <treeptr> (166)
        on left: 17 18 19
        on right: 12
    type <treeptr> (167)
        on left: 20 21
        on right: 8 14 44 78 79 110
    functionBody <treeptr> (168)
        on left: 22 23
        on right: 6
    block <treeptr> (169)
        on left: 24
        on right: 22 169
    semis <treeptr> (170)
        on left: 25 26
        on right: 27 32 33 34 35 156 157
    semis_statement <treeptr> (171)
        on left: 27 28
        on right: 27 29
    optional_statement_sequence <treeptr> (172)
        on left: 29 30
        on right: 31
    statements <treeptr> (173)
        on left: 31
        on right: 24
    statement <treeptr> (174)
        on left: 32 33 34 35
        on right: 27 29 170
    declaration <treeptr> (175)
        on left: 36 37 38
        on right: 32
    val_var <treeptr> (176)
        on left: 39 40
        on right: 62 63 64
    opt_modifier <treeptr> (177)
        on left: 41 43
        on right: 62 63 64
    $@1 (178)
        on left: 42
        on right: 43
    parenthesizedType <treeptr> (179)
        on left: 44
        on right: 55
    multi_dot_simpleUserType <treeptr> (180)
        on left: 45 47
        on right: 45 48
    $@2 (181)
        on left: 46
        on right: 47
    userType <treeptr> (182)
        on left: 48
        on right: 56
    simpleUserType <treeptr> (183)
        on left: 49 50
        on right: 45 48
    multi_quest <treeptr> (184)
        on left: 51 53
        on right: 51 54
    $@3 (185)
        on left: 52
        on right: 53
    nullableType <treeptr> (186)
        on left: 54
        on right: 10 20 62
    typeRef_parenthesizedType <treeptr> (187)
        on left: 55 56
        on right: 54
    opt_eq_exp <treeptr> (188)
        on left: 57 59
        on right: 13 62 63 64
    $@4 (189)
        on left: 58
        on right: 59
    multivariable_variableDeclaration <treeptr> (190)
        on left: 60 61
        on right: 62 63 64
    propertyDeclaration <treeptr> (191)
        on left: 62 63 64
        on right: 38
    opt_typeParameters <treeptr> (192)
        on left: 65 66
        on right: 10 11 62 63 64 76 77
    opt_comma <treeptr> (193)
        on left: 67 68
        on right: 69 80 106 136 141
    typeParameters <treeptr> (194)
        on left: 69
        on right: 65
    typeParameter <treeptr> (195)
        on left: 70
        on right: 69 71
    multi_typeParameter <treeptr> (196)
        on left: 71 72
        on right: 69 71
    simpleIdentifier <treeptr> (197)
        on left: 73 74 75
        on right: 10 11 14 49 50 70 76 77 113 124 145
    classDeclaration <treeptr> (198)
        on left: 76 77
        on right: 5 36
    variableDeclaration <treeptr> (199)
        on left: 78 79
        on right: 60 80 81 163 180 194
    multiVariableDeclaration <treeptr> (200)
        on left: 80
        on right: 61 164
    multi_comma_variableDeclaration <treeptr> (201)
        on left: 81 82
        on right: 80 81
    classBody <treeptr> (202)
        on left: 83
        on right: 76 77
    assignmentAndOperator <treeptr> (203)
        on left: 84 85 86 87 88
        on right: 103
    assignableExpression <treeptr> (204)
        on left: 89 90
        on right: 100 103 115
    multi_unaryPrefix <treeptr> (205)
        on left: 91 93
        on right: 91 99
    $@5 (206)
        on left: 92
        on right: 93
    prefixUnaryOperator <treeptr> (207)
        on left: 94 95 96 97 98
        on right: 91
    prefixUnaryExpression <treeptr> (208)
        on left: 99
        on right: 89
    parenthesizedAssignableExpression <treeptr> (209)
        on left: 100
        on right: 90
    assignment <treeptr> (210)
        on left: 101
        on right: 33
    directly_assign <treeptr> (211)
        on left: 102 103
        on right: 101
    assignableSuffix <treeptr> (212)
        on left: 104 105
        on right: 112
    typeArguments <treeptr> (213)
        on left: 106
        on right: 49 105
    multi_comma_typeProjection <treeptr> (214)
        on left: 107 109
        on right: 106 107
    $@6 (215)
        on left: 108
        on right: 109
    typeProjection <treeptr> (216)
        on left: 110 111
        on right: 106 107
    directlyAssignableExpression <treeptr> (217)
        on left: 112 113 114
        on right: 102
    parenthesizedDirectlyAssignableExpression <treeptr> (218)
        on left: 115
        on right: 114
    multi_postfixUnarySuffix <treeptr> (219)
        on left: 116 118
        on right: 116 119
    $@7 (220)
        on left: 117
        on right: 118
    postfixUnaryExpression <treeptr> (221)
        on left: 119
        on right: 99 112 213 214 215 216
    postfixUnarySuffix <treeptr> (222)
        on left: 120 121 122 123
        on right: 116
    identifier_expression_class <treeptr> (223)
        on left: 124 125 126
        on right: 127
    navigationSuffix <treeptr> (224)
        on left: 127
        on right: 123
    memberAccessOperator <treeptr> (225)
        on left: 128 129
        on right: 127
    postfixUnaryOperator <treeptr> (226)
        on left: 130 131 132
        on right: 120
    multi_comma_expression <treeptr> (227)
        on left: 133 135
        on right: 133 136 231 232
    $@8 (228)
        on left: 134
        on right: 135
    indexingSuffix <treeptr> (229)
        on left: 136
        on right: 104 121
    callSuffix <treeptr> (230)
        on left: 137
        on right: 122
    multi_comma_valueArgument <treeptr> (231)
        on left: 138 140
        on right: 138 141
    $@9 (232)
        on left: 139
        on right: 140
    opt_valueArgument <treeptr> (233)
        on left: 141 143
        on right: 144
    $@10 (234)
        on left: 142
        on right: 143
    valueArguments <treeptr> (235)
        on left: 144
        on right: 137
    opt_simpleIdentifier_EQ <treeptr> (236)
        on left: 145 147
        on right: 151
    $@11 (237)
        on left: 146
        on right: 147
    opt_Multi <treeptr> (238)
        on left: 148 150
        on right: 151
    $@12 (239)
        on left: 149
        on right: 150
    valueArgument <treeptr> (240)
        on left: 151
        on right: 138 141
    parenthesizedExpression <treeptr> (241)
        on left: 152
        on right: 125 217
    ifExpression <treeptr> (242)
        on left: 153
        on right: 226
    controls <treeptr> (243)
        on left: 154 155
        on right: 153
    functionCall <treeptr> (244)
        on left: 156 157
        on right: 219
    dotExpression <treeptr> (245)
        on left: 158 159
        on right: 157 159
    functionArguments <treeptr> (246)
        on left: 160 161 162
        on right: 156 157 161
    variable_multivariable <treeptr> (247)
        on left: 163 164
        on right: 168
    control_structure_body_or_comma <treeptr> (248)
        on left: 165 166
        on right: 167
    loopStatement <treeptr> (249)
        on left: 167 168
        on right: 35
    controlStructureBody <treeptr> (250)
        on left: 169 170
        on right: 154 155 165 168 184 185 186 187
    jumpExpression <treeptr> (251)
        on left: 171 172 173 174
        on right: 224
    multi_whenEntry <treeptr> (252)
        on left: 175 176
        on right: 175 177 178
    whenExpression <treeptr> (253)
        on left: 177 178
        on right: 227
    whenSubject <treeptr> (254)
        on left: 179 180
        on right: 177
    multi_comma_whenCondition <treeptr> (255)
        on left: 181 183
        on right: 181 184 185
    $@13 (256)
        on left: 182
        on right: 183
    whenEntry <treeptr> (257)
        on left: 184 185 186 187
        on right: 175
    whenCondition <treeptr> (258)
        on left: 188 189
        on right: 181 184 185
    rangeTest <treeptr> (259)
        on left: 190
        on right: 189
    classMembers <treeptr> (260)
        on left: 191 192
        on right: 83 192
    classMember <treeptr> (261)
        on left: 193 194
        on right: 192
    expression <treeptr> (262)
        on left: 195
        on right: 23 34 57 101 133 136 151 152 153 160 161 167 168 171 179 180 188 190 229 230 231 232
    disjunction <treeptr> (263)
        on left: 196 197
        on right: 195 197
    conjunction <treeptr> (264)
        on left: 198 199
        on right: 196 197 199
    equality <treeptr> (265)
        on left: 200 201
        on right: 198 199 201
    comparison <treeptr> (266)
        on left: 202 203
        on right: 200 201 203
    genericCallLikeComparison <treeptr> (267)
        on left: 204 205
        on right: 202 203
    elvisExpression <treeptr> (268)
        on left: 206 207
        on right: 204 205 207
    rangeExpression <treeptr> (269)
        on left: 208 209
        on right: 206 207 209
    additiveExpression <treeptr> (270)
        on left: 210 211 212
        on right: 208 209 211 212
    multiplicativeExpression <treeptr> (271)
        on left: 213 214 215 216
        on right: 210 211 212 214 215 216
    primaryExpression <treeptr> (272)
        on left: 217 218 219 220 221 222 223 224 225 226 227
        on right: 119
    collectionLiteral <treeptr> (273)
        on left: 228 229 230 231 232
        on right: 225
    comparison_operator <treeptr> (274)
        on left: 233 234 235 236
        on right: 203
    equality_operator <treeptr> (275)
        on left: 237 238 239 240
        on right: 201


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    program              go to state 4
    topLevelObjects      go to state 5
    topLevelObject       go to state 6
    functionDeclaration  go to state 7
    classDeclaration     go to state 8


State 1

   77 classDeclaration: CLASS • simpleIdentifier opt_typeParameters classBody

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    simpleIdentifier  go to state 12


State 2

   10 functionDeclaration: FUN • opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   11                    | FUN • opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LANGLE  shift, and go to state 13

    $default  reduce using rule 66 (opt_typeParameters)

    opt_typeParameters  go to state 14
    typeParameters      go to state 15


State 3

   76 classDeclaration: CONST • CLASS simpleIdentifier opt_typeParameters classBody

    CLASS  shift, and go to state 16


State 4

    0 $accept: program • $end

    $end  shift, and go to state 17


State 5

    1 program: topLevelObjects •
    3 topLevelObjects: topLevelObjects • topLevelObject

    CLASS  shift, and go to state 1
    FUN    shift, and go to state 2
    CONST  shift, and go to state 3

    $default  reduce using rule 1 (program)

    topLevelObject       go to state 18
    functionDeclaration  go to state 7
    classDeclaration     go to state 8


State 6

    2 topLevelObjects: topLevelObject •

    $default  reduce using rule 2 (topLevelObjects)


State 7

    4 topLevelObject: functionDeclaration •

    $default  reduce using rule 4 (topLevelObject)


State 8

    5 topLevelObject: classDeclaration •

    $default  reduce using rule 5 (topLevelObject)


State 9

   74 simpleIdentifier: IMPORT •

    $default  reduce using rule 74 (simpleIdentifier)


State 10

   75 simpleIdentifier: CONST •

    $default  reduce using rule 75 (simpleIdentifier)


State 11

   73 simpleIdentifier: IDENTIFIER •

    $default  reduce using rule 73 (simpleIdentifier)


State 12

   77 classDeclaration: CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 13

    $default  reduce using rule 66 (opt_typeParameters)

    opt_typeParameters  go to state 19
    typeParameters      go to state 15


State 13

   69 typeParameters: LANGLE • typeParameter multi_typeParameter opt_comma RANGLE

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    typeParameter     go to state 20
    simpleIdentifier  go to state 21


State 14

   10 functionDeclaration: FUN opt_typeParameters • nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody
   11                    | FUN opt_typeParameters • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    LPAREN      shift, and go to state 22
    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 26
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 28


State 15

   65 opt_typeParameters: typeParameters •

    $default  reduce using rule 65 (opt_typeParameters)


State 16

   76 classDeclaration: CONST CLASS • simpleIdentifier opt_typeParameters classBody

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    simpleIdentifier  go to state 29


State 17

    0 $accept: program $end •

    $default  accept


State 18

    3 topLevelObjects: topLevelObjects topLevelObject •

    $default  reduce using rule 3 (topLevelObjects)


State 19

   77 classDeclaration: CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 30

    classBody  go to state 31


State 20

   69 typeParameters: LANGLE typeParameter • multi_typeParameter opt_comma RANGLE

    $default  reduce using rule 72 (multi_typeParameter)

    multi_typeParameter  go to state 32


State 21

   70 typeParameter: simpleIdentifier •

    $default  reduce using rule 70 (typeParameter)


State 22

   44 parenthesizedType: LPAREN • type RPAREN

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 34
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36


State 23

   55 typeRef_parenthesizedType: parenthesizedType •

    $default  reduce using rule 55 (typeRef_parenthesizedType)


State 24

   56 typeRef_parenthesizedType: userType •

    $default  reduce using rule 56 (typeRef_parenthesizedType)


State 25

   48 userType: simpleUserType • multi_dot_simpleUserType

    $default  reduce using rule 46 ($@2)

    multi_dot_simpleUserType  go to state 37
    $@2                       go to state 38


State 26

   10 functionDeclaration: FUN opt_typeParameters nullableType • DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    DOT  shift, and go to state 39


State 27

   54 nullableType: typeRef_parenthesizedType • multi_quest

    $default  reduce using rule 52 ($@3)

    multi_quest  go to state 40
    $@3          go to state 41


State 28

   11 functionDeclaration: FUN opt_typeParameters simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody
   49 simpleUserType: simpleIdentifier • typeArguments
   50               | simpleIdentifier •

    LPAREN  shift, and go to state 42
    LANGLE  shift, and go to state 43

    $default  reduce using rule 50 (simpleUserType)

    functionValueParameters  go to state 44
    typeArguments            go to state 45


State 29

   76 classDeclaration: CONST CLASS simpleIdentifier • opt_typeParameters classBody

    LANGLE  shift, and go to state 13

    $default  reduce using rule 66 (opt_typeParameters)

    opt_typeParameters  go to state 46
    typeParameters      go to state 15


State 30

   83 classBody: LCURL • classMembers RCURL

    $default  reduce using rule 191 (classMembers)

    classMembers  go to state 47


State 31

   77 classDeclaration: CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 77 (classDeclaration)


State 32

   69 typeParameters: LANGLE typeParameter multi_typeParameter • opt_comma RANGLE
   71 multi_typeParameter: multi_typeParameter • COMMA typeParameter

    COMMA  shift, and go to state 48

    $default  reduce using rule 68 (opt_comma)

    opt_comma  go to state 49


State 33

   21 type: TYPELITERAL •

    $default  reduce using rule 21 (type)


State 34

   44 parenthesizedType: LPAREN type • RPAREN

    RPAREN  shift, and go to state 50


State 35

   20 type: nullableType •

    $default  reduce using rule 20 (type)


State 36

   49 simpleUserType: simpleIdentifier • typeArguments
   50               | simpleIdentifier •

    LANGLE  shift, and go to state 43

    LANGLE    [reduce using rule 50 (simpleUserType)]
    $default  reduce using rule 50 (simpleUserType)

    typeArguments  go to state 45


State 37

   45 multi_dot_simpleUserType: multi_dot_simpleUserType • DOT simpleUserType
   48 userType: simpleUserType multi_dot_simpleUserType •

    DOT  shift, and go to state 51

    DOT       [reduce using rule 48 (userType)]
    $default  reduce using rule 48 (userType)


State 38

   47 multi_dot_simpleUserType: $@2 •

    $default  reduce using rule 47 (multi_dot_simpleUserType)


State 39

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT • simpleIdentifier functionValueParameters opt_colon_type opt_functionBody

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    simpleIdentifier  go to state 52


State 40

   51 multi_quest: multi_quest • QUEST_NO_WS
   54 nullableType: typeRef_parenthesizedType multi_quest •

    QUEST_NO_WS  shift, and go to state 53

    QUEST_NO_WS  [reduce using rule 54 (nullableType)]
    $default     reduce using rule 54 (nullableType)


State 41

   53 multi_quest: $@3 •

    $default  reduce using rule 53 (multi_quest)


State 42

   12 functionValueParameters: LPAREN • opt_functionValueParameter RPAREN

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 19 (opt_functionValueParameter)

    functionValueParameter      go to state 54
    parameter                   go to state 55
    opt_functionValueParameter  go to state 56
    simpleIdentifier            go to state 57


State 43

  106 typeArguments: LANGLE • typeProjection multi_comma_typeProjection opt_comma RANGLE

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    MULT         shift, and go to state 58
    IDENTIFIER   shift, and go to state 11

    type                       go to state 59
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    typeProjection             go to state 60


State 44

   11 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 61

    $default  reduce using rule 9 (opt_colon_type)

    opt_colon_type  go to state 62


State 45

   49 simpleUserType: simpleIdentifier typeArguments •

    $default  reduce using rule 49 (simpleUserType)


State 46

   76 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters • classBody

    LCURL  shift, and go to state 30

    classBody  go to state 63


State 47

   83 classBody: LCURL classMembers • RCURL
  192 classMembers: classMembers • classMember

    LPAREN       shift, and go to state 22
    RCURL        shift, and go to state 64
    IMPORT       shift, and go to state 9
    FUN          shift, and go to state 2
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    functionDeclaration        go to state 65
    type                       go to state 66
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    variableDeclaration        go to state 67
    classMember                go to state 68


State 48

   67 opt_comma: COMMA •
   71 multi_typeParameter: multi_typeParameter COMMA • typeParameter

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 67 (opt_comma)

    typeParameter     go to state 69
    simpleIdentifier  go to state 21


State 49

   69 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma • RANGLE

    RANGLE  shift, and go to state 70


State 50

   44 parenthesizedType: LPAREN type RPAREN •

    $default  reduce using rule 44 (parenthesizedType)


State 51

   45 multi_dot_simpleUserType: multi_dot_simpleUserType DOT • simpleUserType

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    simpleUserType    go to state 71
    simpleIdentifier  go to state 36


State 52

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier • functionValueParameters opt_colon_type opt_functionBody

    LPAREN  shift, and go to state 42

    functionValueParameters  go to state 72


State 53

   51 multi_quest: multi_quest QUEST_NO_WS •

    $default  reduce using rule 51 (multi_quest)


State 54

   17 opt_functionValueParameter: functionValueParameter • multi_comma_functionParameter COMMA
   18                           | functionValueParameter • multi_comma_functionParameter

    $default  reduce using rule 16 (multi_comma_functionParameter)

    multi_comma_functionParameter  go to state 73


State 55

   13 functionValueParameter: parameter • opt_eq_exp

    ASSIGNMENT  shift, and go to state 74

    $default  reduce using rule 58 ($@4)

    opt_eq_exp  go to state 75
    $@4         go to state 76


State 56

   12 functionValueParameters: LPAREN opt_functionValueParameter • RPAREN

    RPAREN  shift, and go to state 77


State 57

   14 parameter: simpleIdentifier • COLON type

    COLON  shift, and go to state 78


State 58

  111 typeProjection: MULT •

    $default  reduce using rule 111 (typeProjection)


State 59

  110 typeProjection: type •

    $default  reduce using rule 110 (typeProjection)


State 60

  106 typeArguments: LANGLE typeProjection • multi_comma_typeProjection opt_comma RANGLE

    $default  reduce using rule 108 ($@6)

    multi_comma_typeProjection  go to state 79
    $@6                         go to state 80


State 61

    8 opt_colon_type: COLON • type

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 81
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36


State 62

   11 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 82
    ASSIGNMENT  shift, and go to state 83

    $default  reduce using rule 7 (opt_functionBody)

    opt_functionBody  go to state 84
    functionBody      go to state 85
    block             go to state 86


State 63

   76 classDeclaration: CONST CLASS simpleIdentifier opt_typeParameters classBody •

    $default  reduce using rule 76 (classDeclaration)


State 64

   83 classBody: LCURL classMembers RCURL •

    $default  reduce using rule 83 (classBody)


State 65

  193 classMember: functionDeclaration •

    $default  reduce using rule 193 (classMember)


State 66

   78 variableDeclaration: type • COLON type
   79                    | type •

    COLON  shift, and go to state 87

    $default  reduce using rule 79 (variableDeclaration)


State 67

  194 classMember: variableDeclaration •

    $default  reduce using rule 194 (classMember)


State 68

  192 classMembers: classMembers classMember •

    $default  reduce using rule 192 (classMembers)


State 69

   71 multi_typeParameter: multi_typeParameter COMMA typeParameter •

    $default  reduce using rule 71 (multi_typeParameter)


State 70

   69 typeParameters: LANGLE typeParameter multi_typeParameter opt_comma RANGLE •

    $default  reduce using rule 69 (typeParameters)


State 71

   45 multi_dot_simpleUserType: multi_dot_simpleUserType DOT simpleUserType •

    $default  reduce using rule 45 (multi_dot_simpleUserType)


State 72

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters • opt_colon_type opt_functionBody

    COLON  shift, and go to state 61

    $default  reduce using rule 9 (opt_colon_type)

    opt_colon_type  go to state 88


State 73

   15 multi_comma_functionParameter: multi_comma_functionParameter • COMMA functionValueParameter
   17 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter • COMMA
   18                           | functionValueParameter multi_comma_functionParameter •

    COMMA  shift, and go to state 89

    $default  reduce using rule 18 (opt_functionValueParameter)


State 74

   57 opt_eq_exp: ASSIGNMENT • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 109
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 75

   13 functionValueParameter: parameter opt_eq_exp •

    $default  reduce using rule 13 (functionValueParameter)


State 76

   59 opt_eq_exp: $@4 •

    $default  reduce using rule 59 (opt_eq_exp)


State 77

   12 functionValueParameters: LPAREN opt_functionValueParameter RPAREN •

    $default  reduce using rule 12 (functionValueParameters)


State 78

   14 parameter: simpleIdentifier COLON • type

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 121
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36


State 79

  106 typeArguments: LANGLE typeProjection multi_comma_typeProjection • opt_comma RANGLE
  107 multi_comma_typeProjection: multi_comma_typeProjection • COMMA typeProjection

    COMMA  shift, and go to state 122

    $default  reduce using rule 68 (opt_comma)

    opt_comma  go to state 123


State 80

  109 multi_comma_typeProjection: $@6 •

    $default  reduce using rule 109 (multi_comma_typeProjection)


State 81

    8 opt_colon_type: COLON type •

    $default  reduce using rule 8 (opt_colon_type)


State 82

   24 block: LCURL • statements RCURL

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    RCURL            reduce using rule 30 (optional_statement_sequence)
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    optional_statement_sequence                go to state 130
    statements                                 go to state 131
    statement                                  go to state 132
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 83

   23 functionBody: ASSIGNMENT • expression SEMICOLON

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 151
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 84

   11 functionDeclaration: FUN opt_typeParameters simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 11 (functionDeclaration)


State 85

    6 opt_functionBody: functionBody •

    $default  reduce using rule 6 (opt_functionBody)


State 86

   22 functionBody: block •

    $default  reduce using rule 22 (functionBody)


State 87

   78 variableDeclaration: type COLON • type

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 152
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36


State 88

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type • opt_functionBody

    LCURL       shift, and go to state 82
    ASSIGNMENT  shift, and go to state 83

    $default  reduce using rule 7 (opt_functionBody)

    opt_functionBody  go to state 153
    functionBody      go to state 85
    block             go to state 86


State 89

   15 multi_comma_functionParameter: multi_comma_functionParameter COMMA • functionValueParameter
   17 opt_functionValueParameter: functionValueParameter multi_comma_functionParameter COMMA •

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 17 (opt_functionValueParameter)

    functionValueParameter  go to state 154
    parameter               go to state 55
    simpleIdentifier        go to state 57


State 90

  152 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 155
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 91

  228 collectionLiteral: LSQUARE • RSQUARE
  229                  | LSQUARE • expression COMMA RSQUARE
  230                  | LSQUARE • expression RSQUARE
  231                  | LSQUARE • expression multi_comma_expression RSQUARE
  232                  | LSQUARE • expression multi_comma_expression COMMA RSQUARE

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    RSQUARE          shift, and go to state 156
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 157
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 92

  153 ifExpression: IF • LPAREN expression RPAREN controls

    LPAREN  shift, and go to state 158


State 93

  177 whenExpression: WHEN • whenSubject LCURL multi_whenEntry RCURL
  178               | WHEN • LCURL multi_whenEntry RCURL

    LPAREN  shift, and go to state 159
    LCURL   shift, and go to state 160

    whenSubject  go to state 161


State 94

  171 jumpExpression: RETURN • expression
  172               | RETURN •

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    LPAREN           [reduce using rule 172 (jumpExpression)]
    LSQUARE          [reduce using rule 172 (jumpExpression)]
    IF               [reduce using rule 172 (jumpExpression)]
    WHEN             [reduce using rule 172 (jumpExpression)]
    RETURN           [reduce using rule 172 (jumpExpression)]
    CONTINUE         [reduce using rule 172 (jumpExpression)]
    BREAK            [reduce using rule 172 (jumpExpression)]
    FLOAT_LITERAL    [reduce using rule 172 (jumpExpression)]
    INTEGER_LITERAL  [reduce using rule 172 (jumpExpression)]
    BOOLEAN_LITERAL  [reduce using rule 172 (jumpExpression)]
    STRING_LITERAL   [reduce using rule 172 (jumpExpression)]
    IDENTIFIER       [reduce using rule 172 (jumpExpression)]
    $default         reduce using rule 172 (jumpExpression)

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 162
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 95

  173 jumpExpression: CONTINUE •

    $default  reduce using rule 173 (jumpExpression)


State 96

  174 jumpExpression: BREAK •

    $default  reduce using rule 174 (jumpExpression)


State 97

  223 primaryExpression: FLOAT_LITERAL •

    $default  reduce using rule 223 (primaryExpression)


State 98

  220 primaryExpression: INTEGER_LITERAL •

    $default  reduce using rule 220 (primaryExpression)


State 99

  222 primaryExpression: BOOLEAN_LITERAL •

    $default  reduce using rule 222 (primaryExpression)


State 100

  221 primaryExpression: STRING_LITERAL •

    $default  reduce using rule 221 (primaryExpression)


State 101

  156 functionCall: IDENTIFIER • LPAREN functionArguments RPAREN semis
  158 dotExpression: IDENTIFIER • DOT IDENTIFIER
  218 primaryExpression: IDENTIFIER •

    DOT     shift, and go to state 163
    LPAREN  shift, and go to state 164

    DOT       [reduce using rule 218 (primaryExpression)]
    LPAREN    [reduce using rule 218 (primaryExpression)]
    $default  reduce using rule 218 (primaryExpression)


State 102

  213 multiplicativeExpression: postfixUnaryExpression •

    $default  reduce using rule 213 (multiplicativeExpression)


State 103

  217 primaryExpression: parenthesizedExpression •

    $default  reduce using rule 217 (primaryExpression)


State 104

  226 primaryExpression: ifExpression •

    $default  reduce using rule 226 (primaryExpression)


State 105

  219 primaryExpression: functionCall •

    $default  reduce using rule 219 (primaryExpression)


State 106

  157 functionCall: dotExpression • LPAREN functionArguments RPAREN semis
  159 dotExpression: dotExpression • DOT IDENTIFIER

    DOT     shift, and go to state 165
    LPAREN  shift, and go to state 166


State 107

  224 primaryExpression: jumpExpression •

    $default  reduce using rule 224 (primaryExpression)


State 108

  227 primaryExpression: whenExpression •

    $default  reduce using rule 227 (primaryExpression)


State 109

   57 opt_eq_exp: ASSIGNMENT expression •

    $default  reduce using rule 57 (opt_eq_exp)


State 110

  195 expression: disjunction •
  197 disjunction: disjunction • DISJ conjunction

    DISJ  shift, and go to state 167

    DISJ      [reduce using rule 195 (expression)]
    $default  reduce using rule 195 (expression)


State 111

  196 disjunction: conjunction •
  199 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 168

    CONJ      [reduce using rule 196 (disjunction)]
    $default  reduce using rule 196 (disjunction)


State 112

  198 conjunction: equality •
  201 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 169
    EXCL_EQEQ  shift, and go to state 170
    EQEQ       shift, and go to state 171
    EQEQEQ     shift, and go to state 172

    EXCL_EQ    [reduce using rule 198 (conjunction)]
    EXCL_EQEQ  [reduce using rule 198 (conjunction)]
    EQEQ       [reduce using rule 198 (conjunction)]
    EQEQEQ     [reduce using rule 198 (conjunction)]
    $default   reduce using rule 198 (conjunction)

    equality_operator  go to state 173


State 113

  200 equality: comparison •
  203 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 174
    RANGLE  shift, and go to state 175
    LE      shift, and go to state 176
    GE      shift, and go to state 177

    LANGLE    [reduce using rule 200 (equality)]
    RANGLE    [reduce using rule 200 (equality)]
    LE        [reduce using rule 200 (equality)]
    GE        [reduce using rule 200 (equality)]
    $default  reduce using rule 200 (equality)

    comparison_operator  go to state 178


State 114

  202 comparison: genericCallLikeComparison •

    $default  reduce using rule 202 (comparison)


State 115

  204 genericCallLikeComparison: elvisExpression •
  205                          | elvisExpression • IN elvisExpression
  207 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 179
    IN           shift, and go to state 180

    QUEST_COLON  [reduce using rule 204 (genericCallLikeComparison)]
    IN           [reduce using rule 204 (genericCallLikeComparison)]
    $default     reduce using rule 204 (genericCallLikeComparison)


State 116

  206 elvisExpression: rangeExpression •
  209 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 181

    RANGE     [reduce using rule 206 (elvisExpression)]
    $default  reduce using rule 206 (elvisExpression)


State 117

  208 rangeExpression: additiveExpression •
  211 additiveExpression: additiveExpression • ADD multiplicativeExpression
  212                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 182
    SUB  shift, and go to state 183

    ADD       [reduce using rule 208 (rangeExpression)]
    SUB       [reduce using rule 208 (rangeExpression)]
    $default  reduce using rule 208 (rangeExpression)


State 118

  210 additiveExpression: multiplicativeExpression •
  214 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  215                         | multiplicativeExpression • DIV postfixUnaryExpression
  216                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 184
    MOD   shift, and go to state 185
    DIV   shift, and go to state 186

    MULT      [reduce using rule 210 (additiveExpression)]
    MOD       [reduce using rule 210 (additiveExpression)]
    DIV       [reduce using rule 210 (additiveExpression)]
    $default  reduce using rule 210 (additiveExpression)


State 119

  119 postfixUnaryExpression: primaryExpression • multi_postfixUnarySuffix

    $default  reduce using rule 117 ($@7)

    multi_postfixUnarySuffix  go to state 187
    $@7                       go to state 188


State 120

  225 primaryExpression: collectionLiteral •

    $default  reduce using rule 225 (primaryExpression)


State 121

   14 parameter: simpleIdentifier COLON type •

    $default  reduce using rule 14 (parameter)


State 122

   67 opt_comma: COMMA •
  107 multi_comma_typeProjection: multi_comma_typeProjection COMMA • typeProjection

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    MULT         shift, and go to state 58
    IDENTIFIER   shift, and go to state 11

    $default  reduce using rule 67 (opt_comma)

    type                       go to state 59
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    typeProjection             go to state 189


State 123

  106 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma • RANGLE

    RANGLE  shift, and go to state 190


State 124

  100 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  115 parenthesizedDirectlyAssignableExpression: LPAREN • assignableExpression RPAREN
  152 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN           shift, and go to state 191
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    assignableExpression               go to state 192
    multi_unaryPrefix                  go to state 140
    $@5                                go to state 141
    prefixUnaryExpression              go to state 142
    parenthesizedAssignableExpression  go to state 143
    postfixUnaryExpression             go to state 102
    parenthesizedExpression            go to state 103
    ifExpression                       go to state 104
    functionCall                       go to state 105
    dotExpression                      go to state 106
    jumpExpression                     go to state 107
    whenExpression                     go to state 108
    expression                         go to state 155
    disjunction                        go to state 110
    conjunction                        go to state 111
    equality                           go to state 112
    comparison                         go to state 113
    genericCallLikeComparison          go to state 114
    elvisExpression                    go to state 115
    rangeExpression                    go to state 116
    additiveExpression                 go to state 117
    multiplicativeExpression           go to state 118
    primaryExpression                  go to state 119
    collectionLiteral                  go to state 120


State 125

  168 loopStatement: FOR • LPAREN variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN  shift, and go to state 193


State 126

  167 loopStatement: WHILE • LPAREN expression RPAREN control_structure_body_or_comma

    LPAREN  shift, and go to state 194


State 127

   41 opt_modifier: CONST •
   75 simpleIdentifier: CONST •
   76 classDeclaration: CONST • CLASS simpleIdentifier opt_typeParameters classBody

    CLASS  shift, and go to state 16

    ASSIGNMENT  reduce using rule 75 (simpleIdentifier)
    $default    reduce using rule 41 (opt_modifier)


State 128

   73 simpleIdentifier: IDENTIFIER •
  156 functionCall: IDENTIFIER • LPAREN functionArguments RPAREN semis
  158 dotExpression: IDENTIFIER • DOT IDENTIFIER
  218 primaryExpression: IDENTIFIER •

    DOT     shift, and go to state 163
    LPAREN  shift, and go to state 164

    DOT         [reduce using rule 218 (primaryExpression)]
    LPAREN      [reduce using rule 218 (primaryExpression)]
    ASSIGNMENT  reduce using rule 73 (simpleIdentifier)
    $default    reduce using rule 218 (primaryExpression)


State 129

   37 declaration: functionDeclaration •

    $default  reduce using rule 37 (declaration)


State 130

   31 statements: optional_statement_sequence •

    $default  reduce using rule 31 (statements)


State 131

   24 block: LCURL statements • RCURL

    RCURL  shift, and go to state 195


State 132

   29 optional_statement_sequence: statement • semis_statement

    $default  reduce using rule 28 (semis_statement)

    semis_statement  go to state 196


State 133

   32 statement: declaration • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 198


State 134

   62 propertyDeclaration: opt_modifier • val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   64                    | opt_modifier • val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    VAL  shift, and go to state 199
    VAR  shift, and go to state 200

    val_var  go to state 201


State 135

   43 opt_modifier: $@1 •

    $default  reduce using rule 43 (opt_modifier)


State 136

   38 declaration: propertyDeclaration •

    $default  reduce using rule 38 (declaration)


State 137

  113 directlyAssignableExpression: simpleIdentifier •

    $default  reduce using rule 113 (directlyAssignableExpression)


State 138

   36 declaration: classDeclaration •

    $default  reduce using rule 36 (declaration)


State 139

  103 directly_assign: assignableExpression • assignmentAndOperator

    ADD_ASSIGNMENT   shift, and go to state 202
    SUB_ASSIGNMENT   shift, and go to state 203
    MULT_ASSIGNMENT  shift, and go to state 204
    DIV_ASSIGNMENT   shift, and go to state 205
    MOD_ASSIGNMENT   shift, and go to state 206

    assignmentAndOperator  go to state 207


State 140

   91 multi_unaryPrefix: multi_unaryPrefix • prefixUnaryOperator
   99 prefixUnaryExpression: multi_unaryPrefix • postfixUnaryExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    INCR             shift, and go to state 208
    DECR             shift, and go to state 209
    EXCL_NO_WS       shift, and go to state 210
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    ADD              shift, and go to state 211
    SUB              shift, and go to state 212
    IDENTIFIER       shift, and go to state 101

    prefixUnaryOperator      go to state 213
    postfixUnaryExpression   go to state 214
    parenthesizedExpression  go to state 103
    ifExpression             go to state 104
    functionCall             go to state 105
    dotExpression            go to state 106
    jumpExpression           go to state 107
    whenExpression           go to state 108
    primaryExpression        go to state 119
    collectionLiteral        go to state 120


State 141

   93 multi_unaryPrefix: $@5 •

    $default  reduce using rule 93 (multi_unaryPrefix)


State 142

   89 assignableExpression: prefixUnaryExpression •

    $default  reduce using rule 89 (assignableExpression)


State 143

   90 assignableExpression: parenthesizedAssignableExpression •

    $default  reduce using rule 90 (assignableExpression)


State 144

   33 statement: assignment • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 215


State 145

  101 assignment: directly_assign • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 216
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 146

  102 directly_assign: directlyAssignableExpression • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 217


State 147

  114 directlyAssignableExpression: parenthesizedDirectlyAssignableExpression •

    $default  reduce using rule 114 (directlyAssignableExpression)


State 148

  112 directlyAssignableExpression: postfixUnaryExpression • assignableSuffix
  213 multiplicativeExpression: postfixUnaryExpression •

    LSQUARE  shift, and go to state 218
    LANGLE   shift, and go to state 43

    LSQUARE   [reduce using rule 213 (multiplicativeExpression)]
    LANGLE    [reduce using rule 213 (multiplicativeExpression)]
    $default  reduce using rule 213 (multiplicativeExpression)

    assignableSuffix  go to state 219
    typeArguments     go to state 220
    indexingSuffix    go to state 221


State 149

   35 statement: loopStatement • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 222


State 150

   34 statement: expression • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 223


State 151

   23 functionBody: ASSIGNMENT expression • SEMICOLON

    SEMICOLON  shift, and go to state 224


State 152

   78 variableDeclaration: type COLON type •

    $default  reduce using rule 78 (variableDeclaration)


State 153

   10 functionDeclaration: FUN opt_typeParameters nullableType DOT simpleIdentifier functionValueParameters opt_colon_type opt_functionBody •

    $default  reduce using rule 10 (functionDeclaration)


State 154

   15 multi_comma_functionParameter: multi_comma_functionParameter COMMA functionValueParameter •

    $default  reduce using rule 15 (multi_comma_functionParameter)


State 155

  152 parenthesizedExpression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 225


State 156

  228 collectionLiteral: LSQUARE RSQUARE •

    $default  reduce using rule 228 (collectionLiteral)


State 157

  229 collectionLiteral: LSQUARE expression • COMMA RSQUARE
  230                  | LSQUARE expression • RSQUARE
  231                  | LSQUARE expression • multi_comma_expression RSQUARE
  232                  | LSQUARE expression • multi_comma_expression COMMA RSQUARE

    COMMA    shift, and go to state 226
    RSQUARE  shift, and go to state 227

    COMMA    [reduce using rule 134 ($@8)]
    RSQUARE  [reduce using rule 134 ($@8)]

    multi_comma_expression  go to state 228
    $@8                     go to state 229


State 158

  153 ifExpression: IF LPAREN • expression RPAREN controls

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 230
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 159

  179 whenSubject: LPAREN • expression RPAREN
  180            | LPAREN • VAL variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    VAL              shift, and go to state 231
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 232
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 160

  178 whenExpression: WHEN LCURL • multi_whenEntry RCURL

    $default  reduce using rule 176 (multi_whenEntry)

    multi_whenEntry  go to state 233


State 161

  177 whenExpression: WHEN whenSubject • LCURL multi_whenEntry RCURL

    LCURL  shift, and go to state 234


State 162

  171 jumpExpression: RETURN expression •

    $default  reduce using rule 171 (jumpExpression)


State 163

  158 dotExpression: IDENTIFIER DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 235


State 164

  156 functionCall: IDENTIFIER LPAREN • functionArguments RPAREN semis

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    $default  reduce using rule 162 (functionArguments)

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    functionArguments          go to state 236
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 237
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 165

  159 dotExpression: dotExpression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 238


State 166

  157 functionCall: dotExpression LPAREN • functionArguments RPAREN semis

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    $default  reduce using rule 162 (functionArguments)

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    functionArguments          go to state 239
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 237
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 167

  197 disjunction: disjunction DISJ • conjunction

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    conjunction                go to state 240
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 168

  199 conjunction: conjunction CONJ • equality

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    equality                   go to state 241
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 169

  239 equality_operator: EXCL_EQ •

    $default  reduce using rule 239 (equality_operator)


State 170

  240 equality_operator: EXCL_EQEQ •

    $default  reduce using rule 240 (equality_operator)


State 171

  237 equality_operator: EQEQ •

    $default  reduce using rule 237 (equality_operator)


State 172

  238 equality_operator: EQEQEQ •

    $default  reduce using rule 238 (equality_operator)


State 173

  201 equality: equality equality_operator • comparison

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    comparison                 go to state 242
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 174

  233 comparison_operator: LANGLE •

    $default  reduce using rule 233 (comparison_operator)


State 175

  234 comparison_operator: RANGLE •

    $default  reduce using rule 234 (comparison_operator)


State 176

  235 comparison_operator: LE •

    $default  reduce using rule 235 (comparison_operator)


State 177

  236 comparison_operator: GE •

    $default  reduce using rule 236 (comparison_operator)


State 178

  203 comparison: comparison comparison_operator • genericCallLikeComparison

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    genericCallLikeComparison  go to state 243
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 179

  207 elvisExpression: elvisExpression QUEST_COLON • rangeExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression    go to state 102
    parenthesizedExpression   go to state 103
    ifExpression              go to state 104
    functionCall              go to state 105
    dotExpression             go to state 106
    jumpExpression            go to state 107
    whenExpression            go to state 108
    rangeExpression           go to state 244
    additiveExpression        go to state 117
    multiplicativeExpression  go to state 118
    primaryExpression         go to state 119
    collectionLiteral         go to state 120


State 180

  205 genericCallLikeComparison: elvisExpression IN • elvisExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression    go to state 102
    parenthesizedExpression   go to state 103
    ifExpression              go to state 104
    functionCall              go to state 105
    dotExpression             go to state 106
    jumpExpression            go to state 107
    whenExpression            go to state 108
    elvisExpression           go to state 245
    rangeExpression           go to state 116
    additiveExpression        go to state 117
    multiplicativeExpression  go to state 118
    primaryExpression         go to state 119
    collectionLiteral         go to state 120


State 181

  209 rangeExpression: rangeExpression RANGE • additiveExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression    go to state 102
    parenthesizedExpression   go to state 103
    ifExpression              go to state 104
    functionCall              go to state 105
    dotExpression             go to state 106
    jumpExpression            go to state 107
    whenExpression            go to state 108
    additiveExpression        go to state 246
    multiplicativeExpression  go to state 118
    primaryExpression         go to state 119
    collectionLiteral         go to state 120


State 182

  211 additiveExpression: additiveExpression ADD • multiplicativeExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression    go to state 102
    parenthesizedExpression   go to state 103
    ifExpression              go to state 104
    functionCall              go to state 105
    dotExpression             go to state 106
    jumpExpression            go to state 107
    whenExpression            go to state 108
    multiplicativeExpression  go to state 247
    primaryExpression         go to state 119
    collectionLiteral         go to state 120


State 183

  212 additiveExpression: additiveExpression SUB • multiplicativeExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression    go to state 102
    parenthesizedExpression   go to state 103
    ifExpression              go to state 104
    functionCall              go to state 105
    dotExpression             go to state 106
    jumpExpression            go to state 107
    whenExpression            go to state 108
    multiplicativeExpression  go to state 248
    primaryExpression         go to state 119
    collectionLiteral         go to state 120


State 184

  214 multiplicativeExpression: multiplicativeExpression MULT • postfixUnaryExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression   go to state 249
    parenthesizedExpression  go to state 103
    ifExpression             go to state 104
    functionCall             go to state 105
    dotExpression            go to state 106
    jumpExpression           go to state 107
    whenExpression           go to state 108
    primaryExpression        go to state 119
    collectionLiteral        go to state 120


State 185

  216 multiplicativeExpression: multiplicativeExpression MOD • postfixUnaryExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression   go to state 250
    parenthesizedExpression  go to state 103
    ifExpression             go to state 104
    functionCall             go to state 105
    dotExpression            go to state 106
    jumpExpression           go to state 107
    whenExpression           go to state 108
    primaryExpression        go to state 119
    collectionLiteral        go to state 120


State 186

  215 multiplicativeExpression: multiplicativeExpression DIV • postfixUnaryExpression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression   go to state 251
    parenthesizedExpression  go to state 103
    ifExpression             go to state 104
    functionCall             go to state 105
    dotExpression            go to state 106
    jumpExpression           go to state 107
    whenExpression           go to state 108
    primaryExpression        go to state 119
    collectionLiteral        go to state 120


State 187

  116 multi_postfixUnarySuffix: multi_postfixUnarySuffix • postfixUnarySuffix
  119 postfixUnaryExpression: primaryExpression multi_postfixUnarySuffix •

    DOT          shift, and go to state 252
    LPAREN       shift, and go to state 253
    LSQUARE      shift, and go to state 218
    INCR         shift, and go to state 254
    DECR         shift, and go to state 255
    EXCL_NO_WS   shift, and go to state 256
    QUEST_NO_WS  shift, and go to state 257

    DOT          [reduce using rule 119 (postfixUnaryExpression)]
    LPAREN       [reduce using rule 119 (postfixUnaryExpression)]
    LSQUARE      [reduce using rule 119 (postfixUnaryExpression)]
    INCR         [reduce using rule 119 (postfixUnaryExpression)]
    DECR         [reduce using rule 119 (postfixUnaryExpression)]
    EXCL_NO_WS   [reduce using rule 119 (postfixUnaryExpression)]
    QUEST_NO_WS  [reduce using rule 119 (postfixUnaryExpression)]
    $default     reduce using rule 119 (postfixUnaryExpression)

    postfixUnarySuffix    go to state 258
    navigationSuffix      go to state 259
    memberAccessOperator  go to state 260
    postfixUnaryOperator  go to state 261
    indexingSuffix        go to state 262
    callSuffix            go to state 263
    valueArguments        go to state 264


State 188

  118 multi_postfixUnarySuffix: $@7 •

    $default  reduce using rule 118 (multi_postfixUnarySuffix)


State 189

  107 multi_comma_typeProjection: multi_comma_typeProjection COMMA typeProjection •

    $default  reduce using rule 107 (multi_comma_typeProjection)


State 190

  106 typeArguments: LANGLE typeProjection multi_comma_typeProjection opt_comma RANGLE •

    $default  reduce using rule 106 (typeArguments)


State 191

  100 parenthesizedAssignableExpression: LPAREN • assignableExpression RPAREN
  152 parenthesizedExpression: LPAREN • expression RPAREN

    LPAREN           shift, and go to state 191
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    assignableExpression               go to state 265
    multi_unaryPrefix                  go to state 140
    $@5                                go to state 141
    prefixUnaryExpression              go to state 142
    parenthesizedAssignableExpression  go to state 143
    postfixUnaryExpression             go to state 102
    parenthesizedExpression            go to state 103
    ifExpression                       go to state 104
    functionCall                       go to state 105
    dotExpression                      go to state 106
    jumpExpression                     go to state 107
    whenExpression                     go to state 108
    expression                         go to state 155
    disjunction                        go to state 110
    conjunction                        go to state 111
    equality                           go to state 112
    comparison                         go to state 113
    genericCallLikeComparison          go to state 114
    elvisExpression                    go to state 115
    rangeExpression                    go to state 116
    additiveExpression                 go to state 117
    multiplicativeExpression           go to state 118
    primaryExpression                  go to state 119
    collectionLiteral                  go to state 120


State 192

  100 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN
  115 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 266


State 193

  168 loopStatement: FOR LPAREN • variable_multivariable IN expression RPAREN controlStructureBody

    LPAREN       shift, and go to state 267
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 66
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    variableDeclaration        go to state 268
    multiVariableDeclaration   go to state 269
    variable_multivariable     go to state 270


State 194

  167 loopStatement: WHILE LPAREN • expression RPAREN control_structure_body_or_comma

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 271
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 195

   24 block: LCURL statements RCURL •

    $default  reduce using rule 24 (block)


State 196

   27 semis_statement: semis_statement • semis statement
   29 optional_statement_sequence: statement semis_statement •

    SEMICOLON  shift, and go to state 197

    RCURL     reduce using rule 29 (optional_statement_sequence)
    $default  reduce using rule 26 (semis)

    semis  go to state 272


State 197

   25 semis: SEMICOLON •

    $default  reduce using rule 25 (semis)


State 198

   32 statement: declaration semis •

    $default  reduce using rule 32 (statement)


State 199

   40 val_var: VAL •

    $default  reduce using rule 40 (val_var)


State 200

   39 val_var: VAR •

    $default  reduce using rule 39 (val_var)


State 201

   62 propertyDeclaration: opt_modifier val_var • opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON
   64                    | opt_modifier val_var • opt_typeParameters multivariable_variableDeclaration opt_eq_exp

    LANGLE  shift, and go to state 13

    $default  reduce using rule 66 (opt_typeParameters)

    opt_typeParameters  go to state 273
    typeParameters      go to state 15


State 202

   84 assignmentAndOperator: ADD_ASSIGNMENT •

    $default  reduce using rule 84 (assignmentAndOperator)


State 203

   85 assignmentAndOperator: SUB_ASSIGNMENT •

    $default  reduce using rule 85 (assignmentAndOperator)


State 204

   86 assignmentAndOperator: MULT_ASSIGNMENT •

    $default  reduce using rule 86 (assignmentAndOperator)


State 205

   87 assignmentAndOperator: DIV_ASSIGNMENT •

    $default  reduce using rule 87 (assignmentAndOperator)


State 206

   88 assignmentAndOperator: MOD_ASSIGNMENT •

    $default  reduce using rule 88 (assignmentAndOperator)


State 207

  103 directly_assign: assignableExpression assignmentAndOperator •

    $default  reduce using rule 103 (directly_assign)


State 208

   96 prefixUnaryOperator: INCR •

    $default  reduce using rule 96 (prefixUnaryOperator)


State 209

   97 prefixUnaryOperator: DECR •

    $default  reduce using rule 97 (prefixUnaryOperator)


State 210

   98 prefixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 274


State 211

   94 prefixUnaryOperator: ADD •

    $default  reduce using rule 94 (prefixUnaryOperator)


State 212

   95 prefixUnaryOperator: SUB •

    $default  reduce using rule 95 (prefixUnaryOperator)


State 213

   91 multi_unaryPrefix: multi_unaryPrefix prefixUnaryOperator •

    $default  reduce using rule 91 (multi_unaryPrefix)


State 214

   99 prefixUnaryExpression: multi_unaryPrefix postfixUnaryExpression •

    $default  reduce using rule 99 (prefixUnaryExpression)


State 215

   33 statement: assignment semis •

    $default  reduce using rule 33 (statement)


State 216

  101 assignment: directly_assign expression •

    $default  reduce using rule 101 (assignment)


State 217

  102 directly_assign: directlyAssignableExpression ASSIGNMENT •

    $default  reduce using rule 102 (directly_assign)


State 218

  136 indexingSuffix: LSQUARE • expression multi_comma_expression opt_comma RSQUARE

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 275
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 219

  112 directlyAssignableExpression: postfixUnaryExpression assignableSuffix •

    $default  reduce using rule 112 (directlyAssignableExpression)


State 220

  105 assignableSuffix: typeArguments •

    $default  reduce using rule 105 (assignableSuffix)


State 221

  104 assignableSuffix: indexingSuffix •

    $default  reduce using rule 104 (assignableSuffix)


State 222

   35 statement: loopStatement semis •

    $default  reduce using rule 35 (statement)


State 223

   34 statement: expression semis •

    $default  reduce using rule 34 (statement)


State 224

   23 functionBody: ASSIGNMENT expression SEMICOLON •

    $default  reduce using rule 23 (functionBody)


State 225

  152 parenthesizedExpression: LPAREN expression RPAREN •

    $default  reduce using rule 152 (parenthesizedExpression)


State 226

  229 collectionLiteral: LSQUARE expression COMMA • RSQUARE

    RSQUARE  shift, and go to state 276


State 227

  230 collectionLiteral: LSQUARE expression RSQUARE •

    $default  reduce using rule 230 (collectionLiteral)


State 228

  133 multi_comma_expression: multi_comma_expression • COMMA expression
  231 collectionLiteral: LSQUARE expression multi_comma_expression • RSQUARE
  232                  | LSQUARE expression multi_comma_expression • COMMA RSQUARE

    COMMA    shift, and go to state 277
    RSQUARE  shift, and go to state 278


State 229

  135 multi_comma_expression: $@8 •

    $default  reduce using rule 135 (multi_comma_expression)


State 230

  153 ifExpression: IF LPAREN expression • RPAREN controls

    RPAREN  shift, and go to state 279


State 231

  180 whenSubject: LPAREN VAL • variableDeclaration ASSIGNMENT expression RPAREN

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 66
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    variableDeclaration        go to state 280


State 232

  179 whenSubject: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 281


State 233

  175 multi_whenEntry: multi_whenEntry • whenEntry
  178 whenExpression: WHEN LCURL multi_whenEntry • RCURL

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    RCURL            shift, and go to state 282
    IF               shift, and go to state 92
    ELSE             shift, and go to state 283
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    IN               shift, and go to state 284
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    whenEntry                  go to state 285
    whenCondition              go to state 286
    rangeTest                  go to state 287
    expression                 go to state 288
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 234

  177 whenExpression: WHEN whenSubject LCURL • multi_whenEntry RCURL

    $default  reduce using rule 176 (multi_whenEntry)

    multi_whenEntry  go to state 289


State 235

  158 dotExpression: IDENTIFIER DOT IDENTIFIER •

    $default  reduce using rule 158 (dotExpression)


State 236

  156 functionCall: IDENTIFIER LPAREN functionArguments • RPAREN semis
  161 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 290
    RPAREN  shift, and go to state 291


State 237

  160 functionArguments: expression •

    $default  reduce using rule 160 (functionArguments)


State 238

  159 dotExpression: dotExpression DOT IDENTIFIER •

    $default  reduce using rule 159 (dotExpression)


State 239

  157 functionCall: dotExpression LPAREN functionArguments • RPAREN semis
  161 functionArguments: functionArguments • COMMA expression

    COMMA   shift, and go to state 290
    RPAREN  shift, and go to state 292


State 240

  197 disjunction: disjunction DISJ conjunction •
  199 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 168

    CONJ      [reduce using rule 197 (disjunction)]
    $default  reduce using rule 197 (disjunction)


State 241

  199 conjunction: conjunction CONJ equality •
  201 equality: equality • equality_operator comparison

    EXCL_EQ    shift, and go to state 169
    EXCL_EQEQ  shift, and go to state 170
    EQEQ       shift, and go to state 171
    EQEQEQ     shift, and go to state 172

    EXCL_EQ    [reduce using rule 199 (conjunction)]
    EXCL_EQEQ  [reduce using rule 199 (conjunction)]
    EQEQ       [reduce using rule 199 (conjunction)]
    EQEQEQ     [reduce using rule 199 (conjunction)]
    $default   reduce using rule 199 (conjunction)

    equality_operator  go to state 173


State 242

  201 equality: equality equality_operator comparison •
  203 comparison: comparison • comparison_operator genericCallLikeComparison

    LANGLE  shift, and go to state 174
    RANGLE  shift, and go to state 175
    LE      shift, and go to state 176
    GE      shift, and go to state 177

    LANGLE    [reduce using rule 201 (equality)]
    RANGLE    [reduce using rule 201 (equality)]
    LE        [reduce using rule 201 (equality)]
    GE        [reduce using rule 201 (equality)]
    $default  reduce using rule 201 (equality)

    comparison_operator  go to state 178


State 243

  203 comparison: comparison comparison_operator genericCallLikeComparison •

    $default  reduce using rule 203 (comparison)


State 244

  207 elvisExpression: elvisExpression QUEST_COLON rangeExpression •
  209 rangeExpression: rangeExpression • RANGE additiveExpression

    RANGE  shift, and go to state 181

    RANGE     [reduce using rule 207 (elvisExpression)]
    $default  reduce using rule 207 (elvisExpression)


State 245

  205 genericCallLikeComparison: elvisExpression IN elvisExpression •
  207 elvisExpression: elvisExpression • QUEST_COLON rangeExpression

    QUEST_COLON  shift, and go to state 179

    QUEST_COLON  [reduce using rule 205 (genericCallLikeComparison)]
    $default     reduce using rule 205 (genericCallLikeComparison)


State 246

  209 rangeExpression: rangeExpression RANGE additiveExpression •
  211 additiveExpression: additiveExpression • ADD multiplicativeExpression
  212                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 182
    SUB  shift, and go to state 183

    ADD       [reduce using rule 209 (rangeExpression)]
    SUB       [reduce using rule 209 (rangeExpression)]
    $default  reduce using rule 209 (rangeExpression)


State 247

  211 additiveExpression: additiveExpression ADD multiplicativeExpression •
  214 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  215                         | multiplicativeExpression • DIV postfixUnaryExpression
  216                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 184
    MOD   shift, and go to state 185
    DIV   shift, and go to state 186

    $default  reduce using rule 211 (additiveExpression)


State 248

  212 additiveExpression: additiveExpression SUB multiplicativeExpression •
  214 multiplicativeExpression: multiplicativeExpression • MULT postfixUnaryExpression
  215                         | multiplicativeExpression • DIV postfixUnaryExpression
  216                         | multiplicativeExpression • MOD postfixUnaryExpression

    MULT  shift, and go to state 184
    MOD   shift, and go to state 185
    DIV   shift, and go to state 186

    $default  reduce using rule 212 (additiveExpression)


State 249

  214 multiplicativeExpression: multiplicativeExpression MULT postfixUnaryExpression •

    $default  reduce using rule 214 (multiplicativeExpression)


State 250

  216 multiplicativeExpression: multiplicativeExpression MOD postfixUnaryExpression •

    $default  reduce using rule 216 (multiplicativeExpression)


State 251

  215 multiplicativeExpression: multiplicativeExpression DIV postfixUnaryExpression •

    $default  reduce using rule 215 (multiplicativeExpression)


State 252

  128 memberAccessOperator: DOT •

    $default  reduce using rule 128 (memberAccessOperator)


State 253

  144 valueArguments: LPAREN • opt_valueArgument RPAREN

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    RPAREN      reduce using rule 142 ($@10)
    IDENTIFIER  [reduce using rule 146 ($@11)]
    $default    reduce using rule 146 ($@11)

    simpleIdentifier         go to state 293
    opt_valueArgument        go to state 294
    $@10                     go to state 295
    opt_simpleIdentifier_EQ  go to state 296
    $@11                     go to state 297
    valueArgument            go to state 298


State 254

  130 postfixUnaryOperator: INCR •

    $default  reduce using rule 130 (postfixUnaryOperator)


State 255

  131 postfixUnaryOperator: DECR •

    $default  reduce using rule 131 (postfixUnaryOperator)


State 256

  132 postfixUnaryOperator: EXCL_NO_WS • EXCL_NO_WS

    EXCL_NO_WS  shift, and go to state 299


State 257

  129 memberAccessOperator: QUEST_NO_WS • DOT

    DOT  shift, and go to state 300


State 258

  116 multi_postfixUnarySuffix: multi_postfixUnarySuffix postfixUnarySuffix •

    $default  reduce using rule 116 (multi_postfixUnarySuffix)


State 259

  123 postfixUnarySuffix: navigationSuffix •

    $default  reduce using rule 123 (postfixUnarySuffix)


State 260

  127 navigationSuffix: memberAccessOperator • identifier_expression_class

    LPAREN      shift, and go to state 90
    IMPORT      shift, and go to state 9
    CLASS       shift, and go to state 301
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    simpleIdentifier             go to state 302
    identifier_expression_class  go to state 303
    parenthesizedExpression      go to state 304


State 261

  120 postfixUnarySuffix: postfixUnaryOperator •

    $default  reduce using rule 120 (postfixUnarySuffix)


State 262

  121 postfixUnarySuffix: indexingSuffix •

    $default  reduce using rule 121 (postfixUnarySuffix)


State 263

  122 postfixUnarySuffix: callSuffix •

    $default  reduce using rule 122 (postfixUnarySuffix)


State 264

  137 callSuffix: valueArguments •

    $default  reduce using rule 137 (callSuffix)


State 265

  100 parenthesizedAssignableExpression: LPAREN assignableExpression • RPAREN

    RPAREN  shift, and go to state 305


State 266

  100 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •
  115 parenthesizedDirectlyAssignableExpression: LPAREN assignableExpression RPAREN •

    ASSIGNMENT  reduce using rule 115 (parenthesizedDirectlyAssignableExpression)
    $default    reduce using rule 100 (parenthesizedAssignableExpression)


State 267

   44 parenthesizedType: LPAREN • type RPAREN
   80 multiVariableDeclaration: LPAREN • variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                       go to state 306
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    variableDeclaration        go to state 307


State 268

  163 variable_multivariable: variableDeclaration •

    $default  reduce using rule 163 (variable_multivariable)


State 269

  164 variable_multivariable: multiVariableDeclaration •

    $default  reduce using rule 164 (variable_multivariable)


State 270

  168 loopStatement: FOR LPAREN variable_multivariable • IN expression RPAREN controlStructureBody

    IN  shift, and go to state 308


State 271

  167 loopStatement: WHILE LPAREN expression • RPAREN control_structure_body_or_comma

    RPAREN  shift, and go to state 309


State 272

   27 semis_statement: semis_statement semis • statement

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    statement                                  go to state 310
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 273

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters • nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON
   63                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp SEMICOLON
   64                    | opt_modifier val_var opt_typeParameters • multivariable_variableDeclaration opt_eq_exp

    LPAREN       shift, and go to state 267
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                               go to state 66
    parenthesizedType                  go to state 23
    userType                           go to state 24
    simpleUserType                     go to state 25
    nullableType                       go to state 311
    typeRef_parenthesizedType          go to state 27
    multivariable_variableDeclaration  go to state 312
    simpleIdentifier                   go to state 36
    variableDeclaration                go to state 313
    multiVariableDeclaration           go to state 314


State 274

   98 prefixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 98 (prefixUnaryOperator)


State 275

  136 indexingSuffix: LSQUARE expression • multi_comma_expression opt_comma RSQUARE

    $default  reduce using rule 134 ($@8)

    multi_comma_expression  go to state 315
    $@8                     go to state 229


State 276

  229 collectionLiteral: LSQUARE expression COMMA RSQUARE •

    $default  reduce using rule 229 (collectionLiteral)


State 277

  133 multi_comma_expression: multi_comma_expression COMMA • expression
  232 collectionLiteral: LSQUARE expression multi_comma_expression COMMA • RSQUARE

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    RSQUARE          shift, and go to state 316
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 317
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 278

  231 collectionLiteral: LSQUARE expression multi_comma_expression RSQUARE •

    $default  reduce using rule 231 (collectionLiteral)


State 279

  153 ifExpression: IF LPAREN expression RPAREN • controls

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    controls                                   go to state 320
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 321
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 280

  180 whenSubject: LPAREN VAL variableDeclaration • ASSIGNMENT expression RPAREN

    ASSIGNMENT  shift, and go to state 322


State 281

  179 whenSubject: LPAREN expression RPAREN •

    $default  reduce using rule 179 (whenSubject)


State 282

  178 whenExpression: WHEN LCURL multi_whenEntry RCURL •

    $default  reduce using rule 178 (whenExpression)


State 283

  186 whenEntry: ELSE • ARROW controlStructureBody SEMICOLON
  187          | ELSE • ARROW controlStructureBody

    ARROW  shift, and go to state 323


State 284

  190 rangeTest: IN • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 324
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 285

  175 multi_whenEntry: multi_whenEntry whenEntry •

    $default  reduce using rule 175 (multi_whenEntry)


State 286

  184 whenEntry: whenCondition • multi_comma_whenCondition ARROW controlStructureBody
  185          | whenCondition • multi_comma_whenCondition COMMA ARROW controlStructureBody

    $default  reduce using rule 182 ($@13)

    multi_comma_whenCondition  go to state 325
    $@13                       go to state 326


State 287

  189 whenCondition: rangeTest •

    $default  reduce using rule 189 (whenCondition)


State 288

  188 whenCondition: expression •

    $default  reduce using rule 188 (whenCondition)


State 289

  175 multi_whenEntry: multi_whenEntry • whenEntry
  177 whenExpression: WHEN whenSubject LCURL multi_whenEntry • RCURL

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    RCURL            shift, and go to state 327
    IF               shift, and go to state 92
    ELSE             shift, and go to state 283
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    IN               shift, and go to state 284
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    whenEntry                  go to state 285
    whenCondition              go to state 286
    rangeTest                  go to state 287
    expression                 go to state 288
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 290

  161 functionArguments: functionArguments COMMA • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 328
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 291

  156 functionCall: IDENTIFIER LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 329


State 292

  157 functionCall: dotExpression LPAREN functionArguments RPAREN • semis

    SEMICOLON  shift, and go to state 197

    SEMICOLON  [reduce using rule 26 (semis)]
    $default   reduce using rule 26 (semis)

    semis  go to state 330


State 293

  145 opt_simpleIdentifier_EQ: simpleIdentifier • ASSIGNMENT

    ASSIGNMENT  shift, and go to state 331


State 294

  144 valueArguments: LPAREN opt_valueArgument • RPAREN

    RPAREN  shift, and go to state 332


State 295

  143 opt_valueArgument: $@10 •

    $default  reduce using rule 143 (opt_valueArgument)


State 296

  151 valueArgument: opt_simpleIdentifier_EQ • opt_Multi expression

    MULT  shift, and go to state 333

    $default  reduce using rule 149 ($@12)

    opt_Multi  go to state 334
    $@12       go to state 335


State 297

  147 opt_simpleIdentifier_EQ: $@11 •

    $default  reduce using rule 147 (opt_simpleIdentifier_EQ)


State 298

  141 opt_valueArgument: valueArgument • multi_comma_valueArgument opt_comma

    $default  reduce using rule 139 ($@9)

    multi_comma_valueArgument  go to state 336
    $@9                        go to state 337


State 299

  132 postfixUnaryOperator: EXCL_NO_WS EXCL_NO_WS •

    $default  reduce using rule 132 (postfixUnaryOperator)


State 300

  129 memberAccessOperator: QUEST_NO_WS DOT •

    $default  reduce using rule 129 (memberAccessOperator)


State 301

  126 identifier_expression_class: CLASS •

    $default  reduce using rule 126 (identifier_expression_class)


State 302

  124 identifier_expression_class: simpleIdentifier •

    $default  reduce using rule 124 (identifier_expression_class)


State 303

  127 navigationSuffix: memberAccessOperator identifier_expression_class •

    $default  reduce using rule 127 (navigationSuffix)


State 304

  125 identifier_expression_class: parenthesizedExpression •

    $default  reduce using rule 125 (identifier_expression_class)


State 305

  100 parenthesizedAssignableExpression: LPAREN assignableExpression RPAREN •

    $default  reduce using rule 100 (parenthesizedAssignableExpression)


State 306

   44 parenthesizedType: LPAREN type • RPAREN
   78 variableDeclaration: type • COLON type
   79                    | type •

    RPAREN  shift, and go to state 50
    COLON   shift, and go to state 87

    RPAREN    [reduce using rule 79 (variableDeclaration)]
    $default  reduce using rule 79 (variableDeclaration)


State 307

   80 multiVariableDeclaration: LPAREN variableDeclaration • multi_comma_variableDeclaration opt_comma RPAREN

    $default  reduce using rule 82 (multi_comma_variableDeclaration)

    multi_comma_variableDeclaration  go to state 338


State 308

  168 loopStatement: FOR LPAREN variable_multivariable IN • expression RPAREN controlStructureBody

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 339
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 309

  167 loopStatement: WHILE LPAREN expression RPAREN • control_structure_body_or_comma

    COMMA            shift, and go to state 340
    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    control_structure_body_or_comma            go to state 341
    loopStatement                              go to state 149
    controlStructureBody                       go to state 342
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 310

   27 semis_statement: semis_statement semis statement •

    $default  reduce using rule 27 (semis_statement)


State 311

   20 type: nullableType •
   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType • DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON

    DOT  shift, and go to state 343

    DOT       [reduce using rule 20 (type)]
    $default  reduce using rule 20 (type)


State 312

   63 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp SEMICOLON
   64                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration • opt_eq_exp

    ASSIGNMENT  shift, and go to state 74

    $default  reduce using rule 58 ($@4)

    opt_eq_exp  go to state 344
    $@4         go to state 76


State 313

   60 multivariable_variableDeclaration: variableDeclaration •

    $default  reduce using rule 60 (multivariable_variableDeclaration)


State 314

   61 multivariable_variableDeclaration: multiVariableDeclaration •

    $default  reduce using rule 61 (multivariable_variableDeclaration)


State 315

  133 multi_comma_expression: multi_comma_expression • COMMA expression
  136 indexingSuffix: LSQUARE expression multi_comma_expression • opt_comma RSQUARE

    COMMA  shift, and go to state 345

    $default  reduce using rule 68 (opt_comma)

    opt_comma  go to state 346


State 316

  232 collectionLiteral: LSQUARE expression multi_comma_expression COMMA RSQUARE •

    $default  reduce using rule 232 (collectionLiteral)


State 317

  133 multi_comma_expression: multi_comma_expression COMMA expression •

    $default  reduce using rule 133 (multi_comma_expression)


State 318

  169 controlStructureBody: block •

    $default  reduce using rule 169 (controlStructureBody)


State 319

  170 controlStructureBody: statement •

    $default  reduce using rule 170 (controlStructureBody)


State 320

  153 ifExpression: IF LPAREN expression RPAREN controls •

    $default  reduce using rule 153 (ifExpression)


State 321

  154 controls: controlStructureBody • ELSE controlStructureBody
  155         | controlStructureBody •

    ELSE  shift, and go to state 347

    ELSE      [reduce using rule 155 (controls)]
    $default  reduce using rule 155 (controls)


State 322

  180 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT • expression RPAREN

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 348
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 323

  186 whenEntry: ELSE ARROW • controlStructureBody SEMICOLON
  187          | ELSE ARROW • controlStructureBody

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 349
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 324

  190 rangeTest: IN expression •

    $default  reduce using rule 190 (rangeTest)


State 325

  181 multi_comma_whenCondition: multi_comma_whenCondition • COMMA whenCondition
  184 whenEntry: whenCondition multi_comma_whenCondition • ARROW controlStructureBody
  185          | whenCondition multi_comma_whenCondition • COMMA ARROW controlStructureBody

    COMMA  shift, and go to state 350
    ARROW  shift, and go to state 351


State 326

  183 multi_comma_whenCondition: $@13 •

    $default  reduce using rule 183 (multi_comma_whenCondition)


State 327

  177 whenExpression: WHEN whenSubject LCURL multi_whenEntry RCURL •

    $default  reduce using rule 177 (whenExpression)


State 328

  161 functionArguments: functionArguments COMMA expression •

    $default  reduce using rule 161 (functionArguments)


State 329

  156 functionCall: IDENTIFIER LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 156 (functionCall)


State 330

  157 functionCall: dotExpression LPAREN functionArguments RPAREN semis •

    $default  reduce using rule 157 (functionCall)


State 331

  145 opt_simpleIdentifier_EQ: simpleIdentifier ASSIGNMENT •

    $default  reduce using rule 145 (opt_simpleIdentifier_EQ)


State 332

  144 valueArguments: LPAREN opt_valueArgument RPAREN •

    $default  reduce using rule 144 (valueArguments)


State 333

  148 opt_Multi: MULT •

    $default  reduce using rule 148 (opt_Multi)


State 334

  151 valueArgument: opt_simpleIdentifier_EQ opt_Multi • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 352
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 335

  150 opt_Multi: $@12 •

    $default  reduce using rule 150 (opt_Multi)


State 336

  138 multi_comma_valueArgument: multi_comma_valueArgument • COMMA valueArgument
  141 opt_valueArgument: valueArgument multi_comma_valueArgument • opt_comma

    COMMA  shift, and go to state 353

    $default  reduce using rule 68 (opt_comma)

    opt_comma  go to state 354


State 337

  140 multi_comma_valueArgument: $@9 •

    $default  reduce using rule 140 (multi_comma_valueArgument)


State 338

   80 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration • opt_comma RPAREN
   81 multi_comma_variableDeclaration: multi_comma_variableDeclaration • COMMA variableDeclaration

    COMMA  shift, and go to state 355

    $default  reduce using rule 68 (opt_comma)

    opt_comma  go to state 356


State 339

  168 loopStatement: FOR LPAREN variable_multivariable IN expression • RPAREN controlStructureBody

    RPAREN  shift, and go to state 357


State 340

  166 control_structure_body_or_comma: COMMA •

    $default  reduce using rule 166 (control_structure_body_or_comma)


State 341

  167 loopStatement: WHILE LPAREN expression RPAREN control_structure_body_or_comma •

    $default  reduce using rule 167 (loopStatement)


State 342

  165 control_structure_body_or_comma: controlStructureBody •

    $default  reduce using rule 165 (control_structure_body_or_comma)


State 343

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT • multivariable_variableDeclaration opt_eq_exp SEMICOLON

    LPAREN       shift, and go to state 267
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    type                               go to state 66
    parenthesizedType                  go to state 23
    userType                           go to state 24
    simpleUserType                     go to state 25
    nullableType                       go to state 35
    typeRef_parenthesizedType          go to state 27
    multivariable_variableDeclaration  go to state 358
    simpleIdentifier                   go to state 36
    variableDeclaration                go to state 313
    multiVariableDeclaration           go to state 314


State 344

   63 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp • SEMICOLON
   64                    | opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp •

    SEMICOLON  shift, and go to state 359

    SEMICOLON  [reduce using rule 64 (propertyDeclaration)]
    $default   reduce using rule 64 (propertyDeclaration)


State 345

   67 opt_comma: COMMA •
  133 multi_comma_expression: multi_comma_expression COMMA • expression

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    $default  reduce using rule 67 (opt_comma)

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    expression                 go to state 317
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 346

  136 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma • RSQUARE

    RSQUARE  shift, and go to state 360


State 347

  154 controls: controlStructureBody ELSE • controlStructureBody

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 361
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 348

  180 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression • RPAREN

    RPAREN  shift, and go to state 362


State 349

  186 whenEntry: ELSE ARROW controlStructureBody • SEMICOLON
  187          | ELSE ARROW controlStructureBody •

    SEMICOLON  shift, and go to state 363

    $default  reduce using rule 187 (whenEntry)


State 350

  181 multi_comma_whenCondition: multi_comma_whenCondition COMMA • whenCondition
  185 whenEntry: whenCondition multi_comma_whenCondition COMMA • ARROW controlStructureBody

    LPAREN           shift, and go to state 90
    LSQUARE          shift, and go to state 91
    ARROW            shift, and go to state 364
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    IN               shift, and go to state 284
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 101

    postfixUnaryExpression     go to state 102
    parenthesizedExpression    go to state 103
    ifExpression               go to state 104
    functionCall               go to state 105
    dotExpression              go to state 106
    jumpExpression             go to state 107
    whenExpression             go to state 108
    whenCondition              go to state 365
    rangeTest                  go to state 287
    expression                 go to state 288
    disjunction                go to state 110
    conjunction                go to state 111
    equality                   go to state 112
    comparison                 go to state 113
    genericCallLikeComparison  go to state 114
    elvisExpression            go to state 115
    rangeExpression            go to state 116
    additiveExpression         go to state 117
    multiplicativeExpression   go to state 118
    primaryExpression          go to state 119
    collectionLiteral          go to state 120


State 351

  184 whenEntry: whenCondition multi_comma_whenCondition ARROW • controlStructureBody

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 366
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 352

  151 valueArgument: opt_simpleIdentifier_EQ opt_Multi expression •

    $default  reduce using rule 151 (valueArgument)


State 353

   67 opt_comma: COMMA •
  138 multi_comma_valueArgument: multi_comma_valueArgument COMMA • valueArgument

    IMPORT      shift, and go to state 9
    CONST       shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    RPAREN      reduce using rule 67 (opt_comma)
    IDENTIFIER  [reduce using rule 146 ($@11)]
    $default    reduce using rule 146 ($@11)

    simpleIdentifier         go to state 293
    opt_simpleIdentifier_EQ  go to state 296
    $@11                     go to state 297
    valueArgument            go to state 367


State 354

  141 opt_valueArgument: valueArgument multi_comma_valueArgument opt_comma •

    $default  reduce using rule 141 (opt_valueArgument)


State 355

   67 opt_comma: COMMA •
   81 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA • variableDeclaration

    LPAREN       shift, and go to state 22
    IMPORT       shift, and go to state 9
    CONST        shift, and go to state 10
    TYPELITERAL  shift, and go to state 33
    IDENTIFIER   shift, and go to state 11

    $default  reduce using rule 67 (opt_comma)

    type                       go to state 66
    parenthesizedType          go to state 23
    userType                   go to state 24
    simpleUserType             go to state 25
    nullableType               go to state 35
    typeRef_parenthesizedType  go to state 27
    simpleIdentifier           go to state 36
    variableDeclaration        go to state 368


State 356

   80 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma • RPAREN

    RPAREN  shift, and go to state 369


State 357

  168 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN • controlStructureBody

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 370
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 358

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration • opt_eq_exp SEMICOLON

    ASSIGNMENT  shift, and go to state 74

    $default  reduce using rule 58 ($@4)

    opt_eq_exp  go to state 371
    $@4         go to state 76


State 359

   63 propertyDeclaration: opt_modifier val_var opt_typeParameters multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 63 (propertyDeclaration)


State 360

  136 indexingSuffix: LSQUARE expression multi_comma_expression opt_comma RSQUARE •

    $default  reduce using rule 136 (indexingSuffix)


State 361

  154 controls: controlStructureBody ELSE controlStructureBody •

    $default  reduce using rule 154 (controls)


State 362

  180 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN •

    $default  reduce using rule 180 (whenSubject)


State 363

  186 whenEntry: ELSE ARROW controlStructureBody SEMICOLON •

    $default  reduce using rule 186 (whenEntry)


State 364

  185 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW • controlStructureBody

    LPAREN           shift, and go to state 124
    LSQUARE          shift, and go to state 91
    LCURL            shift, and go to state 82
    IMPORT           shift, and go to state 9
    CLASS            shift, and go to state 1
    FUN              shift, and go to state 2
    IF               shift, and go to state 92
    WHEN             shift, and go to state 93
    FOR              shift, and go to state 125
    WHILE            shift, and go to state 126
    RETURN           shift, and go to state 94
    CONTINUE         shift, and go to state 95
    BREAK            shift, and go to state 96
    CONST            shift, and go to state 127
    FLOAT_LITERAL    shift, and go to state 97
    INTEGER_LITERAL  shift, and go to state 98
    BOOLEAN_LITERAL  shift, and go to state 99
    STRING_LITERAL   shift, and go to state 100
    IDENTIFIER       shift, and go to state 128

    LPAREN           [reduce using rule 92 ($@5)]
    LSQUARE          [reduce using rule 92 ($@5)]
    VAL              reduce using rule 42 ($@1)
    VAR              reduce using rule 42 ($@1)
    IF               [reduce using rule 92 ($@5)]
    WHEN             [reduce using rule 92 ($@5)]
    RETURN           [reduce using rule 92 ($@5)]
    CONTINUE         [reduce using rule 92 ($@5)]
    BREAK            [reduce using rule 92 ($@5)]
    FLOAT_LITERAL    [reduce using rule 92 ($@5)]
    INTEGER_LITERAL  [reduce using rule 92 ($@5)]
    BOOLEAN_LITERAL  [reduce using rule 92 ($@5)]
    STRING_LITERAL   [reduce using rule 92 ($@5)]
    IDENTIFIER       [reduce using rule 92 ($@5)]
    $default         reduce using rule 92 ($@5)

    functionDeclaration                        go to state 129
    block                                      go to state 318
    statement                                  go to state 319
    declaration                                go to state 133
    opt_modifier                               go to state 134
    $@1                                        go to state 135
    propertyDeclaration                        go to state 136
    simpleIdentifier                           go to state 137
    classDeclaration                           go to state 138
    assignableExpression                       go to state 139
    multi_unaryPrefix                          go to state 140
    $@5                                        go to state 141
    prefixUnaryExpression                      go to state 142
    parenthesizedAssignableExpression          go to state 143
    assignment                                 go to state 144
    directly_assign                            go to state 145
    directlyAssignableExpression               go to state 146
    parenthesizedDirectlyAssignableExpression  go to state 147
    postfixUnaryExpression                     go to state 148
    parenthesizedExpression                    go to state 103
    ifExpression                               go to state 104
    functionCall                               go to state 105
    dotExpression                              go to state 106
    loopStatement                              go to state 149
    controlStructureBody                       go to state 372
    jumpExpression                             go to state 107
    whenExpression                             go to state 108
    expression                                 go to state 150
    disjunction                                go to state 110
    conjunction                                go to state 111
    equality                                   go to state 112
    comparison                                 go to state 113
    genericCallLikeComparison                  go to state 114
    elvisExpression                            go to state 115
    rangeExpression                            go to state 116
    additiveExpression                         go to state 117
    multiplicativeExpression                   go to state 118
    primaryExpression                          go to state 119
    collectionLiteral                          go to state 120


State 365

  181 multi_comma_whenCondition: multi_comma_whenCondition COMMA whenCondition •

    $default  reduce using rule 181 (multi_comma_whenCondition)


State 366

  184 whenEntry: whenCondition multi_comma_whenCondition ARROW controlStructureBody •

    $default  reduce using rule 184 (whenEntry)


State 367

  138 multi_comma_valueArgument: multi_comma_valueArgument COMMA valueArgument •

    $default  reduce using rule 138 (multi_comma_valueArgument)


State 368

   81 multi_comma_variableDeclaration: multi_comma_variableDeclaration COMMA variableDeclaration •

    $default  reduce using rule 81 (multi_comma_variableDeclaration)


State 369

   80 multiVariableDeclaration: LPAREN variableDeclaration multi_comma_variableDeclaration opt_comma RPAREN •

    $default  reduce using rule 80 (multiVariableDeclaration)


State 370

  168 loopStatement: FOR LPAREN variable_multivariable IN expression RPAREN controlStructureBody •

    $default  reduce using rule 168 (loopStatement)


State 371

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp • SEMICOLON

    SEMICOLON  shift, and go to state 373


State 372

  185 whenEntry: whenCondition multi_comma_whenCondition COMMA ARROW controlStructureBody •

    $default  reduce using rule 185 (whenEntry)


State 373

   62 propertyDeclaration: opt_modifier val_var opt_typeParameters nullableType DOT multivariable_variableDeclaration opt_eq_exp SEMICOLON •

    $default  reduce using rule 62 (propertyDeclaration)
